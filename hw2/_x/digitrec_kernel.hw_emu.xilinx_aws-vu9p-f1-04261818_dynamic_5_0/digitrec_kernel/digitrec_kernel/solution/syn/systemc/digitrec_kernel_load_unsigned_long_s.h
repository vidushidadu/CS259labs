// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2_AR71275_op
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _digitrec_kernel_load_unsigned_long_s_HH_
#define _digitrec_kernel_load_unsigned_long_s_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct digitrec_kernel_load_unsigned_long_s : public sc_module {
    // Port declarations 86
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_logic > m_axi_data_dram_AWVALID;
    sc_in< sc_logic > m_axi_data_dram_AWREADY;
    sc_out< sc_lv<64> > m_axi_data_dram_AWADDR;
    sc_out< sc_lv<1> > m_axi_data_dram_AWID;
    sc_out< sc_lv<32> > m_axi_data_dram_AWLEN;
    sc_out< sc_lv<3> > m_axi_data_dram_AWSIZE;
    sc_out< sc_lv<2> > m_axi_data_dram_AWBURST;
    sc_out< sc_lv<2> > m_axi_data_dram_AWLOCK;
    sc_out< sc_lv<4> > m_axi_data_dram_AWCACHE;
    sc_out< sc_lv<3> > m_axi_data_dram_AWPROT;
    sc_out< sc_lv<4> > m_axi_data_dram_AWQOS;
    sc_out< sc_lv<4> > m_axi_data_dram_AWREGION;
    sc_out< sc_lv<1> > m_axi_data_dram_AWUSER;
    sc_out< sc_logic > m_axi_data_dram_WVALID;
    sc_in< sc_logic > m_axi_data_dram_WREADY;
    sc_out< sc_lv<64> > m_axi_data_dram_WDATA;
    sc_out< sc_lv<8> > m_axi_data_dram_WSTRB;
    sc_out< sc_logic > m_axi_data_dram_WLAST;
    sc_out< sc_lv<1> > m_axi_data_dram_WID;
    sc_out< sc_lv<1> > m_axi_data_dram_WUSER;
    sc_out< sc_logic > m_axi_data_dram_ARVALID;
    sc_in< sc_logic > m_axi_data_dram_ARREADY;
    sc_out< sc_lv<64> > m_axi_data_dram_ARADDR;
    sc_out< sc_lv<1> > m_axi_data_dram_ARID;
    sc_out< sc_lv<32> > m_axi_data_dram_ARLEN;
    sc_out< sc_lv<3> > m_axi_data_dram_ARSIZE;
    sc_out< sc_lv<2> > m_axi_data_dram_ARBURST;
    sc_out< sc_lv<2> > m_axi_data_dram_ARLOCK;
    sc_out< sc_lv<4> > m_axi_data_dram_ARCACHE;
    sc_out< sc_lv<3> > m_axi_data_dram_ARPROT;
    sc_out< sc_lv<4> > m_axi_data_dram_ARQOS;
    sc_out< sc_lv<4> > m_axi_data_dram_ARREGION;
    sc_out< sc_lv<1> > m_axi_data_dram_ARUSER;
    sc_in< sc_logic > m_axi_data_dram_RVALID;
    sc_out< sc_logic > m_axi_data_dram_RREADY;
    sc_in< sc_lv<64> > m_axi_data_dram_RDATA;
    sc_in< sc_logic > m_axi_data_dram_RLAST;
    sc_in< sc_lv<1> > m_axi_data_dram_RID;
    sc_in< sc_lv<1> > m_axi_data_dram_RUSER;
    sc_in< sc_lv<2> > m_axi_data_dram_RRESP;
    sc_in< sc_logic > m_axi_data_dram_BVALID;
    sc_out< sc_logic > m_axi_data_dram_BREADY;
    sc_in< sc_lv<2> > m_axi_data_dram_BRESP;
    sc_in< sc_lv<1> > m_axi_data_dram_BID;
    sc_in< sc_lv<1> > m_axi_data_dram_BUSER;
    sc_in< sc_lv<61> > data_dram_offset;
    sc_in< sc_lv<15> > data_dram_offset1;
    sc_out< sc_lv<8> > data_local_0_address0;
    sc_out< sc_logic > data_local_0_ce0;
    sc_out< sc_logic > data_local_0_we0;
    sc_out< sc_lv<64> > data_local_0_d0;
    sc_out< sc_lv<8> > data_local_1_address0;
    sc_out< sc_logic > data_local_1_ce0;
    sc_out< sc_logic > data_local_1_we0;
    sc_out< sc_lv<64> > data_local_1_d0;
    sc_out< sc_lv<8> > data_local_2_address0;
    sc_out< sc_logic > data_local_2_ce0;
    sc_out< sc_logic > data_local_2_we0;
    sc_out< sc_lv<64> > data_local_2_d0;
    sc_out< sc_lv<8> > data_local_3_address0;
    sc_out< sc_logic > data_local_3_ce0;
    sc_out< sc_logic > data_local_3_we0;
    sc_out< sc_lv<64> > data_local_3_d0;
    sc_out< sc_lv<8> > data_local_4_address0;
    sc_out< sc_logic > data_local_4_ce0;
    sc_out< sc_logic > data_local_4_we0;
    sc_out< sc_lv<64> > data_local_4_d0;
    sc_out< sc_lv<8> > data_local_5_address0;
    sc_out< sc_logic > data_local_5_ce0;
    sc_out< sc_logic > data_local_5_we0;
    sc_out< sc_lv<64> > data_local_5_d0;
    sc_out< sc_lv<8> > data_local_6_address0;
    sc_out< sc_logic > data_local_6_ce0;
    sc_out< sc_logic > data_local_6_we0;
    sc_out< sc_lv<64> > data_local_6_d0;
    sc_out< sc_lv<8> > data_local_7_address0;
    sc_out< sc_logic > data_local_7_ce0;
    sc_out< sc_logic > data_local_7_we0;
    sc_out< sc_lv<64> > data_local_7_d0;
    sc_in< sc_lv<11> > num_elem;


    // Module declarations
    digitrec_kernel_load_unsigned_long_s(sc_module_name name);
    SC_HAS_PROCESS(digitrec_kernel_load_unsigned_long_s);

    ~digitrec_kernel_load_unsigned_long_s();

    sc_trace_file* mVcdFile;

    sc_signal< sc_lv<10> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > data_dram_blk_n_AR;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_logic > data_dram_blk_n_R;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<11> > i_reg_225;
    sc_signal< sc_lv<62> > sum2_fu_244_p2;
    sc_signal< sc_lv<62> > sum2_reg_301;
    sc_signal< sc_logic > ap_sig_ioackin_m_axi_data_dram_ARREADY;
    sc_signal< sc_lv<1> > exitcond_fu_265_p2;
    sc_signal< bool > ap_block_state9_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state10_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state11_pp0_stage0_iter2;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<11> > i_1_fu_270_p2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<3> > tmp_fu_276_p1;
    sc_signal< sc_lv<3> > tmp_reg_331;
    sc_signal< sc_lv<3> > tmp_reg_331_pp0_iter1_reg;
    sc_signal< sc_lv<8> > newIndex_reg_335;
    sc_signal< sc_lv<8> > newIndex_reg_335_pp0_iter1_reg;
    sc_signal< sc_lv<64> > data_dram_addr_read_reg_340;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state9;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_lv<64> > newIndex8_fu_290_p1;
    sc_signal< sc_lv<64> > sum2_cast_fu_250_p1;
    sc_signal< sc_logic > ap_reg_ioackin_m_axi_data_dram_ARREADY;
    sc_signal< sc_lv<62> > data_dram_offset_cast_fu_240_p1;
    sc_signal< sc_lv<62> > tmp_23_cast_fu_236_p1;
    sc_signal< sc_logic > ap_CS_fsm_state12;
    sc_signal< sc_lv<10> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<10> ap_ST_fsm_state1;
    static const sc_lv<10> ap_ST_fsm_state2;
    static const sc_lv<10> ap_ST_fsm_state3;
    static const sc_lv<10> ap_ST_fsm_state4;
    static const sc_lv<10> ap_ST_fsm_state5;
    static const sc_lv<10> ap_ST_fsm_state6;
    static const sc_lv<10> ap_ST_fsm_state7;
    static const sc_lv<10> ap_ST_fsm_state8;
    static const sc_lv<10> ap_ST_fsm_pp0_stage0;
    static const sc_lv<10> ap_ST_fsm_state12;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<64> ap_const_lv64_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_8;
    static const bool ap_const_boolean_0;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<11> ap_const_lv11_0;
    static const sc_lv<3> ap_const_lv3_6;
    static const sc_lv<3> ap_const_lv3_5;
    static const sc_lv<3> ap_const_lv3_4;
    static const sc_lv<3> ap_const_lv3_3;
    static const sc_lv<3> ap_const_lv3_2;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<3> ap_const_lv3_7;
    static const sc_lv<11> ap_const_lv11_1;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_9;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state12();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state8();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state10_pp0_stage0_iter1();
    void thread_ap_block_state11_pp0_stage0_iter2();
    void thread_ap_block_state9_pp0_stage0_iter0();
    void thread_ap_condition_pp0_exit_iter0_state9();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_ready();
    void thread_ap_sig_ioackin_m_axi_data_dram_ARREADY();
    void thread_data_dram_blk_n_AR();
    void thread_data_dram_blk_n_R();
    void thread_data_dram_offset_cast_fu_240_p1();
    void thread_data_local_0_address0();
    void thread_data_local_0_ce0();
    void thread_data_local_0_d0();
    void thread_data_local_0_we0();
    void thread_data_local_1_address0();
    void thread_data_local_1_ce0();
    void thread_data_local_1_d0();
    void thread_data_local_1_we0();
    void thread_data_local_2_address0();
    void thread_data_local_2_ce0();
    void thread_data_local_2_d0();
    void thread_data_local_2_we0();
    void thread_data_local_3_address0();
    void thread_data_local_3_ce0();
    void thread_data_local_3_d0();
    void thread_data_local_3_we0();
    void thread_data_local_4_address0();
    void thread_data_local_4_ce0();
    void thread_data_local_4_d0();
    void thread_data_local_4_we0();
    void thread_data_local_5_address0();
    void thread_data_local_5_ce0();
    void thread_data_local_5_d0();
    void thread_data_local_5_we0();
    void thread_data_local_6_address0();
    void thread_data_local_6_ce0();
    void thread_data_local_6_d0();
    void thread_data_local_6_we0();
    void thread_data_local_7_address0();
    void thread_data_local_7_ce0();
    void thread_data_local_7_d0();
    void thread_data_local_7_we0();
    void thread_exitcond_fu_265_p2();
    void thread_i_1_fu_270_p2();
    void thread_m_axi_data_dram_ARADDR();
    void thread_m_axi_data_dram_ARBURST();
    void thread_m_axi_data_dram_ARCACHE();
    void thread_m_axi_data_dram_ARID();
    void thread_m_axi_data_dram_ARLEN();
    void thread_m_axi_data_dram_ARLOCK();
    void thread_m_axi_data_dram_ARPROT();
    void thread_m_axi_data_dram_ARQOS();
    void thread_m_axi_data_dram_ARREGION();
    void thread_m_axi_data_dram_ARSIZE();
    void thread_m_axi_data_dram_ARUSER();
    void thread_m_axi_data_dram_ARVALID();
    void thread_m_axi_data_dram_AWADDR();
    void thread_m_axi_data_dram_AWBURST();
    void thread_m_axi_data_dram_AWCACHE();
    void thread_m_axi_data_dram_AWID();
    void thread_m_axi_data_dram_AWLEN();
    void thread_m_axi_data_dram_AWLOCK();
    void thread_m_axi_data_dram_AWPROT();
    void thread_m_axi_data_dram_AWQOS();
    void thread_m_axi_data_dram_AWREGION();
    void thread_m_axi_data_dram_AWSIZE();
    void thread_m_axi_data_dram_AWUSER();
    void thread_m_axi_data_dram_AWVALID();
    void thread_m_axi_data_dram_BREADY();
    void thread_m_axi_data_dram_RREADY();
    void thread_m_axi_data_dram_WDATA();
    void thread_m_axi_data_dram_WID();
    void thread_m_axi_data_dram_WLAST();
    void thread_m_axi_data_dram_WSTRB();
    void thread_m_axi_data_dram_WUSER();
    void thread_m_axi_data_dram_WVALID();
    void thread_newIndex8_fu_290_p1();
    void thread_sum2_cast_fu_250_p1();
    void thread_sum2_fu_244_p2();
    void thread_tmp_23_cast_fu_236_p1();
    void thread_tmp_fu_276_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
