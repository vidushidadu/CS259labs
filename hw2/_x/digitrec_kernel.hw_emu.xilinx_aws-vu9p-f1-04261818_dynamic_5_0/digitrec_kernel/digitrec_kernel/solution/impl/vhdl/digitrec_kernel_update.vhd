-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2_AR71275_op
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity digitrec_kernel_update is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    temp_0_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    temp_0_ce0 : OUT STD_LOGIC;
    temp_0_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    temp_1_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    temp_1_ce0 : OUT STD_LOGIC;
    temp_1_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    temp_2_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    temp_2_ce0 : OUT STD_LOGIC;
    temp_2_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    temp_3_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    temp_3_ce0 : OUT STD_LOGIC;
    temp_3_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    temp_4_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    temp_4_ce0 : OUT STD_LOGIC;
    temp_4_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    temp_5_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    temp_5_ce0 : OUT STD_LOGIC;
    temp_5_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    temp_6_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    temp_6_ce0 : OUT STD_LOGIC;
    temp_6_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    temp_7_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    temp_7_ce0 : OUT STD_LOGIC;
    temp_7_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    knn_mat_0_0_read : IN STD_LOGIC_VECTOR (7 downto 0);
    knn_mat_0_1_read : IN STD_LOGIC_VECTOR (7 downto 0);
    knn_mat_0_2_read : IN STD_LOGIC_VECTOR (7 downto 0);
    knn_mat_0_3_read : IN STD_LOGIC_VECTOR (7 downto 0);
    knn_mat_1_0_read : IN STD_LOGIC_VECTOR (7 downto 0);
    knn_mat_1_1_read : IN STD_LOGIC_VECTOR (7 downto 0);
    knn_mat_1_2_read : IN STD_LOGIC_VECTOR (7 downto 0);
    knn_mat_1_3_read : IN STD_LOGIC_VECTOR (7 downto 0);
    knn_mat_2_0_read : IN STD_LOGIC_VECTOR (7 downto 0);
    knn_mat_2_1_read : IN STD_LOGIC_VECTOR (7 downto 0);
    knn_mat_2_2_read : IN STD_LOGIC_VECTOR (7 downto 0);
    knn_mat_2_3_read : IN STD_LOGIC_VECTOR (7 downto 0);
    knn_mat_3_0_read : IN STD_LOGIC_VECTOR (7 downto 0);
    knn_mat_3_1_read : IN STD_LOGIC_VECTOR (7 downto 0);
    knn_mat_3_2_read : IN STD_LOGIC_VECTOR (7 downto 0);
    knn_mat_3_3_read : IN STD_LOGIC_VECTOR (7 downto 0);
    knn_mat_4_0_read : IN STD_LOGIC_VECTOR (7 downto 0);
    knn_mat_4_1_read : IN STD_LOGIC_VECTOR (7 downto 0);
    knn_mat_4_2_read : IN STD_LOGIC_VECTOR (7 downto 0);
    knn_mat_4_3_read : IN STD_LOGIC_VECTOR (7 downto 0);
    knn_mat_5_0_read : IN STD_LOGIC_VECTOR (7 downto 0);
    knn_mat_5_1_read : IN STD_LOGIC_VECTOR (7 downto 0);
    knn_mat_5_2_read : IN STD_LOGIC_VECTOR (7 downto 0);
    knn_mat_5_3_read : IN STD_LOGIC_VECTOR (7 downto 0);
    knn_mat_6_0_read : IN STD_LOGIC_VECTOR (7 downto 0);
    knn_mat_6_1_read : IN STD_LOGIC_VECTOR (7 downto 0);
    knn_mat_6_2_read : IN STD_LOGIC_VECTOR (7 downto 0);
    knn_mat_7_0_read : IN STD_LOGIC_VECTOR (7 downto 0);
    knn_mat_7_1_read : IN STD_LOGIC_VECTOR (7 downto 0);
    knn_mat_7_2_read : IN STD_LOGIC_VECTOR (7 downto 0);
    ap_return_0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_2 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_3 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_4 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_5 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_6 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_7 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_8 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_9 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_10 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_11 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_12 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_13 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_14 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_15 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_16 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_17 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_18 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_19 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_20 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_21 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_22 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_23 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_24 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_25 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_26 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_27 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_28 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_29 : OUT STD_LOGIC_VECTOR (7 downto 0) );
end;


architecture behav of digitrec_kernel_update is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (4 downto 0) := "01000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv11_708 : STD_LOGIC_VECTOR (10 downto 0) := "11100001000";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_CS_fsm : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal y3_1_fu_974_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal y3_1_reg_2302 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal i1_1_fu_1166_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal i1_1_reg_2310 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal grp_fu_710_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal exitcond_fu_1160_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_24_fu_1172_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_fu_722_p6 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_736_p6 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_750_p6 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_764_p6 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_778_p6 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_792_p6 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_806_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_12_fu_1176_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_12_reg_2358 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_max_id_fu_1226_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal y3_reg_552 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_phi_mux_max_id_phi_fu_568_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal max_id_reg_564 : STD_LOGIC_VECTOR (63 downto 0);
    signal exitcond1_fu_968_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i1_reg_576 : STD_LOGIC_VECTOR (1 downto 0);
    signal knn_mat_load_1_0_phi_reg_588 : STD_LOGIC_VECTOR (7 downto 0);
    signal newIndex1_fu_1190_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal knn_mat_7_2_fu_148 : STD_LOGIC_VECTOR (7 downto 0);
    signal knn_mat_7_2_3_fu_2002_p6 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_11_fu_1389_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_23_fu_1259_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal knn_mat_7_1_fu_152 : STD_LOGIC_VECTOR (7 downto 0);
    signal knn_mat_7_1_3_fu_2016_p6 : STD_LOGIC_VECTOR (7 downto 0);
    signal knn_mat_7_0_fu_156 : STD_LOGIC_VECTOR (7 downto 0);
    signal knn_mat_7_0_3_fu_2030_p6 : STD_LOGIC_VECTOR (7 downto 0);
    signal knn_mat_6_2_fu_160 : STD_LOGIC_VECTOR (7 downto 0);
    signal knn_mat_6_2_3_fu_1408_p6 : STD_LOGIC_VECTOR (7 downto 0);
    signal knn_mat_6_1_fu_164 : STD_LOGIC_VECTOR (7 downto 0);
    signal knn_mat_6_1_3_fu_1422_p6 : STD_LOGIC_VECTOR (7 downto 0);
    signal knn_mat_6_0_fu_168 : STD_LOGIC_VECTOR (7 downto 0);
    signal knn_mat_6_0_3_fu_1436_p6 : STD_LOGIC_VECTOR (7 downto 0);
    signal knn_mat_5_3_fu_172 : STD_LOGIC_VECTOR (7 downto 0);
    signal knn_mat_5_3_3_fu_1477_p6 : STD_LOGIC_VECTOR (7 downto 0);
    signal knn_mat_5_2_fu_176 : STD_LOGIC_VECTOR (7 downto 0);
    signal knn_mat_5_2_3_fu_1491_p6 : STD_LOGIC_VECTOR (7 downto 0);
    signal knn_mat_5_1_fu_180 : STD_LOGIC_VECTOR (7 downto 0);
    signal knn_mat_5_1_3_fu_1505_p6 : STD_LOGIC_VECTOR (7 downto 0);
    signal knn_mat_5_0_fu_184 : STD_LOGIC_VECTOR (7 downto 0);
    signal knn_mat_5_0_3_fu_1519_p6 : STD_LOGIC_VECTOR (7 downto 0);
    signal knn_mat_4_3_fu_188 : STD_LOGIC_VECTOR (7 downto 0);
    signal knn_mat_4_3_3_fu_1565_p6 : STD_LOGIC_VECTOR (7 downto 0);
    signal knn_mat_4_2_fu_192 : STD_LOGIC_VECTOR (7 downto 0);
    signal knn_mat_4_2_3_fu_1579_p6 : STD_LOGIC_VECTOR (7 downto 0);
    signal knn_mat_4_1_fu_196 : STD_LOGIC_VECTOR (7 downto 0);
    signal knn_mat_4_1_3_fu_1593_p6 : STD_LOGIC_VECTOR (7 downto 0);
    signal knn_mat_4_0_fu_200 : STD_LOGIC_VECTOR (7 downto 0);
    signal knn_mat_4_0_3_fu_1607_p6 : STD_LOGIC_VECTOR (7 downto 0);
    signal knn_mat_3_3_fu_204 : STD_LOGIC_VECTOR (7 downto 0);
    signal knn_mat_3_3_3_fu_1653_p6 : STD_LOGIC_VECTOR (7 downto 0);
    signal knn_mat_3_2_fu_208 : STD_LOGIC_VECTOR (7 downto 0);
    signal knn_mat_3_2_3_fu_1667_p6 : STD_LOGIC_VECTOR (7 downto 0);
    signal knn_mat_3_1_fu_212 : STD_LOGIC_VECTOR (7 downto 0);
    signal knn_mat_3_1_3_fu_1681_p6 : STD_LOGIC_VECTOR (7 downto 0);
    signal knn_mat_3_0_fu_216 : STD_LOGIC_VECTOR (7 downto 0);
    signal knn_mat_3_0_3_fu_1695_p6 : STD_LOGIC_VECTOR (7 downto 0);
    signal knn_mat_2_3_fu_220 : STD_LOGIC_VECTOR (7 downto 0);
    signal knn_mat_2_3_3_fu_1741_p6 : STD_LOGIC_VECTOR (7 downto 0);
    signal knn_mat_2_2_fu_224 : STD_LOGIC_VECTOR (7 downto 0);
    signal knn_mat_2_2_3_fu_1755_p6 : STD_LOGIC_VECTOR (7 downto 0);
    signal knn_mat_2_1_fu_228 : STD_LOGIC_VECTOR (7 downto 0);
    signal knn_mat_2_1_3_fu_1769_p6 : STD_LOGIC_VECTOR (7 downto 0);
    signal knn_mat_2_0_fu_232 : STD_LOGIC_VECTOR (7 downto 0);
    signal knn_mat_2_0_3_fu_1783_p6 : STD_LOGIC_VECTOR (7 downto 0);
    signal knn_mat_1_3_fu_236 : STD_LOGIC_VECTOR (7 downto 0);
    signal knn_mat_1_3_3_fu_1829_p6 : STD_LOGIC_VECTOR (7 downto 0);
    signal knn_mat_1_2_fu_240 : STD_LOGIC_VECTOR (7 downto 0);
    signal knn_mat_1_2_3_fu_1843_p6 : STD_LOGIC_VECTOR (7 downto 0);
    signal knn_mat_1_1_fu_244 : STD_LOGIC_VECTOR (7 downto 0);
    signal knn_mat_1_1_3_fu_1857_p6 : STD_LOGIC_VECTOR (7 downto 0);
    signal knn_mat_1_0_fu_248 : STD_LOGIC_VECTOR (7 downto 0);
    signal knn_mat_1_0_3_fu_1871_p6 : STD_LOGIC_VECTOR (7 downto 0);
    signal knn_mat_0_3_fu_252 : STD_LOGIC_VECTOR (7 downto 0);
    signal knn_mat_0_3_3_fu_1917_p6 : STD_LOGIC_VECTOR (7 downto 0);
    signal knn_mat_0_2_fu_256 : STD_LOGIC_VECTOR (7 downto 0);
    signal knn_mat_0_2_3_fu_1931_p6 : STD_LOGIC_VECTOR (7 downto 0);
    signal knn_mat_0_1_fu_260 : STD_LOGIC_VECTOR (7 downto 0);
    signal knn_mat_0_1_3_fu_1945_p6 : STD_LOGIC_VECTOR (7 downto 0);
    signal knn_mat_0_0_fu_264 : STD_LOGIC_VECTOR (7 downto 0);
    signal knn_mat_0_0_3_fu_1959_p6 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_699_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_710_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_722_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_736_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_750_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_764_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_778_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_792_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_806_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal newIndex_fu_1180_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal knn_mat_load_2_0_phi_fu_1206_p6 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_22_fu_1220_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_21_fu_1202_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_2_fu_1237_p9 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp3_fu_1299_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp1_fu_1293_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp8_fu_1287_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp6_fu_1281_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp4_fu_1275_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp2_fu_1269_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp_fu_1263_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_fu_1313_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal newSel_fu_1305_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal newSel1_fu_1319_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_cond1_fu_1327_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond2_fu_1341_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal newSel2_fu_1333_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal newSel3_fu_1347_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_cond3_fu_1363_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal newSel4_fu_1355_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal newSel5_fu_1369_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal newSel6_fu_1377_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_2_fu_1237_p10 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_s_fu_1385_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_25_fu_1395_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal knn_mat_6_2_3_fu_1408_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal knn_mat_6_1_3_fu_1422_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal knn_mat_6_0_3_fu_1436_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal knn_mat_5_3_3_fu_1477_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal knn_mat_5_2_3_fu_1491_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal knn_mat_5_1_3_fu_1505_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal knn_mat_5_0_3_fu_1519_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal knn_mat_4_3_3_fu_1565_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal knn_mat_4_2_3_fu_1579_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal knn_mat_4_1_3_fu_1593_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal knn_mat_4_0_3_fu_1607_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal knn_mat_3_3_3_fu_1653_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal knn_mat_3_2_3_fu_1667_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal knn_mat_3_1_3_fu_1681_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal knn_mat_3_0_3_fu_1695_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal knn_mat_2_3_3_fu_1741_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal knn_mat_2_2_3_fu_1755_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal knn_mat_2_1_3_fu_1769_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal knn_mat_2_0_3_fu_1783_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal knn_mat_1_3_3_fu_1829_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal knn_mat_1_2_3_fu_1843_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal knn_mat_1_1_3_fu_1857_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal knn_mat_1_0_3_fu_1871_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal knn_mat_0_3_3_fu_1917_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal knn_mat_0_2_3_fu_1931_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal knn_mat_0_1_3_fu_1945_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal knn_mat_0_0_3_fu_1959_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal knn_mat_7_2_3_fu_2002_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal knn_mat_7_1_3_fu_2016_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal knn_mat_7_0_3_fu_2030_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (4 downto 0);

    component digitrec_kernel_digitrec_kernel_mux_32_8_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (7 downto 0);
        din3 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component digitrec_kernel_digitrec_kernel_mux_42_8_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (7 downto 0);
        din3 : IN STD_LOGIC_VECTOR (7 downto 0);
        din4 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component digitrec_kernel_digitrec_kernel_mux_832_64_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        din7_WIDTH : INTEGER;
        din8_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        din2 : IN STD_LOGIC_VECTOR (63 downto 0);
        din3 : IN STD_LOGIC_VECTOR (63 downto 0);
        din4 : IN STD_LOGIC_VECTOR (63 downto 0);
        din5 : IN STD_LOGIC_VECTOR (63 downto 0);
        din6 : IN STD_LOGIC_VECTOR (63 downto 0);
        din7 : IN STD_LOGIC_VECTOR (63 downto 0);
        din8 : IN STD_LOGIC_VECTOR (31 downto 0);
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;



begin
    digitrec_kernel_mux_32_8_1_1_U13 : component digitrec_kernel_digitrec_kernel_mux_32_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => knn_mat_6_0_fu_168,
        din1 => knn_mat_6_1_fu_164,
        din2 => knn_mat_6_2_fu_160,
        din3 => grp_fu_710_p4,
        dout => grp_fu_710_p5);

    digitrec_kernel_mux_42_8_1_1_U14 : component digitrec_kernel_digitrec_kernel_mux_42_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => knn_mat_5_0_fu_184,
        din1 => knn_mat_5_1_fu_180,
        din2 => knn_mat_5_2_fu_176,
        din3 => knn_mat_5_3_fu_172,
        din4 => grp_fu_722_p5,
        dout => grp_fu_722_p6);

    digitrec_kernel_mux_42_8_1_1_U15 : component digitrec_kernel_digitrec_kernel_mux_42_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => knn_mat_4_0_fu_200,
        din1 => knn_mat_4_1_fu_196,
        din2 => knn_mat_4_2_fu_192,
        din3 => knn_mat_4_3_fu_188,
        din4 => grp_fu_736_p5,
        dout => grp_fu_736_p6);

    digitrec_kernel_mux_42_8_1_1_U16 : component digitrec_kernel_digitrec_kernel_mux_42_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => knn_mat_3_0_fu_216,
        din1 => knn_mat_3_1_fu_212,
        din2 => knn_mat_3_2_fu_208,
        din3 => knn_mat_3_3_fu_204,
        din4 => grp_fu_750_p5,
        dout => grp_fu_750_p6);

    digitrec_kernel_mux_42_8_1_1_U17 : component digitrec_kernel_digitrec_kernel_mux_42_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => knn_mat_2_0_fu_232,
        din1 => knn_mat_2_1_fu_228,
        din2 => knn_mat_2_2_fu_224,
        din3 => knn_mat_2_3_fu_220,
        din4 => grp_fu_764_p5,
        dout => grp_fu_764_p6);

    digitrec_kernel_mux_42_8_1_1_U18 : component digitrec_kernel_digitrec_kernel_mux_42_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => knn_mat_1_0_fu_248,
        din1 => knn_mat_1_1_fu_244,
        din2 => knn_mat_1_2_fu_240,
        din3 => knn_mat_1_3_fu_236,
        din4 => grp_fu_778_p5,
        dout => grp_fu_778_p6);

    digitrec_kernel_mux_42_8_1_1_U19 : component digitrec_kernel_digitrec_kernel_mux_42_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => knn_mat_0_0_fu_264,
        din1 => knn_mat_0_1_fu_260,
        din2 => knn_mat_0_2_fu_256,
        din3 => knn_mat_0_3_fu_252,
        din4 => grp_fu_792_p5,
        dout => grp_fu_792_p6);

    digitrec_kernel_mux_32_8_1_1_U20 : component digitrec_kernel_digitrec_kernel_mux_32_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => knn_mat_7_0_fu_156,
        din1 => knn_mat_7_1_fu_152,
        din2 => knn_mat_7_2_fu_148,
        din3 => grp_fu_806_p4,
        dout => grp_fu_806_p5);

    digitrec_kernel_mux_42_8_1_1_U21 : component digitrec_kernel_digitrec_kernel_mux_42_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => knn_mat_0_0_fu_264,
        din1 => knn_mat_1_0_fu_248,
        din2 => knn_mat_2_0_fu_232,
        din3 => knn_mat_3_0_fu_216,
        din4 => i1_reg_576,
        dout => knn_mat_load_2_0_phi_fu_1206_p6);

    digitrec_kernel_mux_832_64_1_1_U22 : component digitrec_kernel_digitrec_kernel_mux_832_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        din2_WIDTH => 64,
        din3_WIDTH => 64,
        din4_WIDTH => 64,
        din5_WIDTH => 64,
        din6_WIDTH => 64,
        din7_WIDTH => 64,
        din8_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => temp_0_q0,
        din1 => temp_1_q0,
        din2 => temp_2_q0,
        din3 => temp_3_q0,
        din4 => temp_4_q0,
        din5 => temp_5_q0,
        din6 => temp_6_q0,
        din7 => temp_7_q0,
        din8 => tmp_2_fu_1237_p9,
        dout => tmp_2_fu_1237_p10);

    digitrec_kernel_mux_42_8_1_1_U23 : component digitrec_kernel_digitrec_kernel_mux_42_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => knn_mat_6_2_fu_160,
        din1 => knn_mat_6_2_fu_160,
        din2 => tmp_25_fu_1395_p1,
        din3 => tmp_25_fu_1395_p1,
        din4 => knn_mat_6_2_3_fu_1408_p5,
        dout => knn_mat_6_2_3_fu_1408_p6);

    digitrec_kernel_mux_42_8_1_1_U24 : component digitrec_kernel_digitrec_kernel_mux_42_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => knn_mat_6_1_fu_164,
        din1 => tmp_25_fu_1395_p1,
        din2 => knn_mat_6_1_fu_164,
        din3 => knn_mat_6_1_fu_164,
        din4 => knn_mat_6_1_3_fu_1422_p5,
        dout => knn_mat_6_1_3_fu_1422_p6);

    digitrec_kernel_mux_42_8_1_1_U25 : component digitrec_kernel_digitrec_kernel_mux_42_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => tmp_25_fu_1395_p1,
        din1 => knn_mat_6_0_fu_168,
        din2 => knn_mat_6_0_fu_168,
        din3 => knn_mat_6_0_fu_168,
        din4 => knn_mat_6_0_3_fu_1436_p5,
        dout => knn_mat_6_0_3_fu_1436_p6);

    digitrec_kernel_mux_42_8_1_1_U26 : component digitrec_kernel_digitrec_kernel_mux_42_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => knn_mat_5_3_fu_172,
        din1 => knn_mat_5_3_fu_172,
        din2 => knn_mat_5_3_fu_172,
        din3 => tmp_25_fu_1395_p1,
        din4 => knn_mat_5_3_3_fu_1477_p5,
        dout => knn_mat_5_3_3_fu_1477_p6);

    digitrec_kernel_mux_42_8_1_1_U27 : component digitrec_kernel_digitrec_kernel_mux_42_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => knn_mat_5_2_fu_176,
        din1 => knn_mat_5_2_fu_176,
        din2 => tmp_25_fu_1395_p1,
        din3 => knn_mat_5_2_fu_176,
        din4 => knn_mat_5_2_3_fu_1491_p5,
        dout => knn_mat_5_2_3_fu_1491_p6);

    digitrec_kernel_mux_42_8_1_1_U28 : component digitrec_kernel_digitrec_kernel_mux_42_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => knn_mat_5_1_fu_180,
        din1 => tmp_25_fu_1395_p1,
        din2 => knn_mat_5_1_fu_180,
        din3 => knn_mat_5_1_fu_180,
        din4 => knn_mat_5_1_3_fu_1505_p5,
        dout => knn_mat_5_1_3_fu_1505_p6);

    digitrec_kernel_mux_42_8_1_1_U29 : component digitrec_kernel_digitrec_kernel_mux_42_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => tmp_25_fu_1395_p1,
        din1 => knn_mat_5_0_fu_184,
        din2 => knn_mat_5_0_fu_184,
        din3 => knn_mat_5_0_fu_184,
        din4 => knn_mat_5_0_3_fu_1519_p5,
        dout => knn_mat_5_0_3_fu_1519_p6);

    digitrec_kernel_mux_42_8_1_1_U30 : component digitrec_kernel_digitrec_kernel_mux_42_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => knn_mat_4_3_fu_188,
        din1 => knn_mat_4_3_fu_188,
        din2 => knn_mat_4_3_fu_188,
        din3 => tmp_25_fu_1395_p1,
        din4 => knn_mat_4_3_3_fu_1565_p5,
        dout => knn_mat_4_3_3_fu_1565_p6);

    digitrec_kernel_mux_42_8_1_1_U31 : component digitrec_kernel_digitrec_kernel_mux_42_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => knn_mat_4_2_fu_192,
        din1 => knn_mat_4_2_fu_192,
        din2 => tmp_25_fu_1395_p1,
        din3 => knn_mat_4_2_fu_192,
        din4 => knn_mat_4_2_3_fu_1579_p5,
        dout => knn_mat_4_2_3_fu_1579_p6);

    digitrec_kernel_mux_42_8_1_1_U32 : component digitrec_kernel_digitrec_kernel_mux_42_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => knn_mat_4_1_fu_196,
        din1 => tmp_25_fu_1395_p1,
        din2 => knn_mat_4_1_fu_196,
        din3 => knn_mat_4_1_fu_196,
        din4 => knn_mat_4_1_3_fu_1593_p5,
        dout => knn_mat_4_1_3_fu_1593_p6);

    digitrec_kernel_mux_42_8_1_1_U33 : component digitrec_kernel_digitrec_kernel_mux_42_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => tmp_25_fu_1395_p1,
        din1 => knn_mat_4_0_fu_200,
        din2 => knn_mat_4_0_fu_200,
        din3 => knn_mat_4_0_fu_200,
        din4 => knn_mat_4_0_3_fu_1607_p5,
        dout => knn_mat_4_0_3_fu_1607_p6);

    digitrec_kernel_mux_42_8_1_1_U34 : component digitrec_kernel_digitrec_kernel_mux_42_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => knn_mat_3_3_fu_204,
        din1 => knn_mat_3_3_fu_204,
        din2 => knn_mat_3_3_fu_204,
        din3 => tmp_25_fu_1395_p1,
        din4 => knn_mat_3_3_3_fu_1653_p5,
        dout => knn_mat_3_3_3_fu_1653_p6);

    digitrec_kernel_mux_42_8_1_1_U35 : component digitrec_kernel_digitrec_kernel_mux_42_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => knn_mat_3_2_fu_208,
        din1 => knn_mat_3_2_fu_208,
        din2 => tmp_25_fu_1395_p1,
        din3 => knn_mat_3_2_fu_208,
        din4 => knn_mat_3_2_3_fu_1667_p5,
        dout => knn_mat_3_2_3_fu_1667_p6);

    digitrec_kernel_mux_42_8_1_1_U36 : component digitrec_kernel_digitrec_kernel_mux_42_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => knn_mat_3_1_fu_212,
        din1 => tmp_25_fu_1395_p1,
        din2 => knn_mat_3_1_fu_212,
        din3 => knn_mat_3_1_fu_212,
        din4 => knn_mat_3_1_3_fu_1681_p5,
        dout => knn_mat_3_1_3_fu_1681_p6);

    digitrec_kernel_mux_42_8_1_1_U37 : component digitrec_kernel_digitrec_kernel_mux_42_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => tmp_25_fu_1395_p1,
        din1 => knn_mat_3_0_fu_216,
        din2 => knn_mat_3_0_fu_216,
        din3 => knn_mat_3_0_fu_216,
        din4 => knn_mat_3_0_3_fu_1695_p5,
        dout => knn_mat_3_0_3_fu_1695_p6);

    digitrec_kernel_mux_42_8_1_1_U38 : component digitrec_kernel_digitrec_kernel_mux_42_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => knn_mat_2_3_fu_220,
        din1 => knn_mat_2_3_fu_220,
        din2 => knn_mat_2_3_fu_220,
        din3 => tmp_25_fu_1395_p1,
        din4 => knn_mat_2_3_3_fu_1741_p5,
        dout => knn_mat_2_3_3_fu_1741_p6);

    digitrec_kernel_mux_42_8_1_1_U39 : component digitrec_kernel_digitrec_kernel_mux_42_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => knn_mat_2_2_fu_224,
        din1 => knn_mat_2_2_fu_224,
        din2 => tmp_25_fu_1395_p1,
        din3 => knn_mat_2_2_fu_224,
        din4 => knn_mat_2_2_3_fu_1755_p5,
        dout => knn_mat_2_2_3_fu_1755_p6);

    digitrec_kernel_mux_42_8_1_1_U40 : component digitrec_kernel_digitrec_kernel_mux_42_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => knn_mat_2_1_fu_228,
        din1 => tmp_25_fu_1395_p1,
        din2 => knn_mat_2_1_fu_228,
        din3 => knn_mat_2_1_fu_228,
        din4 => knn_mat_2_1_3_fu_1769_p5,
        dout => knn_mat_2_1_3_fu_1769_p6);

    digitrec_kernel_mux_42_8_1_1_U41 : component digitrec_kernel_digitrec_kernel_mux_42_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => tmp_25_fu_1395_p1,
        din1 => knn_mat_2_0_fu_232,
        din2 => knn_mat_2_0_fu_232,
        din3 => knn_mat_2_0_fu_232,
        din4 => knn_mat_2_0_3_fu_1783_p5,
        dout => knn_mat_2_0_3_fu_1783_p6);

    digitrec_kernel_mux_42_8_1_1_U42 : component digitrec_kernel_digitrec_kernel_mux_42_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => knn_mat_1_3_fu_236,
        din1 => knn_mat_1_3_fu_236,
        din2 => knn_mat_1_3_fu_236,
        din3 => tmp_25_fu_1395_p1,
        din4 => knn_mat_1_3_3_fu_1829_p5,
        dout => knn_mat_1_3_3_fu_1829_p6);

    digitrec_kernel_mux_42_8_1_1_U43 : component digitrec_kernel_digitrec_kernel_mux_42_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => knn_mat_1_2_fu_240,
        din1 => knn_mat_1_2_fu_240,
        din2 => tmp_25_fu_1395_p1,
        din3 => knn_mat_1_2_fu_240,
        din4 => knn_mat_1_2_3_fu_1843_p5,
        dout => knn_mat_1_2_3_fu_1843_p6);

    digitrec_kernel_mux_42_8_1_1_U44 : component digitrec_kernel_digitrec_kernel_mux_42_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => knn_mat_1_1_fu_244,
        din1 => tmp_25_fu_1395_p1,
        din2 => knn_mat_1_1_fu_244,
        din3 => knn_mat_1_1_fu_244,
        din4 => knn_mat_1_1_3_fu_1857_p5,
        dout => knn_mat_1_1_3_fu_1857_p6);

    digitrec_kernel_mux_42_8_1_1_U45 : component digitrec_kernel_digitrec_kernel_mux_42_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => tmp_25_fu_1395_p1,
        din1 => knn_mat_1_0_fu_248,
        din2 => knn_mat_1_0_fu_248,
        din3 => knn_mat_1_0_fu_248,
        din4 => knn_mat_1_0_3_fu_1871_p5,
        dout => knn_mat_1_0_3_fu_1871_p6);

    digitrec_kernel_mux_42_8_1_1_U46 : component digitrec_kernel_digitrec_kernel_mux_42_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => knn_mat_0_3_fu_252,
        din1 => knn_mat_0_3_fu_252,
        din2 => knn_mat_0_3_fu_252,
        din3 => tmp_25_fu_1395_p1,
        din4 => knn_mat_0_3_3_fu_1917_p5,
        dout => knn_mat_0_3_3_fu_1917_p6);

    digitrec_kernel_mux_42_8_1_1_U47 : component digitrec_kernel_digitrec_kernel_mux_42_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => knn_mat_0_2_fu_256,
        din1 => knn_mat_0_2_fu_256,
        din2 => tmp_25_fu_1395_p1,
        din3 => knn_mat_0_2_fu_256,
        din4 => knn_mat_0_2_3_fu_1931_p5,
        dout => knn_mat_0_2_3_fu_1931_p6);

    digitrec_kernel_mux_42_8_1_1_U48 : component digitrec_kernel_digitrec_kernel_mux_42_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => knn_mat_0_1_fu_260,
        din1 => tmp_25_fu_1395_p1,
        din2 => knn_mat_0_1_fu_260,
        din3 => knn_mat_0_1_fu_260,
        din4 => knn_mat_0_1_3_fu_1945_p5,
        dout => knn_mat_0_1_3_fu_1945_p6);

    digitrec_kernel_mux_42_8_1_1_U49 : component digitrec_kernel_digitrec_kernel_mux_42_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => tmp_25_fu_1395_p1,
        din1 => knn_mat_0_0_fu_264,
        din2 => knn_mat_0_0_fu_264,
        din3 => knn_mat_0_0_fu_264,
        din4 => knn_mat_0_0_3_fu_1959_p5,
        dout => knn_mat_0_0_3_fu_1959_p6);

    digitrec_kernel_mux_42_8_1_1_U50 : component digitrec_kernel_digitrec_kernel_mux_42_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => knn_mat_7_2_fu_148,
        din1 => knn_mat_7_2_fu_148,
        din2 => tmp_25_fu_1395_p1,
        din3 => tmp_25_fu_1395_p1,
        din4 => knn_mat_7_2_3_fu_2002_p5,
        dout => knn_mat_7_2_3_fu_2002_p6);

    digitrec_kernel_mux_42_8_1_1_U51 : component digitrec_kernel_digitrec_kernel_mux_42_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => knn_mat_7_1_fu_152,
        din1 => tmp_25_fu_1395_p1,
        din2 => knn_mat_7_1_fu_152,
        din3 => knn_mat_7_1_fu_152,
        din4 => knn_mat_7_1_3_fu_2016_p5,
        dout => knn_mat_7_1_3_fu_2016_p6);

    digitrec_kernel_mux_42_8_1_1_U52 : component digitrec_kernel_digitrec_kernel_mux_42_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => tmp_25_fu_1395_p1,
        din1 => knn_mat_7_0_fu_156,
        din2 => knn_mat_7_0_fu_156,
        din3 => knn_mat_7_0_fu_156,
        din4 => knn_mat_7_0_3_fu_2030_p5,
        dout => knn_mat_7_0_3_fu_2030_p6);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    i1_reg_576_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                i1_reg_576 <= i1_1_reg_2310;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (exitcond1_fu_968_p2 = ap_const_lv1_0))) then 
                i1_reg_576 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    knn_mat_0_0_fu_264_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_11_fu_1389_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5) and (tmp_23_fu_1259_p1 = ap_const_lv3_0))) then 
                knn_mat_0_0_fu_264 <= knn_mat_0_0_3_fu_1959_p6;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                knn_mat_0_0_fu_264 <= knn_mat_0_0_read;
            end if; 
        end if;
    end process;

    knn_mat_0_1_fu_260_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_11_fu_1389_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5) and (tmp_23_fu_1259_p1 = ap_const_lv3_0))) then 
                knn_mat_0_1_fu_260 <= knn_mat_0_1_3_fu_1945_p6;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                knn_mat_0_1_fu_260 <= knn_mat_0_1_read;
            end if; 
        end if;
    end process;

    knn_mat_0_2_fu_256_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_11_fu_1389_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5) and (tmp_23_fu_1259_p1 = ap_const_lv3_0))) then 
                knn_mat_0_2_fu_256 <= knn_mat_0_2_3_fu_1931_p6;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                knn_mat_0_2_fu_256 <= knn_mat_0_2_read;
            end if; 
        end if;
    end process;

    knn_mat_0_3_fu_252_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_11_fu_1389_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5) and (tmp_23_fu_1259_p1 = ap_const_lv3_0))) then 
                knn_mat_0_3_fu_252 <= knn_mat_0_3_3_fu_1917_p6;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                knn_mat_0_3_fu_252 <= knn_mat_0_3_read;
            end if; 
        end if;
    end process;

    knn_mat_1_0_fu_248_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_11_fu_1389_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5) and (tmp_23_fu_1259_p1 = ap_const_lv3_1))) then 
                knn_mat_1_0_fu_248 <= knn_mat_1_0_3_fu_1871_p6;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                knn_mat_1_0_fu_248 <= knn_mat_1_0_read;
            end if; 
        end if;
    end process;

    knn_mat_1_1_fu_244_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_11_fu_1389_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5) and (tmp_23_fu_1259_p1 = ap_const_lv3_1))) then 
                knn_mat_1_1_fu_244 <= knn_mat_1_1_3_fu_1857_p6;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                knn_mat_1_1_fu_244 <= knn_mat_1_1_read;
            end if; 
        end if;
    end process;

    knn_mat_1_2_fu_240_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_11_fu_1389_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5) and (tmp_23_fu_1259_p1 = ap_const_lv3_1))) then 
                knn_mat_1_2_fu_240 <= knn_mat_1_2_3_fu_1843_p6;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                knn_mat_1_2_fu_240 <= knn_mat_1_2_read;
            end if; 
        end if;
    end process;

    knn_mat_1_3_fu_236_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_11_fu_1389_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5) and (tmp_23_fu_1259_p1 = ap_const_lv3_1))) then 
                knn_mat_1_3_fu_236 <= knn_mat_1_3_3_fu_1829_p6;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                knn_mat_1_3_fu_236 <= knn_mat_1_3_read;
            end if; 
        end if;
    end process;

    knn_mat_2_0_fu_232_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_11_fu_1389_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5) and (tmp_23_fu_1259_p1 = ap_const_lv3_2))) then 
                knn_mat_2_0_fu_232 <= knn_mat_2_0_3_fu_1783_p6;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                knn_mat_2_0_fu_232 <= knn_mat_2_0_read;
            end if; 
        end if;
    end process;

    knn_mat_2_1_fu_228_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_11_fu_1389_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5) and (tmp_23_fu_1259_p1 = ap_const_lv3_2))) then 
                knn_mat_2_1_fu_228 <= knn_mat_2_1_3_fu_1769_p6;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                knn_mat_2_1_fu_228 <= knn_mat_2_1_read;
            end if; 
        end if;
    end process;

    knn_mat_2_2_fu_224_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_11_fu_1389_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5) and (tmp_23_fu_1259_p1 = ap_const_lv3_2))) then 
                knn_mat_2_2_fu_224 <= knn_mat_2_2_3_fu_1755_p6;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                knn_mat_2_2_fu_224 <= knn_mat_2_2_read;
            end if; 
        end if;
    end process;

    knn_mat_2_3_fu_220_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_11_fu_1389_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5) and (tmp_23_fu_1259_p1 = ap_const_lv3_2))) then 
                knn_mat_2_3_fu_220 <= knn_mat_2_3_3_fu_1741_p6;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                knn_mat_2_3_fu_220 <= knn_mat_2_3_read;
            end if; 
        end if;
    end process;

    knn_mat_3_0_fu_216_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_11_fu_1389_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5) and (tmp_23_fu_1259_p1 = ap_const_lv3_3))) then 
                knn_mat_3_0_fu_216 <= knn_mat_3_0_3_fu_1695_p6;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                knn_mat_3_0_fu_216 <= knn_mat_3_0_read;
            end if; 
        end if;
    end process;

    knn_mat_3_1_fu_212_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_11_fu_1389_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5) and (tmp_23_fu_1259_p1 = ap_const_lv3_3))) then 
                knn_mat_3_1_fu_212 <= knn_mat_3_1_3_fu_1681_p6;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                knn_mat_3_1_fu_212 <= knn_mat_3_1_read;
            end if; 
        end if;
    end process;

    knn_mat_3_2_fu_208_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_11_fu_1389_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5) and (tmp_23_fu_1259_p1 = ap_const_lv3_3))) then 
                knn_mat_3_2_fu_208 <= knn_mat_3_2_3_fu_1667_p6;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                knn_mat_3_2_fu_208 <= knn_mat_3_2_read;
            end if; 
        end if;
    end process;

    knn_mat_3_3_fu_204_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_11_fu_1389_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5) and (tmp_23_fu_1259_p1 = ap_const_lv3_3))) then 
                knn_mat_3_3_fu_204 <= knn_mat_3_3_3_fu_1653_p6;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                knn_mat_3_3_fu_204 <= knn_mat_3_3_read;
            end if; 
        end if;
    end process;

    knn_mat_4_0_fu_200_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_11_fu_1389_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5) and (tmp_23_fu_1259_p1 = ap_const_lv3_4))) then 
                knn_mat_4_0_fu_200 <= knn_mat_4_0_3_fu_1607_p6;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                knn_mat_4_0_fu_200 <= knn_mat_4_0_read;
            end if; 
        end if;
    end process;

    knn_mat_4_1_fu_196_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_11_fu_1389_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5) and (tmp_23_fu_1259_p1 = ap_const_lv3_4))) then 
                knn_mat_4_1_fu_196 <= knn_mat_4_1_3_fu_1593_p6;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                knn_mat_4_1_fu_196 <= knn_mat_4_1_read;
            end if; 
        end if;
    end process;

    knn_mat_4_2_fu_192_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_11_fu_1389_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5) and (tmp_23_fu_1259_p1 = ap_const_lv3_4))) then 
                knn_mat_4_2_fu_192 <= knn_mat_4_2_3_fu_1579_p6;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                knn_mat_4_2_fu_192 <= knn_mat_4_2_read;
            end if; 
        end if;
    end process;

    knn_mat_4_3_fu_188_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_11_fu_1389_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5) and (tmp_23_fu_1259_p1 = ap_const_lv3_4))) then 
                knn_mat_4_3_fu_188 <= knn_mat_4_3_3_fu_1565_p6;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                knn_mat_4_3_fu_188 <= knn_mat_4_3_read;
            end if; 
        end if;
    end process;

    knn_mat_5_0_fu_184_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_11_fu_1389_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5) and (tmp_23_fu_1259_p1 = ap_const_lv3_5))) then 
                knn_mat_5_0_fu_184 <= knn_mat_5_0_3_fu_1519_p6;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                knn_mat_5_0_fu_184 <= knn_mat_5_0_read;
            end if; 
        end if;
    end process;

    knn_mat_5_1_fu_180_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_11_fu_1389_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5) and (tmp_23_fu_1259_p1 = ap_const_lv3_5))) then 
                knn_mat_5_1_fu_180 <= knn_mat_5_1_3_fu_1505_p6;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                knn_mat_5_1_fu_180 <= knn_mat_5_1_read;
            end if; 
        end if;
    end process;

    knn_mat_5_2_fu_176_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_11_fu_1389_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5) and (tmp_23_fu_1259_p1 = ap_const_lv3_5))) then 
                knn_mat_5_2_fu_176 <= knn_mat_5_2_3_fu_1491_p6;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                knn_mat_5_2_fu_176 <= knn_mat_5_2_read;
            end if; 
        end if;
    end process;

    knn_mat_5_3_fu_172_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_11_fu_1389_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5) and (tmp_23_fu_1259_p1 = ap_const_lv3_5))) then 
                knn_mat_5_3_fu_172 <= knn_mat_5_3_3_fu_1477_p6;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                knn_mat_5_3_fu_172 <= knn_mat_5_3_read;
            end if; 
        end if;
    end process;

    knn_mat_6_0_fu_168_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_11_fu_1389_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5) and (tmp_23_fu_1259_p1 = ap_const_lv3_6))) then 
                knn_mat_6_0_fu_168 <= knn_mat_6_0_3_fu_1436_p6;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                knn_mat_6_0_fu_168 <= knn_mat_6_0_read;
            end if; 
        end if;
    end process;

    knn_mat_6_1_fu_164_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_11_fu_1389_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5) and (tmp_23_fu_1259_p1 = ap_const_lv3_6))) then 
                knn_mat_6_1_fu_164 <= knn_mat_6_1_3_fu_1422_p6;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                knn_mat_6_1_fu_164 <= knn_mat_6_1_read;
            end if; 
        end if;
    end process;

    knn_mat_6_2_fu_160_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_11_fu_1389_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5) and (tmp_23_fu_1259_p1 = ap_const_lv3_6))) then 
                knn_mat_6_2_fu_160 <= knn_mat_6_2_3_fu_1408_p6;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                knn_mat_6_2_fu_160 <= knn_mat_6_2_read;
            end if; 
        end if;
    end process;

    knn_mat_7_0_fu_156_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_11_fu_1389_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5) and (tmp_23_fu_1259_p1 = ap_const_lv3_7))) then 
                knn_mat_7_0_fu_156 <= knn_mat_7_0_3_fu_2030_p6;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                knn_mat_7_0_fu_156 <= knn_mat_7_0_read;
            end if; 
        end if;
    end process;

    knn_mat_7_1_fu_152_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_11_fu_1389_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5) and (tmp_23_fu_1259_p1 = ap_const_lv3_7))) then 
                knn_mat_7_1_fu_152 <= knn_mat_7_1_3_fu_2016_p6;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                knn_mat_7_1_fu_152 <= knn_mat_7_1_read;
            end if; 
        end if;
    end process;

    knn_mat_7_2_fu_148_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_11_fu_1389_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5) and (tmp_23_fu_1259_p1 = ap_const_lv3_7))) then 
                knn_mat_7_2_fu_148 <= knn_mat_7_2_3_fu_2002_p6;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                knn_mat_7_2_fu_148 <= knn_mat_7_2_read;
            end if; 
        end if;
    end process;

    knn_mat_load_1_0_phi_reg_588_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state3) and (exitcond_fu_1160_p2 = ap_const_lv1_0))) then
                if ((tmp_24_fu_1172_p1 = ap_const_lv3_7)) then 
                    knn_mat_load_1_0_phi_reg_588 <= grp_fu_806_p5;
                elsif ((tmp_24_fu_1172_p1 = ap_const_lv3_6)) then 
                    knn_mat_load_1_0_phi_reg_588 <= grp_fu_710_p5;
                elsif ((tmp_24_fu_1172_p1 = ap_const_lv3_5)) then 
                    knn_mat_load_1_0_phi_reg_588 <= grp_fu_722_p6;
                elsif ((tmp_24_fu_1172_p1 = ap_const_lv3_4)) then 
                    knn_mat_load_1_0_phi_reg_588 <= grp_fu_736_p6;
                elsif ((tmp_24_fu_1172_p1 = ap_const_lv3_3)) then 
                    knn_mat_load_1_0_phi_reg_588 <= grp_fu_750_p6;
                elsif ((tmp_24_fu_1172_p1 = ap_const_lv3_2)) then 
                    knn_mat_load_1_0_phi_reg_588 <= grp_fu_764_p6;
                elsif ((tmp_24_fu_1172_p1 = ap_const_lv3_1)) then 
                    knn_mat_load_1_0_phi_reg_588 <= grp_fu_778_p6;
                elsif ((tmp_24_fu_1172_p1 = ap_const_lv3_0)) then 
                    knn_mat_load_1_0_phi_reg_588 <= grp_fu_792_p6;
                end if;
            end if; 
        end if;
    end process;

    max_id_reg_564_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                max_id_reg_564 <= p_max_id_fu_1226_p3;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (exitcond1_fu_968_p2 = ap_const_lv1_0))) then 
                max_id_reg_564 <= ap_const_lv64_0;
            end if; 
        end if;
    end process;

    y3_reg_552_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                y3_reg_552 <= y3_1_reg_2302;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                y3_reg_552 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                i1_1_reg_2310 <= i1_1_fu_1166_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state3) and (exitcond_fu_1160_p2 = ap_const_lv1_1))) then
                tmp_12_reg_2358 <= tmp_12_fu_1176_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                y3_1_reg_2302 <= y3_1_fu_974_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state2, ap_CS_fsm_state3, exitcond_fu_1160_p2, tmp_24_fu_1172_p1, exitcond1_fu_968_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((exitcond1_fu_968_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state3) and (((tmp_24_fu_1172_p1 = ap_const_lv3_7) and (exitcond_fu_1160_p2 = ap_const_lv1_0)) or ((tmp_24_fu_1172_p1 = ap_const_lv3_0) and (exitcond_fu_1160_p2 = ap_const_lv1_0)) or ((tmp_24_fu_1172_p1 = ap_const_lv3_1) and (exitcond_fu_1160_p2 = ap_const_lv1_0)) or ((tmp_24_fu_1172_p1 = ap_const_lv3_2) and (exitcond_fu_1160_p2 = ap_const_lv1_0)) or ((tmp_24_fu_1172_p1 = ap_const_lv3_3) and (exitcond_fu_1160_p2 = ap_const_lv1_0)) or ((tmp_24_fu_1172_p1 = ap_const_lv3_4) and (exitcond_fu_1160_p2 = ap_const_lv1_0)) or ((tmp_24_fu_1172_p1 = ap_const_lv3_5) and (exitcond_fu_1160_p2 = ap_const_lv1_0)) or ((tmp_24_fu_1172_p1 = ap_const_lv3_6) and (exitcond_fu_1160_p2 = ap_const_lv1_0))))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when others =>  
                ap_NS_fsm <= "XXXXX";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);

    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state2, exitcond1_fu_968_p2)
    begin
        if ((((exitcond1_fu_968_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;

    ap_phi_mux_max_id_phi_fu_568_p4 <= max_id_reg_564;

    ap_ready_assign_proc : process(ap_CS_fsm_state2, exitcond1_fu_968_p2)
    begin
        if (((exitcond1_fu_968_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ap_return_0 <= knn_mat_0_0_fu_264;
    ap_return_1 <= knn_mat_0_1_fu_260;
    ap_return_10 <= knn_mat_2_2_fu_224;
    ap_return_11 <= knn_mat_2_3_fu_220;
    ap_return_12 <= knn_mat_3_0_fu_216;
    ap_return_13 <= knn_mat_3_1_fu_212;
    ap_return_14 <= knn_mat_3_2_fu_208;
    ap_return_15 <= knn_mat_3_3_fu_204;
    ap_return_16 <= knn_mat_4_0_fu_200;
    ap_return_17 <= knn_mat_4_1_fu_196;
    ap_return_18 <= knn_mat_4_2_fu_192;
    ap_return_19 <= knn_mat_4_3_fu_188;
    ap_return_2 <= knn_mat_0_2_fu_256;
    ap_return_20 <= knn_mat_5_0_fu_184;
    ap_return_21 <= knn_mat_5_1_fu_180;
    ap_return_22 <= knn_mat_5_2_fu_176;
    ap_return_23 <= knn_mat_5_3_fu_172;
    ap_return_24 <= knn_mat_6_0_fu_168;
    ap_return_25 <= knn_mat_6_1_fu_164;
    ap_return_26 <= knn_mat_6_2_fu_160;
    ap_return_27 <= knn_mat_7_0_fu_156;
    ap_return_28 <= knn_mat_7_1_fu_152;
    ap_return_29 <= knn_mat_7_2_fu_148;
    ap_return_3 <= knn_mat_0_3_fu_252;
    ap_return_4 <= knn_mat_1_0_fu_248;
    ap_return_5 <= knn_mat_1_1_fu_244;
    ap_return_6 <= knn_mat_1_2_fu_240;
    ap_return_7 <= knn_mat_1_3_fu_236;
    ap_return_8 <= knn_mat_2_0_fu_232;
    ap_return_9 <= knn_mat_2_1_fu_228;
    exitcond1_fu_968_p2 <= "1" when (y3_reg_552 = ap_const_lv11_708) else "0";
    exitcond_fu_1160_p2 <= "1" when (i1_reg_576 = ap_const_lv2_3) else "0";

    grp_fu_699_p1_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state5, ap_phi_mux_max_id_phi_fu_568_p4, max_id_reg_564)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            grp_fu_699_p1 <= max_id_reg_564;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_fu_699_p1 <= ap_phi_mux_max_id_phi_fu_568_p4;
        else 
            grp_fu_699_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_710_p4 <= grp_fu_699_p1(4 downto 3);
    grp_fu_722_p5 <= grp_fu_699_p1(4 downto 3);
    grp_fu_736_p5 <= grp_fu_699_p1(4 downto 3);
    grp_fu_750_p5 <= grp_fu_699_p1(4 downto 3);
    grp_fu_764_p5 <= grp_fu_699_p1(4 downto 3);
    grp_fu_778_p5 <= grp_fu_699_p1(4 downto 3);
    grp_fu_792_p5 <= grp_fu_699_p1(4 downto 3);
    grp_fu_806_p4 <= grp_fu_699_p1(4 downto 3);
    i1_1_fu_1166_p2 <= std_logic_vector(unsigned(i1_reg_576) + unsigned(ap_const_lv2_1));
    knn_mat_0_0_3_fu_1959_p5 <= grp_fu_699_p1(4 downto 3);
    knn_mat_0_1_3_fu_1945_p5 <= grp_fu_699_p1(4 downto 3);
    knn_mat_0_2_3_fu_1931_p5 <= grp_fu_699_p1(4 downto 3);
    knn_mat_0_3_3_fu_1917_p5 <= grp_fu_699_p1(4 downto 3);
    knn_mat_1_0_3_fu_1871_p5 <= grp_fu_699_p1(4 downto 3);
    knn_mat_1_1_3_fu_1857_p5 <= grp_fu_699_p1(4 downto 3);
    knn_mat_1_2_3_fu_1843_p5 <= grp_fu_699_p1(4 downto 3);
    knn_mat_1_3_3_fu_1829_p5 <= grp_fu_699_p1(4 downto 3);
    knn_mat_2_0_3_fu_1783_p5 <= grp_fu_699_p1(4 downto 3);
    knn_mat_2_1_3_fu_1769_p5 <= grp_fu_699_p1(4 downto 3);
    knn_mat_2_2_3_fu_1755_p5 <= grp_fu_699_p1(4 downto 3);
    knn_mat_2_3_3_fu_1741_p5 <= grp_fu_699_p1(4 downto 3);
    knn_mat_3_0_3_fu_1695_p5 <= grp_fu_699_p1(4 downto 3);
    knn_mat_3_1_3_fu_1681_p5 <= grp_fu_699_p1(4 downto 3);
    knn_mat_3_2_3_fu_1667_p5 <= grp_fu_699_p1(4 downto 3);
    knn_mat_3_3_3_fu_1653_p5 <= grp_fu_699_p1(4 downto 3);
    knn_mat_4_0_3_fu_1607_p5 <= grp_fu_699_p1(4 downto 3);
    knn_mat_4_1_3_fu_1593_p5 <= grp_fu_699_p1(4 downto 3);
    knn_mat_4_2_3_fu_1579_p5 <= grp_fu_699_p1(4 downto 3);
    knn_mat_4_3_3_fu_1565_p5 <= grp_fu_699_p1(4 downto 3);
    knn_mat_5_0_3_fu_1519_p5 <= grp_fu_699_p1(4 downto 3);
    knn_mat_5_1_3_fu_1505_p5 <= grp_fu_699_p1(4 downto 3);
    knn_mat_5_2_3_fu_1491_p5 <= grp_fu_699_p1(4 downto 3);
    knn_mat_5_3_3_fu_1477_p5 <= grp_fu_699_p1(4 downto 3);
    knn_mat_6_0_3_fu_1436_p5 <= grp_fu_699_p1(4 downto 3);
    knn_mat_6_1_3_fu_1422_p5 <= grp_fu_699_p1(4 downto 3);
    knn_mat_6_2_3_fu_1408_p5 <= grp_fu_699_p1(4 downto 3);
    knn_mat_7_0_3_fu_2030_p5 <= grp_fu_699_p1(4 downto 3);
    knn_mat_7_1_3_fu_2016_p5 <= grp_fu_699_p1(4 downto 3);
    knn_mat_7_2_3_fu_2002_p5 <= grp_fu_699_p1(4 downto 3);
    newIndex1_fu_1190_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(newIndex_fu_1180_p4),64));
    newIndex_fu_1180_p4 <= y3_reg_552(10 downto 3);
    newSel1_fu_1319_p3 <= 
        grp_fu_736_p6 when (sel_tmp8_fu_1287_p2(0) = '1') else 
        grp_fu_750_p6;
    newSel2_fu_1333_p3 <= 
        grp_fu_764_p6 when (sel_tmp4_fu_1275_p2(0) = '1') else 
        grp_fu_778_p6;
    newSel3_fu_1347_p3 <= 
        grp_fu_792_p6 when (sel_tmp_fu_1263_p2(0) = '1') else 
        grp_fu_806_p5;
    newSel4_fu_1355_p3 <= 
        newSel_fu_1305_p3 when (or_cond_fu_1313_p2(0) = '1') else 
        newSel1_fu_1319_p3;
    newSel5_fu_1369_p3 <= 
        newSel2_fu_1333_p3 when (or_cond2_fu_1341_p2(0) = '1') else 
        newSel3_fu_1347_p3;
    newSel6_fu_1377_p3 <= 
        newSel4_fu_1355_p3 when (or_cond3_fu_1363_p2(0) = '1') else 
        newSel5_fu_1369_p3;
    newSel_fu_1305_p3 <= 
        grp_fu_710_p5 when (sel_tmp3_fu_1299_p2(0) = '1') else 
        grp_fu_722_p6;
    or_cond1_fu_1327_p2 <= (sel_tmp8_fu_1287_p2 or sel_tmp6_fu_1281_p2);
    or_cond2_fu_1341_p2 <= (sel_tmp4_fu_1275_p2 or sel_tmp2_fu_1269_p2);
    or_cond3_fu_1363_p2 <= (or_cond_fu_1313_p2 or or_cond1_fu_1327_p2);
    or_cond_fu_1313_p2 <= (sel_tmp3_fu_1299_p2 or sel_tmp1_fu_1293_p2);
    p_max_id_fu_1226_p3 <= 
        tmp_21_fu_1202_p1 when (tmp_22_fu_1220_p2(0) = '1') else 
        max_id_reg_564;
    sel_tmp1_fu_1293_p2 <= "1" when (tmp_23_fu_1259_p1 = ap_const_lv3_5) else "0";
    sel_tmp2_fu_1269_p2 <= "1" when (tmp_23_fu_1259_p1 = ap_const_lv3_1) else "0";
    sel_tmp3_fu_1299_p2 <= "1" when (tmp_23_fu_1259_p1 = ap_const_lv3_6) else "0";
    sel_tmp4_fu_1275_p2 <= "1" when (tmp_23_fu_1259_p1 = ap_const_lv3_2) else "0";
    sel_tmp6_fu_1281_p2 <= "1" when (tmp_23_fu_1259_p1 = ap_const_lv3_3) else "0";
    sel_tmp8_fu_1287_p2 <= "1" when (tmp_23_fu_1259_p1 = ap_const_lv3_4) else "0";
    sel_tmp_fu_1263_p2 <= "1" when (tmp_23_fu_1259_p1 = ap_const_lv3_0) else "0";
    temp_0_address0 <= newIndex1_fu_1190_p1(8 - 1 downto 0);

    temp_0_ce0_assign_proc : process(ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            temp_0_ce0 <= ap_const_logic_1;
        else 
            temp_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    temp_1_address0 <= newIndex1_fu_1190_p1(8 - 1 downto 0);

    temp_1_ce0_assign_proc : process(ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            temp_1_ce0 <= ap_const_logic_1;
        else 
            temp_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    temp_2_address0 <= newIndex1_fu_1190_p1(8 - 1 downto 0);

    temp_2_ce0_assign_proc : process(ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            temp_2_ce0 <= ap_const_logic_1;
        else 
            temp_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    temp_3_address0 <= newIndex1_fu_1190_p1(8 - 1 downto 0);

    temp_3_ce0_assign_proc : process(ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            temp_3_ce0 <= ap_const_logic_1;
        else 
            temp_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    temp_4_address0 <= newIndex1_fu_1190_p1(8 - 1 downto 0);

    temp_4_ce0_assign_proc : process(ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            temp_4_ce0 <= ap_const_logic_1;
        else 
            temp_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    temp_5_address0 <= newIndex1_fu_1190_p1(8 - 1 downto 0);

    temp_5_ce0_assign_proc : process(ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            temp_5_ce0 <= ap_const_logic_1;
        else 
            temp_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    temp_6_address0 <= newIndex1_fu_1190_p1(8 - 1 downto 0);

    temp_6_ce0_assign_proc : process(ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            temp_6_ce0 <= ap_const_logic_1;
        else 
            temp_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    temp_7_address0 <= newIndex1_fu_1190_p1(8 - 1 downto 0);

    temp_7_ce0_assign_proc : process(ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            temp_7_ce0 <= ap_const_logic_1;
        else 
            temp_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    tmp_11_fu_1389_p2 <= "1" when (unsigned(tmp_2_fu_1237_p10) < unsigned(tmp_s_fu_1385_p1)) else "0";
    tmp_12_fu_1176_p1 <= y3_reg_552(3 - 1 downto 0);
    tmp_21_fu_1202_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i1_reg_576),64));
    tmp_22_fu_1220_p2 <= "1" when (unsigned(knn_mat_load_1_0_phi_reg_588) < unsigned(knn_mat_load_2_0_phi_fu_1206_p6)) else "0";
    tmp_23_fu_1259_p1 <= max_id_reg_564(3 - 1 downto 0);
    tmp_24_fu_1172_p1 <= max_id_reg_564(3 - 1 downto 0);
    tmp_25_fu_1395_p1 <= tmp_2_fu_1237_p10(8 - 1 downto 0);
    tmp_2_fu_1237_p9 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_12_reg_2358),32));
    tmp_s_fu_1385_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(newSel6_fu_1377_p3),64));
    y3_1_fu_974_p2 <= std_logic_vector(unsigned(y3_reg_552) + unsigned(ap_const_lv11_1));
end behav;
