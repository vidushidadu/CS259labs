// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2_AR71275_op
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module digitrec_kernel_compute (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        test_image,
        train_images_0_address0,
        train_images_0_ce0,
        train_images_0_q0,
        train_images_1_address0,
        train_images_1_ce0,
        train_images_1_q0,
        train_images_2_address0,
        train_images_2_ce0,
        train_images_2_q0,
        train_images_3_address0,
        train_images_3_ce0,
        train_images_3_q0,
        train_images_4_address0,
        train_images_4_ce0,
        train_images_4_q0,
        train_images_5_address0,
        train_images_5_ce0,
        train_images_5_q0,
        train_images_6_address0,
        train_images_6_ce0,
        train_images_6_q0,
        train_images_7_address0,
        train_images_7_ce0,
        train_images_7_q0,
        knn_mat_0_0_read,
        knn_mat_0_1_read,
        knn_mat_0_2_read,
        knn_mat_0_3_read,
        knn_mat_1_0_read,
        knn_mat_1_1_read,
        knn_mat_1_2_read,
        knn_mat_1_3_read,
        knn_mat_2_0_read,
        knn_mat_2_1_read,
        knn_mat_2_2_read,
        knn_mat_2_3_read,
        knn_mat_3_0_read,
        knn_mat_3_1_read,
        knn_mat_3_2_read,
        knn_mat_3_3_read,
        knn_mat_4_0_read,
        knn_mat_4_1_read,
        knn_mat_4_2_read,
        knn_mat_4_3_read,
        knn_mat_5_0_read,
        knn_mat_5_1_read,
        knn_mat_5_2_read,
        knn_mat_5_3_read,
        knn_mat_6_0_read,
        knn_mat_6_1_read,
        knn_mat_6_2_read,
        knn_mat_7_0_read,
        knn_mat_7_1_read,
        knn_mat_7_2_read,
        local_num_elements,
        ap_return_0,
        ap_return_1,
        ap_return_2,
        ap_return_3,
        ap_return_4,
        ap_return_5,
        ap_return_6,
        ap_return_7,
        ap_return_8,
        ap_return_9,
        ap_return_10,
        ap_return_11,
        ap_return_12,
        ap_return_13,
        ap_return_14,
        ap_return_15,
        ap_return_16,
        ap_return_17,
        ap_return_18,
        ap_return_19,
        ap_return_20,
        ap_return_21,
        ap_return_22,
        ap_return_23,
        ap_return_24,
        ap_return_25,
        ap_return_26,
        ap_return_27,
        ap_return_28,
        ap_return_29
);

parameter    ap_ST_fsm_state1 = 10'd1;
parameter    ap_ST_fsm_pp0_stage0 = 10'd2;
parameter    ap_ST_fsm_state4 = 10'd4;
parameter    ap_ST_fsm_state5 = 10'd8;
parameter    ap_ST_fsm_state6 = 10'd16;
parameter    ap_ST_fsm_state7 = 10'd32;
parameter    ap_ST_fsm_state8 = 10'd64;
parameter    ap_ST_fsm_state9 = 10'd128;
parameter    ap_ST_fsm_state10 = 10'd256;
parameter    ap_ST_fsm_state11 = 10'd512;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [63:0] test_image;
output  [7:0] train_images_0_address0;
output   train_images_0_ce0;
input  [63:0] train_images_0_q0;
output  [7:0] train_images_1_address0;
output   train_images_1_ce0;
input  [63:0] train_images_1_q0;
output  [7:0] train_images_2_address0;
output   train_images_2_ce0;
input  [63:0] train_images_2_q0;
output  [7:0] train_images_3_address0;
output   train_images_3_ce0;
input  [63:0] train_images_3_q0;
output  [7:0] train_images_4_address0;
output   train_images_4_ce0;
input  [63:0] train_images_4_q0;
output  [7:0] train_images_5_address0;
output   train_images_5_ce0;
input  [63:0] train_images_5_q0;
output  [7:0] train_images_6_address0;
output   train_images_6_ce0;
input  [63:0] train_images_6_q0;
output  [7:0] train_images_7_address0;
output   train_images_7_ce0;
input  [63:0] train_images_7_q0;
input  [7:0] knn_mat_0_0_read;
input  [7:0] knn_mat_0_1_read;
input  [7:0] knn_mat_0_2_read;
input  [7:0] knn_mat_0_3_read;
input  [7:0] knn_mat_1_0_read;
input  [7:0] knn_mat_1_1_read;
input  [7:0] knn_mat_1_2_read;
input  [7:0] knn_mat_1_3_read;
input  [7:0] knn_mat_2_0_read;
input  [7:0] knn_mat_2_1_read;
input  [7:0] knn_mat_2_2_read;
input  [7:0] knn_mat_2_3_read;
input  [7:0] knn_mat_3_0_read;
input  [7:0] knn_mat_3_1_read;
input  [7:0] knn_mat_3_2_read;
input  [7:0] knn_mat_3_3_read;
input  [7:0] knn_mat_4_0_read;
input  [7:0] knn_mat_4_1_read;
input  [7:0] knn_mat_4_2_read;
input  [7:0] knn_mat_4_3_read;
input  [7:0] knn_mat_5_0_read;
input  [7:0] knn_mat_5_1_read;
input  [7:0] knn_mat_5_2_read;
input  [7:0] knn_mat_5_3_read;
input  [7:0] knn_mat_6_0_read;
input  [7:0] knn_mat_6_1_read;
input  [7:0] knn_mat_6_2_read;
input  [7:0] knn_mat_7_0_read;
input  [7:0] knn_mat_7_1_read;
input  [7:0] knn_mat_7_2_read;
input  [10:0] local_num_elements;
output  [7:0] ap_return_0;
output  [7:0] ap_return_1;
output  [7:0] ap_return_2;
output  [7:0] ap_return_3;
output  [7:0] ap_return_4;
output  [7:0] ap_return_5;
output  [7:0] ap_return_6;
output  [7:0] ap_return_7;
output  [7:0] ap_return_8;
output  [7:0] ap_return_9;
output  [7:0] ap_return_10;
output  [7:0] ap_return_11;
output  [7:0] ap_return_12;
output  [7:0] ap_return_13;
output  [7:0] ap_return_14;
output  [7:0] ap_return_15;
output  [7:0] ap_return_16;
output  [7:0] ap_return_17;
output  [7:0] ap_return_18;
output  [7:0] ap_return_19;
output  [7:0] ap_return_20;
output  [7:0] ap_return_21;
output  [7:0] ap_return_22;
output  [7:0] ap_return_23;
output  [7:0] ap_return_24;
output  [7:0] ap_return_25;
output  [7:0] ap_return_26;
output  [7:0] ap_return_27;
output  [7:0] ap_return_28;
output  [7:0] ap_return_29;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg train_images_0_ce0;
reg train_images_1_ce0;
reg train_images_2_ce0;
reg train_images_3_ce0;
reg train_images_4_ce0;
reg train_images_5_ce0;
reg train_images_6_ce0;
reg train_images_7_ce0;
reg[7:0] ap_return_0;
reg[7:0] ap_return_1;
reg[7:0] ap_return_2;
reg[7:0] ap_return_3;
reg[7:0] ap_return_4;
reg[7:0] ap_return_5;
reg[7:0] ap_return_6;
reg[7:0] ap_return_7;
reg[7:0] ap_return_8;
reg[7:0] ap_return_9;
reg[7:0] ap_return_10;
reg[7:0] ap_return_11;
reg[7:0] ap_return_12;
reg[7:0] ap_return_13;
reg[7:0] ap_return_14;
reg[7:0] ap_return_15;
reg[7:0] ap_return_16;
reg[7:0] ap_return_17;
reg[7:0] ap_return_18;
reg[7:0] ap_return_19;
reg[7:0] ap_return_20;
reg[7:0] ap_return_21;
reg[7:0] ap_return_22;
reg[7:0] ap_return_23;
reg[7:0] ap_return_24;
reg[7:0] ap_return_25;
reg[7:0] ap_return_26;
reg[7:0] ap_return_27;
reg[7:0] ap_return_28;
reg[7:0] ap_return_29;

(* fsm_encoding = "none" *) reg   [9:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [31:0] x1_reg_852;
wire   [31:0] local_num_elements_cast1_fu_949_p1;
reg   [31:0] local_num_elements_cast1_reg_1517;
wire   [31:0] p_cast4_fu_981_p1;
reg   [31:0] p_cast4_reg_1528;
wire   [0:0] tmp_31_fu_985_p2;
reg   [0:0] tmp_31_reg_1533;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
wire   [63:0] newIndex5_fu_1000_p1;
reg   [63:0] newIndex5_reg_1537;
wire   [0:0] tmp_1_fu_1018_p2;
reg   [0:0] tmp_1_reg_1554;
wire   [0:0] tmp_2_fu_1029_p2;
reg   [0:0] tmp_2_reg_1563;
wire   [0:0] tmp_3_fu_1040_p2;
reg   [0:0] tmp_3_reg_1572;
wire   [0:0] tmp_4_fu_1051_p2;
reg   [0:0] tmp_4_reg_1581;
wire   [0:0] tmp_5_fu_1062_p2;
reg   [0:0] tmp_5_reg_1590;
wire   [0:0] tmp_6_fu_1073_p2;
reg   [0:0] tmp_6_reg_1599;
wire   [0:0] tmp_7_fu_1084_p2;
reg   [0:0] tmp_7_reg_1608;
wire   [31:0] x1_1_7_fu_1089_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [10:0] i_3_fu_1148_p2;
wire    ap_CS_fsm_state5;
wire   [16:0] bound_fu_1342_p2;
reg   [16:0] bound_reg_1633;
wire    ap_CS_fsm_state6;
wire   [0:0] exitcond_flatten_fu_1183_p2;
reg   [0:0] exitcond_flatten_reg_1638;
wire    ap_CS_fsm_state7;
wire   [16:0] indvar_flatten_next_fu_1188_p2;
reg   [16:0] indvar_flatten_next_reg_1642;
wire   [10:0] x2_mid2_fu_1199_p3;
reg   [10:0] x2_mid2_reg_1647;
wire   [5:0] tmp_8_cast_mid2_v_fu_1213_p3;
reg   [5:0] tmp_8_cast_mid2_v_reg_1652;
wire   [2:0] tmp_33_fu_1221_p1;
reg   [2:0] tmp_33_reg_1658;
reg   [7:0] dis_0_addr_1_reg_1663;
reg   [7:0] dis_1_addr_1_reg_1668;
reg   [7:0] dis_2_addr_1_reg_1673;
reg   [7:0] dis_3_addr_1_reg_1678;
reg   [7:0] dis_4_addr_1_reg_1683;
reg   [7:0] dis_5_addr_1_reg_1688;
reg   [7:0] dis_6_addr_1_reg_1693;
reg   [7:0] dis_7_addr_1_reg_1698;
wire   [63:0] tmp_13_fu_1331_p2;
reg   [63:0] tmp_13_reg_1743;
wire    ap_CS_fsm_state8;
wire   [10:0] x2_1_fu_1337_p2;
wire    ap_CS_fsm_state9;
wire    ap_block_pp0_stage0_subdone;
reg    ap_predicate_tran3to4_state2;
reg    ap_enable_reg_pp0_iter1;
reg   [7:0] local_temp_0_address0;
reg    local_temp_0_ce0;
reg    local_temp_0_we0;
wire   [63:0] local_temp_0_d0;
wire   [63:0] local_temp_0_q0;
reg   [7:0] local_temp_1_address0;
reg    local_temp_1_ce0;
reg    local_temp_1_we0;
wire   [63:0] local_temp_1_d0;
wire   [63:0] local_temp_1_q0;
reg   [7:0] local_temp_2_address0;
reg    local_temp_2_ce0;
reg    local_temp_2_we0;
wire   [63:0] local_temp_2_d0;
wire   [63:0] local_temp_2_q0;
reg   [7:0] local_temp_3_address0;
reg    local_temp_3_ce0;
reg    local_temp_3_we0;
wire   [63:0] local_temp_3_d0;
wire   [63:0] local_temp_3_q0;
reg   [7:0] local_temp_4_address0;
reg    local_temp_4_ce0;
reg    local_temp_4_we0;
wire   [63:0] local_temp_4_d0;
wire   [63:0] local_temp_4_q0;
reg   [7:0] local_temp_5_address0;
reg    local_temp_5_ce0;
reg    local_temp_5_we0;
wire   [63:0] local_temp_5_d0;
wire   [63:0] local_temp_5_q0;
reg   [7:0] local_temp_6_address0;
reg    local_temp_6_ce0;
reg    local_temp_6_we0;
wire   [63:0] local_temp_6_d0;
wire   [63:0] local_temp_6_q0;
reg   [7:0] local_temp_7_address0;
reg    local_temp_7_ce0;
reg    local_temp_7_we0;
wire   [63:0] local_temp_7_d0;
wire   [63:0] local_temp_7_q0;
reg   [7:0] dis_0_address0;
reg    dis_0_ce0;
reg    dis_0_we0;
reg   [63:0] dis_0_d0;
wire   [63:0] dis_0_q0;
reg   [7:0] dis_1_address0;
reg    dis_1_ce0;
reg    dis_1_we0;
reg   [63:0] dis_1_d0;
wire   [63:0] dis_1_q0;
reg   [7:0] dis_2_address0;
reg    dis_2_ce0;
reg    dis_2_we0;
reg   [63:0] dis_2_d0;
wire   [63:0] dis_2_q0;
reg   [7:0] dis_3_address0;
reg    dis_3_ce0;
reg    dis_3_we0;
reg   [63:0] dis_3_d0;
wire   [63:0] dis_3_q0;
reg   [7:0] dis_4_address0;
reg    dis_4_ce0;
reg    dis_4_we0;
reg   [63:0] dis_4_d0;
wire   [63:0] dis_4_q0;
reg   [7:0] dis_5_address0;
reg    dis_5_ce0;
reg    dis_5_we0;
reg   [63:0] dis_5_d0;
wire   [63:0] dis_5_q0;
reg   [7:0] dis_6_address0;
reg    dis_6_ce0;
reg    dis_6_we0;
reg   [63:0] dis_6_d0;
wire   [63:0] dis_6_q0;
reg   [7:0] dis_7_address0;
reg    dis_7_ce0;
reg    dis_7_we0;
reg   [63:0] dis_7_d0;
wire   [63:0] dis_7_q0;
wire    grp_update_fu_907_ap_start;
wire    grp_update_fu_907_ap_done;
wire    grp_update_fu_907_ap_idle;
wire    grp_update_fu_907_ap_ready;
wire   [7:0] grp_update_fu_907_temp_0_address0;
wire    grp_update_fu_907_temp_0_ce0;
wire   [7:0] grp_update_fu_907_temp_1_address0;
wire    grp_update_fu_907_temp_1_ce0;
wire   [7:0] grp_update_fu_907_temp_2_address0;
wire    grp_update_fu_907_temp_2_ce0;
wire   [7:0] grp_update_fu_907_temp_3_address0;
wire    grp_update_fu_907_temp_3_ce0;
wire   [7:0] grp_update_fu_907_temp_4_address0;
wire    grp_update_fu_907_temp_4_ce0;
wire   [7:0] grp_update_fu_907_temp_5_address0;
wire    grp_update_fu_907_temp_5_ce0;
wire   [7:0] grp_update_fu_907_temp_6_address0;
wire    grp_update_fu_907_temp_6_ce0;
wire   [7:0] grp_update_fu_907_temp_7_address0;
wire    grp_update_fu_907_temp_7_ce0;
wire   [7:0] grp_update_fu_907_ap_return_0;
wire   [7:0] grp_update_fu_907_ap_return_1;
wire   [7:0] grp_update_fu_907_ap_return_2;
wire   [7:0] grp_update_fu_907_ap_return_3;
wire   [7:0] grp_update_fu_907_ap_return_4;
wire   [7:0] grp_update_fu_907_ap_return_5;
wire   [7:0] grp_update_fu_907_ap_return_6;
wire   [7:0] grp_update_fu_907_ap_return_7;
wire   [7:0] grp_update_fu_907_ap_return_8;
wire   [7:0] grp_update_fu_907_ap_return_9;
wire   [7:0] grp_update_fu_907_ap_return_10;
wire   [7:0] grp_update_fu_907_ap_return_11;
wire   [7:0] grp_update_fu_907_ap_return_12;
wire   [7:0] grp_update_fu_907_ap_return_13;
wire   [7:0] grp_update_fu_907_ap_return_14;
wire   [7:0] grp_update_fu_907_ap_return_15;
wire   [7:0] grp_update_fu_907_ap_return_16;
wire   [7:0] grp_update_fu_907_ap_return_17;
wire   [7:0] grp_update_fu_907_ap_return_18;
wire   [7:0] grp_update_fu_907_ap_return_19;
wire   [7:0] grp_update_fu_907_ap_return_20;
wire   [7:0] grp_update_fu_907_ap_return_21;
wire   [7:0] grp_update_fu_907_ap_return_22;
wire   [7:0] grp_update_fu_907_ap_return_23;
wire   [7:0] grp_update_fu_907_ap_return_24;
wire   [7:0] grp_update_fu_907_ap_return_25;
wire   [7:0] grp_update_fu_907_ap_return_26;
wire   [7:0] grp_update_fu_907_ap_return_27;
wire   [7:0] grp_update_fu_907_ap_return_28;
wire   [7:0] grp_update_fu_907_ap_return_29;
reg   [10:0] i_reg_863;
wire    ap_CS_fsm_state4;
wire   [0:0] exitcond2_fu_1143_p2;
reg   [16:0] indvar_flatten_reg_874;
reg   [5:0] i1_reg_885;
reg   [10:0] x2_reg_896;
reg    grp_update_fu_907_ap_start_reg;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state11;
wire    ap_block_pp0_stage0;
wire   [63:0] newIndex7_fu_1168_p1;
wire   [63:0] newIndex9_fu_1235_p1;
wire   [2:0] tmp_32_fu_1154_p1;
wire   [11:0] local_num_elements_cast1_cast_fu_953_p1;
wire   [11:0] tmp_fu_957_p2;
wire   [8:0] tmp_29_fu_963_p4;
wire   [11:0] tmp_30_fu_973_p3;
wire   [28:0] newIndex_fu_990_p4;
wire   [31:0] x1_1_s_fu_1012_p2;
wire   [31:0] x1_1_1_fu_1023_p2;
wire   [31:0] x1_1_2_fu_1034_p2;
wire   [31:0] x1_1_3_fu_1045_p2;
wire   [31:0] x1_1_4_fu_1056_p2;
wire   [31:0] x1_1_5_fu_1067_p2;
wire   [31:0] x1_1_6_fu_1078_p2;
wire   [7:0] newIndex6_fu_1158_p4;
wire   [0:0] exitcond_fu_1194_p2;
wire   [5:0] i_s_fu_1207_p2;
wire   [7:0] newIndex8_fu_1225_p4;
wire   [48:0] tmp_8_cast_mid2_fu_1255_p1;
wire   [31:0] arrayNo_fu_1264_p1;
wire   [63:0] tmp_26_fu_1289_p10;
wire   [48:0] tmp_34_fu_1311_p1;
wire   [48:0] tmp_9_mid2_fu_1258_p2;
wire   [48:0] tmp_11_fu_1315_p2;
wire   [48:0] tmp_12_fu_1321_p2;
wire   [63:0] tmp_12_cast_fu_1327_p1;
wire   [63:0] tmp_s_fu_1267_p10;
wire   [10:0] bound_fu_1342_p0;
wire   [6:0] bound_fu_1342_p1;
reg   [7:0] ap_return_0_preg;
reg   [7:0] ap_return_1_preg;
reg   [7:0] ap_return_2_preg;
reg   [7:0] ap_return_3_preg;
reg   [7:0] ap_return_4_preg;
reg   [7:0] ap_return_5_preg;
reg   [7:0] ap_return_6_preg;
reg   [7:0] ap_return_7_preg;
reg   [7:0] ap_return_8_preg;
reg   [7:0] ap_return_9_preg;
reg   [7:0] ap_return_10_preg;
reg   [7:0] ap_return_11_preg;
reg   [7:0] ap_return_12_preg;
reg   [7:0] ap_return_13_preg;
reg   [7:0] ap_return_14_preg;
reg   [7:0] ap_return_15_preg;
reg   [7:0] ap_return_16_preg;
reg   [7:0] ap_return_17_preg;
reg   [7:0] ap_return_18_preg;
reg   [7:0] ap_return_19_preg;
reg   [7:0] ap_return_20_preg;
reg   [7:0] ap_return_21_preg;
reg   [7:0] ap_return_22_preg;
reg   [7:0] ap_return_23_preg;
reg   [7:0] ap_return_24_preg;
reg   [7:0] ap_return_25_preg;
reg   [7:0] ap_return_26_preg;
reg   [7:0] ap_return_27_preg;
reg   [7:0] ap_return_28_preg;
reg   [7:0] ap_return_29_preg;
reg   [9:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [16:0] bound_fu_1342_p00;

// power-on initialization
initial begin
#0 ap_CS_fsm = 10'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 grp_update_fu_907_ap_start_reg = 1'b0;
#0 ap_return_0_preg = 8'd0;
#0 ap_return_1_preg = 8'd0;
#0 ap_return_2_preg = 8'd0;
#0 ap_return_3_preg = 8'd0;
#0 ap_return_4_preg = 8'd0;
#0 ap_return_5_preg = 8'd0;
#0 ap_return_6_preg = 8'd0;
#0 ap_return_7_preg = 8'd0;
#0 ap_return_8_preg = 8'd0;
#0 ap_return_9_preg = 8'd0;
#0 ap_return_10_preg = 8'd0;
#0 ap_return_11_preg = 8'd0;
#0 ap_return_12_preg = 8'd0;
#0 ap_return_13_preg = 8'd0;
#0 ap_return_14_preg = 8'd0;
#0 ap_return_15_preg = 8'd0;
#0 ap_return_16_preg = 8'd0;
#0 ap_return_17_preg = 8'd0;
#0 ap_return_18_preg = 8'd0;
#0 ap_return_19_preg = 8'd0;
#0 ap_return_20_preg = 8'd0;
#0 ap_return_21_preg = 8'd0;
#0 ap_return_22_preg = 8'd0;
#0 ap_return_23_preg = 8'd0;
#0 ap_return_24_preg = 8'd0;
#0 ap_return_25_preg = 8'd0;
#0 ap_return_26_preg = 8'd0;
#0 ap_return_27_preg = 8'd0;
#0 ap_return_28_preg = 8'd0;
#0 ap_return_29_preg = 8'd0;
end

digitrec_kernel_compute_local_temp_0 #(
    .DataWidth( 64 ),
    .AddressRange( 225 ),
    .AddressWidth( 8 ))
local_temp_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(local_temp_0_address0),
    .ce0(local_temp_0_ce0),
    .we0(local_temp_0_we0),
    .d0(local_temp_0_d0),
    .q0(local_temp_0_q0)
);

digitrec_kernel_compute_local_temp_0 #(
    .DataWidth( 64 ),
    .AddressRange( 225 ),
    .AddressWidth( 8 ))
local_temp_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(local_temp_1_address0),
    .ce0(local_temp_1_ce0),
    .we0(local_temp_1_we0),
    .d0(local_temp_1_d0),
    .q0(local_temp_1_q0)
);

digitrec_kernel_compute_local_temp_0 #(
    .DataWidth( 64 ),
    .AddressRange( 225 ),
    .AddressWidth( 8 ))
local_temp_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(local_temp_2_address0),
    .ce0(local_temp_2_ce0),
    .we0(local_temp_2_we0),
    .d0(local_temp_2_d0),
    .q0(local_temp_2_q0)
);

digitrec_kernel_compute_local_temp_0 #(
    .DataWidth( 64 ),
    .AddressRange( 225 ),
    .AddressWidth( 8 ))
local_temp_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(local_temp_3_address0),
    .ce0(local_temp_3_ce0),
    .we0(local_temp_3_we0),
    .d0(local_temp_3_d0),
    .q0(local_temp_3_q0)
);

digitrec_kernel_compute_local_temp_0 #(
    .DataWidth( 64 ),
    .AddressRange( 225 ),
    .AddressWidth( 8 ))
local_temp_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(local_temp_4_address0),
    .ce0(local_temp_4_ce0),
    .we0(local_temp_4_we0),
    .d0(local_temp_4_d0),
    .q0(local_temp_4_q0)
);

digitrec_kernel_compute_local_temp_0 #(
    .DataWidth( 64 ),
    .AddressRange( 225 ),
    .AddressWidth( 8 ))
local_temp_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(local_temp_5_address0),
    .ce0(local_temp_5_ce0),
    .we0(local_temp_5_we0),
    .d0(local_temp_5_d0),
    .q0(local_temp_5_q0)
);

digitrec_kernel_compute_local_temp_0 #(
    .DataWidth( 64 ),
    .AddressRange( 225 ),
    .AddressWidth( 8 ))
local_temp_6_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(local_temp_6_address0),
    .ce0(local_temp_6_ce0),
    .we0(local_temp_6_we0),
    .d0(local_temp_6_d0),
    .q0(local_temp_6_q0)
);

digitrec_kernel_compute_local_temp_0 #(
    .DataWidth( 64 ),
    .AddressRange( 225 ),
    .AddressWidth( 8 ))
local_temp_7_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(local_temp_7_address0),
    .ce0(local_temp_7_ce0),
    .we0(local_temp_7_we0),
    .d0(local_temp_7_d0),
    .q0(local_temp_7_q0)
);

digitrec_kernel_compute_local_temp_0 #(
    .DataWidth( 64 ),
    .AddressRange( 225 ),
    .AddressWidth( 8 ))
dis_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dis_0_address0),
    .ce0(dis_0_ce0),
    .we0(dis_0_we0),
    .d0(dis_0_d0),
    .q0(dis_0_q0)
);

digitrec_kernel_compute_local_temp_0 #(
    .DataWidth( 64 ),
    .AddressRange( 225 ),
    .AddressWidth( 8 ))
dis_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dis_1_address0),
    .ce0(dis_1_ce0),
    .we0(dis_1_we0),
    .d0(dis_1_d0),
    .q0(dis_1_q0)
);

digitrec_kernel_compute_local_temp_0 #(
    .DataWidth( 64 ),
    .AddressRange( 225 ),
    .AddressWidth( 8 ))
dis_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dis_2_address0),
    .ce0(dis_2_ce0),
    .we0(dis_2_we0),
    .d0(dis_2_d0),
    .q0(dis_2_q0)
);

digitrec_kernel_compute_local_temp_0 #(
    .DataWidth( 64 ),
    .AddressRange( 225 ),
    .AddressWidth( 8 ))
dis_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dis_3_address0),
    .ce0(dis_3_ce0),
    .we0(dis_3_we0),
    .d0(dis_3_d0),
    .q0(dis_3_q0)
);

digitrec_kernel_compute_local_temp_0 #(
    .DataWidth( 64 ),
    .AddressRange( 225 ),
    .AddressWidth( 8 ))
dis_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dis_4_address0),
    .ce0(dis_4_ce0),
    .we0(dis_4_we0),
    .d0(dis_4_d0),
    .q0(dis_4_q0)
);

digitrec_kernel_compute_local_temp_0 #(
    .DataWidth( 64 ),
    .AddressRange( 225 ),
    .AddressWidth( 8 ))
dis_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dis_5_address0),
    .ce0(dis_5_ce0),
    .we0(dis_5_we0),
    .d0(dis_5_d0),
    .q0(dis_5_q0)
);

digitrec_kernel_compute_local_temp_0 #(
    .DataWidth( 64 ),
    .AddressRange( 225 ),
    .AddressWidth( 8 ))
dis_6_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dis_6_address0),
    .ce0(dis_6_ce0),
    .we0(dis_6_we0),
    .d0(dis_6_d0),
    .q0(dis_6_q0)
);

digitrec_kernel_compute_local_temp_0 #(
    .DataWidth( 64 ),
    .AddressRange( 225 ),
    .AddressWidth( 8 ))
dis_7_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dis_7_address0),
    .ce0(dis_7_ce0),
    .we0(dis_7_we0),
    .d0(dis_7_d0),
    .q0(dis_7_q0)
);

digitrec_kernel_update grp_update_fu_907(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_update_fu_907_ap_start),
    .ap_done(grp_update_fu_907_ap_done),
    .ap_idle(grp_update_fu_907_ap_idle),
    .ap_ready(grp_update_fu_907_ap_ready),
    .temp_0_address0(grp_update_fu_907_temp_0_address0),
    .temp_0_ce0(grp_update_fu_907_temp_0_ce0),
    .temp_0_q0(dis_0_q0),
    .temp_1_address0(grp_update_fu_907_temp_1_address0),
    .temp_1_ce0(grp_update_fu_907_temp_1_ce0),
    .temp_1_q0(dis_1_q0),
    .temp_2_address0(grp_update_fu_907_temp_2_address0),
    .temp_2_ce0(grp_update_fu_907_temp_2_ce0),
    .temp_2_q0(dis_2_q0),
    .temp_3_address0(grp_update_fu_907_temp_3_address0),
    .temp_3_ce0(grp_update_fu_907_temp_3_ce0),
    .temp_3_q0(dis_3_q0),
    .temp_4_address0(grp_update_fu_907_temp_4_address0),
    .temp_4_ce0(grp_update_fu_907_temp_4_ce0),
    .temp_4_q0(dis_4_q0),
    .temp_5_address0(grp_update_fu_907_temp_5_address0),
    .temp_5_ce0(grp_update_fu_907_temp_5_ce0),
    .temp_5_q0(dis_5_q0),
    .temp_6_address0(grp_update_fu_907_temp_6_address0),
    .temp_6_ce0(grp_update_fu_907_temp_6_ce0),
    .temp_6_q0(dis_6_q0),
    .temp_7_address0(grp_update_fu_907_temp_7_address0),
    .temp_7_ce0(grp_update_fu_907_temp_7_ce0),
    .temp_7_q0(dis_7_q0),
    .knn_mat_0_0_read(knn_mat_0_0_read),
    .knn_mat_0_1_read(knn_mat_0_1_read),
    .knn_mat_0_2_read(knn_mat_0_2_read),
    .knn_mat_0_3_read(knn_mat_0_3_read),
    .knn_mat_1_0_read(knn_mat_1_0_read),
    .knn_mat_1_1_read(knn_mat_1_1_read),
    .knn_mat_1_2_read(knn_mat_1_2_read),
    .knn_mat_1_3_read(knn_mat_1_3_read),
    .knn_mat_2_0_read(knn_mat_2_0_read),
    .knn_mat_2_1_read(knn_mat_2_1_read),
    .knn_mat_2_2_read(knn_mat_2_2_read),
    .knn_mat_2_3_read(knn_mat_2_3_read),
    .knn_mat_3_0_read(knn_mat_3_0_read),
    .knn_mat_3_1_read(knn_mat_3_1_read),
    .knn_mat_3_2_read(knn_mat_3_2_read),
    .knn_mat_3_3_read(knn_mat_3_3_read),
    .knn_mat_4_0_read(knn_mat_4_0_read),
    .knn_mat_4_1_read(knn_mat_4_1_read),
    .knn_mat_4_2_read(knn_mat_4_2_read),
    .knn_mat_4_3_read(knn_mat_4_3_read),
    .knn_mat_5_0_read(knn_mat_5_0_read),
    .knn_mat_5_1_read(knn_mat_5_1_read),
    .knn_mat_5_2_read(knn_mat_5_2_read),
    .knn_mat_5_3_read(knn_mat_5_3_read),
    .knn_mat_6_0_read(knn_mat_6_0_read),
    .knn_mat_6_1_read(knn_mat_6_1_read),
    .knn_mat_6_2_read(knn_mat_6_2_read),
    .knn_mat_7_0_read(knn_mat_7_0_read),
    .knn_mat_7_1_read(knn_mat_7_1_read),
    .knn_mat_7_2_read(knn_mat_7_2_read),
    .ap_return_0(grp_update_fu_907_ap_return_0),
    .ap_return_1(grp_update_fu_907_ap_return_1),
    .ap_return_2(grp_update_fu_907_ap_return_2),
    .ap_return_3(grp_update_fu_907_ap_return_3),
    .ap_return_4(grp_update_fu_907_ap_return_4),
    .ap_return_5(grp_update_fu_907_ap_return_5),
    .ap_return_6(grp_update_fu_907_ap_return_6),
    .ap_return_7(grp_update_fu_907_ap_return_7),
    .ap_return_8(grp_update_fu_907_ap_return_8),
    .ap_return_9(grp_update_fu_907_ap_return_9),
    .ap_return_10(grp_update_fu_907_ap_return_10),
    .ap_return_11(grp_update_fu_907_ap_return_11),
    .ap_return_12(grp_update_fu_907_ap_return_12),
    .ap_return_13(grp_update_fu_907_ap_return_13),
    .ap_return_14(grp_update_fu_907_ap_return_14),
    .ap_return_15(grp_update_fu_907_ap_return_15),
    .ap_return_16(grp_update_fu_907_ap_return_16),
    .ap_return_17(grp_update_fu_907_ap_return_17),
    .ap_return_18(grp_update_fu_907_ap_return_18),
    .ap_return_19(grp_update_fu_907_ap_return_19),
    .ap_return_20(grp_update_fu_907_ap_return_20),
    .ap_return_21(grp_update_fu_907_ap_return_21),
    .ap_return_22(grp_update_fu_907_ap_return_22),
    .ap_return_23(grp_update_fu_907_ap_return_23),
    .ap_return_24(grp_update_fu_907_ap_return_24),
    .ap_return_25(grp_update_fu_907_ap_return_25),
    .ap_return_26(grp_update_fu_907_ap_return_26),
    .ap_return_27(grp_update_fu_907_ap_return_27),
    .ap_return_28(grp_update_fu_907_ap_return_28),
    .ap_return_29(grp_update_fu_907_ap_return_29)
);

digitrec_kernel_digitrec_kernel_mux_832_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .din2_WIDTH( 64 ),
    .din3_WIDTH( 64 ),
    .din4_WIDTH( 64 ),
    .din5_WIDTH( 64 ),
    .din6_WIDTH( 64 ),
    .din7_WIDTH( 64 ),
    .din8_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
digitrec_kernel_mux_832_64_1_1_U94(
    .din0(dis_0_q0),
    .din1(dis_1_q0),
    .din2(dis_2_q0),
    .din3(dis_3_q0),
    .din4(dis_4_q0),
    .din5(dis_5_q0),
    .din6(dis_6_q0),
    .din7(dis_7_q0),
    .din8(arrayNo_fu_1264_p1),
    .dout(tmp_s_fu_1267_p10)
);

digitrec_kernel_digitrec_kernel_mux_832_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .din2_WIDTH( 64 ),
    .din3_WIDTH( 64 ),
    .din4_WIDTH( 64 ),
    .din5_WIDTH( 64 ),
    .din6_WIDTH( 64 ),
    .din7_WIDTH( 64 ),
    .din8_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
digitrec_kernel_mux_832_64_1_1_U95(
    .din0(local_temp_0_q0),
    .din1(local_temp_1_q0),
    .din2(local_temp_2_q0),
    .din3(local_temp_3_q0),
    .din4(local_temp_4_q0),
    .din5(local_temp_5_q0),
    .din6(local_temp_6_q0),
    .din7(local_temp_7_q0),
    .din8(arrayNo_fu_1264_p1),
    .dout(tmp_26_fu_1289_p10)
);

digitrec_kernel_digitrec_kernel_mul_mul_11ns_7ns_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 7 ),
    .dout_WIDTH( 17 ))
digitrec_kernel_mul_mul_11ns_7ns_17_1_1_U96(
    .din0(bound_fu_1342_p0),
    .din1(bound_fu_1342_p1),
    .dout(bound_fu_1342_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_tran3to4_state2 == 1'b1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_0_preg <= 8'd0;
    end else begin
        if (((grp_update_fu_907_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state11))) begin
            ap_return_0_preg <= grp_update_fu_907_ap_return_0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_10_preg <= 8'd0;
    end else begin
        if (((grp_update_fu_907_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state11))) begin
            ap_return_10_preg <= grp_update_fu_907_ap_return_10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_11_preg <= 8'd0;
    end else begin
        if (((grp_update_fu_907_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state11))) begin
            ap_return_11_preg <= grp_update_fu_907_ap_return_11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_12_preg <= 8'd0;
    end else begin
        if (((grp_update_fu_907_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state11))) begin
            ap_return_12_preg <= grp_update_fu_907_ap_return_12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_13_preg <= 8'd0;
    end else begin
        if (((grp_update_fu_907_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state11))) begin
            ap_return_13_preg <= grp_update_fu_907_ap_return_13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_14_preg <= 8'd0;
    end else begin
        if (((grp_update_fu_907_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state11))) begin
            ap_return_14_preg <= grp_update_fu_907_ap_return_14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_15_preg <= 8'd0;
    end else begin
        if (((grp_update_fu_907_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state11))) begin
            ap_return_15_preg <= grp_update_fu_907_ap_return_15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_16_preg <= 8'd0;
    end else begin
        if (((grp_update_fu_907_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state11))) begin
            ap_return_16_preg <= grp_update_fu_907_ap_return_16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_17_preg <= 8'd0;
    end else begin
        if (((grp_update_fu_907_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state11))) begin
            ap_return_17_preg <= grp_update_fu_907_ap_return_17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_18_preg <= 8'd0;
    end else begin
        if (((grp_update_fu_907_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state11))) begin
            ap_return_18_preg <= grp_update_fu_907_ap_return_18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_19_preg <= 8'd0;
    end else begin
        if (((grp_update_fu_907_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state11))) begin
            ap_return_19_preg <= grp_update_fu_907_ap_return_19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_1_preg <= 8'd0;
    end else begin
        if (((grp_update_fu_907_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state11))) begin
            ap_return_1_preg <= grp_update_fu_907_ap_return_1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_20_preg <= 8'd0;
    end else begin
        if (((grp_update_fu_907_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state11))) begin
            ap_return_20_preg <= grp_update_fu_907_ap_return_20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_21_preg <= 8'd0;
    end else begin
        if (((grp_update_fu_907_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state11))) begin
            ap_return_21_preg <= grp_update_fu_907_ap_return_21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_22_preg <= 8'd0;
    end else begin
        if (((grp_update_fu_907_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state11))) begin
            ap_return_22_preg <= grp_update_fu_907_ap_return_22;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_23_preg <= 8'd0;
    end else begin
        if (((grp_update_fu_907_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state11))) begin
            ap_return_23_preg <= grp_update_fu_907_ap_return_23;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_24_preg <= 8'd0;
    end else begin
        if (((grp_update_fu_907_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state11))) begin
            ap_return_24_preg <= grp_update_fu_907_ap_return_24;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_25_preg <= 8'd0;
    end else begin
        if (((grp_update_fu_907_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state11))) begin
            ap_return_25_preg <= grp_update_fu_907_ap_return_25;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_26_preg <= 8'd0;
    end else begin
        if (((grp_update_fu_907_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state11))) begin
            ap_return_26_preg <= grp_update_fu_907_ap_return_26;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_27_preg <= 8'd0;
    end else begin
        if (((grp_update_fu_907_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state11))) begin
            ap_return_27_preg <= grp_update_fu_907_ap_return_27;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_28_preg <= 8'd0;
    end else begin
        if (((grp_update_fu_907_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state11))) begin
            ap_return_28_preg <= grp_update_fu_907_ap_return_28;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_29_preg <= 8'd0;
    end else begin
        if (((grp_update_fu_907_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state11))) begin
            ap_return_29_preg <= grp_update_fu_907_ap_return_29;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_2_preg <= 8'd0;
    end else begin
        if (((grp_update_fu_907_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state11))) begin
            ap_return_2_preg <= grp_update_fu_907_ap_return_2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_3_preg <= 8'd0;
    end else begin
        if (((grp_update_fu_907_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state11))) begin
            ap_return_3_preg <= grp_update_fu_907_ap_return_3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_4_preg <= 8'd0;
    end else begin
        if (((grp_update_fu_907_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state11))) begin
            ap_return_4_preg <= grp_update_fu_907_ap_return_4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_5_preg <= 8'd0;
    end else begin
        if (((grp_update_fu_907_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state11))) begin
            ap_return_5_preg <= grp_update_fu_907_ap_return_5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_6_preg <= 8'd0;
    end else begin
        if (((grp_update_fu_907_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state11))) begin
            ap_return_6_preg <= grp_update_fu_907_ap_return_6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_7_preg <= 8'd0;
    end else begin
        if (((grp_update_fu_907_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state11))) begin
            ap_return_7_preg <= grp_update_fu_907_ap_return_7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_8_preg <= 8'd0;
    end else begin
        if (((grp_update_fu_907_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state11))) begin
            ap_return_8_preg <= grp_update_fu_907_ap_return_8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_9_preg <= 8'd0;
    end else begin
        if (((grp_update_fu_907_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state11))) begin
            ap_return_9_preg <= grp_update_fu_907_ap_return_9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_update_fu_907_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state10)) begin
            grp_update_fu_907_ap_start_reg <= 1'b1;
        end else if ((grp_update_fu_907_ap_ready == 1'b1)) begin
            grp_update_fu_907_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1638 == 1'd0) & (1'b1 == ap_CS_fsm_state9))) begin
        i1_reg_885 <= tmp_8_cast_mid2_v_reg_1652;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        i1_reg_885 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond2_fu_1143_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        i_reg_863 <= i_3_fu_1148_p2;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        i_reg_863 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1638 == 1'd0) & (1'b1 == ap_CS_fsm_state9))) begin
        indvar_flatten_reg_874 <= indvar_flatten_next_reg_1642;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        indvar_flatten_reg_874 <= 17'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_7_fu_1084_p2 == 1'd1) & (tmp_6_fu_1073_p2 == 1'd1) & (tmp_5_fu_1062_p2 == 1'd1) & (tmp_4_fu_1051_p2 == 1'd1) & (tmp_3_fu_1040_p2 == 1'd1) & (tmp_2_fu_1029_p2 == 1'd1) & (tmp_1_fu_1018_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (tmp_31_fu_985_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        x1_reg_852 <= x1_1_7_fu_1089_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        x1_reg_852 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1638 == 1'd0) & (1'b1 == ap_CS_fsm_state9))) begin
        x2_reg_896 <= x2_1_fu_1337_p2;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        x2_reg_896 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        bound_reg_1633 <= bound_fu_1342_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_fu_1183_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
        dis_0_addr_1_reg_1663 <= newIndex9_fu_1235_p1;
        dis_1_addr_1_reg_1668 <= newIndex9_fu_1235_p1;
        dis_2_addr_1_reg_1673 <= newIndex9_fu_1235_p1;
        dis_3_addr_1_reg_1678 <= newIndex9_fu_1235_p1;
        dis_4_addr_1_reg_1683 <= newIndex9_fu_1235_p1;
        dis_5_addr_1_reg_1688 <= newIndex9_fu_1235_p1;
        dis_6_addr_1_reg_1693 <= newIndex9_fu_1235_p1;
        dis_7_addr_1_reg_1698 <= newIndex9_fu_1235_p1;
        tmp_33_reg_1658 <= tmp_33_fu_1221_p1;
        tmp_8_cast_mid2_v_reg_1652 <= tmp_8_cast_mid2_v_fu_1213_p3;
        x2_mid2_reg_1647 <= x2_mid2_fu_1199_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        exitcond_flatten_reg_1638 <= exitcond_flatten_fu_1183_p2;
        indvar_flatten_next_reg_1642 <= indvar_flatten_next_fu_1188_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        local_num_elements_cast1_reg_1517[10 : 0] <= local_num_elements_cast1_fu_949_p1[10 : 0];
        p_cast4_reg_1528[11 : 3] <= p_cast4_fu_981_p1[11 : 3];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_31_fu_985_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        newIndex5_reg_1537[28 : 0] <= newIndex5_fu_1000_p1[28 : 0];
        tmp_1_reg_1554 <= tmp_1_fu_1018_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        tmp_13_reg_1743 <= tmp_13_fu_1331_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_1_fu_1018_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (tmp_31_fu_985_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_2_reg_1563 <= tmp_2_fu_1029_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_31_reg_1533 <= tmp_31_fu_985_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_2_fu_1029_p2 == 1'd1) & (tmp_1_fu_1018_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (tmp_31_fu_985_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_3_reg_1572 <= tmp_3_fu_1040_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_3_fu_1040_p2 == 1'd1) & (tmp_2_fu_1029_p2 == 1'd1) & (tmp_1_fu_1018_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (tmp_31_fu_985_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_4_reg_1581 <= tmp_4_fu_1051_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_4_fu_1051_p2 == 1'd1) & (tmp_3_fu_1040_p2 == 1'd1) & (tmp_2_fu_1029_p2 == 1'd1) & (tmp_1_fu_1018_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (tmp_31_fu_985_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_5_reg_1590 <= tmp_5_fu_1062_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_5_fu_1062_p2 == 1'd1) & (tmp_4_fu_1051_p2 == 1'd1) & (tmp_3_fu_1040_p2 == 1'd1) & (tmp_2_fu_1029_p2 == 1'd1) & (tmp_1_fu_1018_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (tmp_31_fu_985_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_6_reg_1599 <= tmp_6_fu_1073_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_6_fu_1073_p2 == 1'd1) & (tmp_5_fu_1062_p2 == 1'd1) & (tmp_4_fu_1051_p2 == 1'd1) & (tmp_3_fu_1040_p2 == 1'd1) & (tmp_2_fu_1029_p2 == 1'd1) & (tmp_1_fu_1018_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (tmp_31_fu_985_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_7_reg_1608 <= tmp_7_fu_1084_p2;
    end
end

always @ (*) begin
    if ((((grp_update_fu_907_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state11)) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((grp_update_fu_907_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state11))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((grp_update_fu_907_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state11))) begin
        ap_return_0 = grp_update_fu_907_ap_return_0;
    end else begin
        ap_return_0 = ap_return_0_preg;
    end
end

always @ (*) begin
    if (((grp_update_fu_907_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state11))) begin
        ap_return_1 = grp_update_fu_907_ap_return_1;
    end else begin
        ap_return_1 = ap_return_1_preg;
    end
end

always @ (*) begin
    if (((grp_update_fu_907_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state11))) begin
        ap_return_10 = grp_update_fu_907_ap_return_10;
    end else begin
        ap_return_10 = ap_return_10_preg;
    end
end

always @ (*) begin
    if (((grp_update_fu_907_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state11))) begin
        ap_return_11 = grp_update_fu_907_ap_return_11;
    end else begin
        ap_return_11 = ap_return_11_preg;
    end
end

always @ (*) begin
    if (((grp_update_fu_907_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state11))) begin
        ap_return_12 = grp_update_fu_907_ap_return_12;
    end else begin
        ap_return_12 = ap_return_12_preg;
    end
end

always @ (*) begin
    if (((grp_update_fu_907_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state11))) begin
        ap_return_13 = grp_update_fu_907_ap_return_13;
    end else begin
        ap_return_13 = ap_return_13_preg;
    end
end

always @ (*) begin
    if (((grp_update_fu_907_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state11))) begin
        ap_return_14 = grp_update_fu_907_ap_return_14;
    end else begin
        ap_return_14 = ap_return_14_preg;
    end
end

always @ (*) begin
    if (((grp_update_fu_907_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state11))) begin
        ap_return_15 = grp_update_fu_907_ap_return_15;
    end else begin
        ap_return_15 = ap_return_15_preg;
    end
end

always @ (*) begin
    if (((grp_update_fu_907_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state11))) begin
        ap_return_16 = grp_update_fu_907_ap_return_16;
    end else begin
        ap_return_16 = ap_return_16_preg;
    end
end

always @ (*) begin
    if (((grp_update_fu_907_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state11))) begin
        ap_return_17 = grp_update_fu_907_ap_return_17;
    end else begin
        ap_return_17 = ap_return_17_preg;
    end
end

always @ (*) begin
    if (((grp_update_fu_907_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state11))) begin
        ap_return_18 = grp_update_fu_907_ap_return_18;
    end else begin
        ap_return_18 = ap_return_18_preg;
    end
end

always @ (*) begin
    if (((grp_update_fu_907_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state11))) begin
        ap_return_19 = grp_update_fu_907_ap_return_19;
    end else begin
        ap_return_19 = ap_return_19_preg;
    end
end

always @ (*) begin
    if (((grp_update_fu_907_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state11))) begin
        ap_return_2 = grp_update_fu_907_ap_return_2;
    end else begin
        ap_return_2 = ap_return_2_preg;
    end
end

always @ (*) begin
    if (((grp_update_fu_907_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state11))) begin
        ap_return_20 = grp_update_fu_907_ap_return_20;
    end else begin
        ap_return_20 = ap_return_20_preg;
    end
end

always @ (*) begin
    if (((grp_update_fu_907_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state11))) begin
        ap_return_21 = grp_update_fu_907_ap_return_21;
    end else begin
        ap_return_21 = ap_return_21_preg;
    end
end

always @ (*) begin
    if (((grp_update_fu_907_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state11))) begin
        ap_return_22 = grp_update_fu_907_ap_return_22;
    end else begin
        ap_return_22 = ap_return_22_preg;
    end
end

always @ (*) begin
    if (((grp_update_fu_907_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state11))) begin
        ap_return_23 = grp_update_fu_907_ap_return_23;
    end else begin
        ap_return_23 = ap_return_23_preg;
    end
end

always @ (*) begin
    if (((grp_update_fu_907_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state11))) begin
        ap_return_24 = grp_update_fu_907_ap_return_24;
    end else begin
        ap_return_24 = ap_return_24_preg;
    end
end

always @ (*) begin
    if (((grp_update_fu_907_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state11))) begin
        ap_return_25 = grp_update_fu_907_ap_return_25;
    end else begin
        ap_return_25 = ap_return_25_preg;
    end
end

always @ (*) begin
    if (((grp_update_fu_907_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state11))) begin
        ap_return_26 = grp_update_fu_907_ap_return_26;
    end else begin
        ap_return_26 = ap_return_26_preg;
    end
end

always @ (*) begin
    if (((grp_update_fu_907_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state11))) begin
        ap_return_27 = grp_update_fu_907_ap_return_27;
    end else begin
        ap_return_27 = ap_return_27_preg;
    end
end

always @ (*) begin
    if (((grp_update_fu_907_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state11))) begin
        ap_return_28 = grp_update_fu_907_ap_return_28;
    end else begin
        ap_return_28 = ap_return_28_preg;
    end
end

always @ (*) begin
    if (((grp_update_fu_907_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state11))) begin
        ap_return_29 = grp_update_fu_907_ap_return_29;
    end else begin
        ap_return_29 = ap_return_29_preg;
    end
end

always @ (*) begin
    if (((grp_update_fu_907_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state11))) begin
        ap_return_3 = grp_update_fu_907_ap_return_3;
    end else begin
        ap_return_3 = ap_return_3_preg;
    end
end

always @ (*) begin
    if (((grp_update_fu_907_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state11))) begin
        ap_return_4 = grp_update_fu_907_ap_return_4;
    end else begin
        ap_return_4 = ap_return_4_preg;
    end
end

always @ (*) begin
    if (((grp_update_fu_907_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state11))) begin
        ap_return_5 = grp_update_fu_907_ap_return_5;
    end else begin
        ap_return_5 = ap_return_5_preg;
    end
end

always @ (*) begin
    if (((grp_update_fu_907_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state11))) begin
        ap_return_6 = grp_update_fu_907_ap_return_6;
    end else begin
        ap_return_6 = ap_return_6_preg;
    end
end

always @ (*) begin
    if (((grp_update_fu_907_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state11))) begin
        ap_return_7 = grp_update_fu_907_ap_return_7;
    end else begin
        ap_return_7 = ap_return_7_preg;
    end
end

always @ (*) begin
    if (((grp_update_fu_907_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state11))) begin
        ap_return_8 = grp_update_fu_907_ap_return_8;
    end else begin
        ap_return_8 = ap_return_8_preg;
    end
end

always @ (*) begin
    if (((grp_update_fu_907_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state11))) begin
        ap_return_9 = grp_update_fu_907_ap_return_9;
    end else begin
        ap_return_9 = ap_return_9_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        dis_0_address0 = dis_0_addr_1_reg_1663;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        dis_0_address0 = newIndex9_fu_1235_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        dis_0_address0 = newIndex7_fu_1168_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        dis_0_address0 = grp_update_fu_907_temp_0_address0;
    end else begin
        dis_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state5))) begin
        dis_0_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        dis_0_ce0 = grp_update_fu_907_temp_0_ce0;
    end else begin
        dis_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        dis_0_d0 = tmp_13_reg_1743;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        dis_0_d0 = 64'd0;
    end else begin
        dis_0_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_33_reg_1658 == 3'd0) & (exitcond_flatten_reg_1638 == 1'd0) & (1'b1 == ap_CS_fsm_state9)) | ((tmp_32_fu_1154_p1 == 3'd0) & (exitcond2_fu_1143_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5)))) begin
        dis_0_we0 = 1'b1;
    end else begin
        dis_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        dis_1_address0 = dis_1_addr_1_reg_1668;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        dis_1_address0 = newIndex9_fu_1235_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        dis_1_address0 = newIndex7_fu_1168_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        dis_1_address0 = grp_update_fu_907_temp_1_address0;
    end else begin
        dis_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state5))) begin
        dis_1_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        dis_1_ce0 = grp_update_fu_907_temp_1_ce0;
    end else begin
        dis_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        dis_1_d0 = tmp_13_reg_1743;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        dis_1_d0 = 64'd0;
    end else begin
        dis_1_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_33_reg_1658 == 3'd1) & (exitcond_flatten_reg_1638 == 1'd0) & (1'b1 == ap_CS_fsm_state9)) | ((tmp_32_fu_1154_p1 == 3'd1) & (exitcond2_fu_1143_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5)))) begin
        dis_1_we0 = 1'b1;
    end else begin
        dis_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        dis_2_address0 = dis_2_addr_1_reg_1673;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        dis_2_address0 = newIndex9_fu_1235_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        dis_2_address0 = newIndex7_fu_1168_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        dis_2_address0 = grp_update_fu_907_temp_2_address0;
    end else begin
        dis_2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state5))) begin
        dis_2_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        dis_2_ce0 = grp_update_fu_907_temp_2_ce0;
    end else begin
        dis_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        dis_2_d0 = tmp_13_reg_1743;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        dis_2_d0 = 64'd0;
    end else begin
        dis_2_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_33_reg_1658 == 3'd2) & (exitcond_flatten_reg_1638 == 1'd0) & (1'b1 == ap_CS_fsm_state9)) | ((tmp_32_fu_1154_p1 == 3'd2) & (exitcond2_fu_1143_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5)))) begin
        dis_2_we0 = 1'b1;
    end else begin
        dis_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        dis_3_address0 = dis_3_addr_1_reg_1678;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        dis_3_address0 = newIndex9_fu_1235_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        dis_3_address0 = newIndex7_fu_1168_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        dis_3_address0 = grp_update_fu_907_temp_3_address0;
    end else begin
        dis_3_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state5))) begin
        dis_3_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        dis_3_ce0 = grp_update_fu_907_temp_3_ce0;
    end else begin
        dis_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        dis_3_d0 = tmp_13_reg_1743;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        dis_3_d0 = 64'd0;
    end else begin
        dis_3_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_33_reg_1658 == 3'd3) & (exitcond_flatten_reg_1638 == 1'd0) & (1'b1 == ap_CS_fsm_state9)) | ((tmp_32_fu_1154_p1 == 3'd3) & (exitcond2_fu_1143_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5)))) begin
        dis_3_we0 = 1'b1;
    end else begin
        dis_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        dis_4_address0 = dis_4_addr_1_reg_1683;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        dis_4_address0 = newIndex9_fu_1235_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        dis_4_address0 = newIndex7_fu_1168_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        dis_4_address0 = grp_update_fu_907_temp_4_address0;
    end else begin
        dis_4_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state5))) begin
        dis_4_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        dis_4_ce0 = grp_update_fu_907_temp_4_ce0;
    end else begin
        dis_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        dis_4_d0 = tmp_13_reg_1743;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        dis_4_d0 = 64'd0;
    end else begin
        dis_4_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_33_reg_1658 == 3'd4) & (exitcond_flatten_reg_1638 == 1'd0) & (1'b1 == ap_CS_fsm_state9)) | ((tmp_32_fu_1154_p1 == 3'd4) & (exitcond2_fu_1143_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5)))) begin
        dis_4_we0 = 1'b1;
    end else begin
        dis_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        dis_5_address0 = dis_5_addr_1_reg_1688;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        dis_5_address0 = newIndex9_fu_1235_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        dis_5_address0 = newIndex7_fu_1168_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        dis_5_address0 = grp_update_fu_907_temp_5_address0;
    end else begin
        dis_5_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state5))) begin
        dis_5_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        dis_5_ce0 = grp_update_fu_907_temp_5_ce0;
    end else begin
        dis_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        dis_5_d0 = tmp_13_reg_1743;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        dis_5_d0 = 64'd0;
    end else begin
        dis_5_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_33_reg_1658 == 3'd5) & (exitcond_flatten_reg_1638 == 1'd0) & (1'b1 == ap_CS_fsm_state9)) | ((tmp_32_fu_1154_p1 == 3'd5) & (exitcond2_fu_1143_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5)))) begin
        dis_5_we0 = 1'b1;
    end else begin
        dis_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        dis_6_address0 = dis_6_addr_1_reg_1693;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        dis_6_address0 = newIndex9_fu_1235_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        dis_6_address0 = newIndex7_fu_1168_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        dis_6_address0 = grp_update_fu_907_temp_6_address0;
    end else begin
        dis_6_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state5))) begin
        dis_6_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        dis_6_ce0 = grp_update_fu_907_temp_6_ce0;
    end else begin
        dis_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        dis_6_d0 = tmp_13_reg_1743;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        dis_6_d0 = 64'd0;
    end else begin
        dis_6_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_33_reg_1658 == 3'd6) & (exitcond_flatten_reg_1638 == 1'd0) & (1'b1 == ap_CS_fsm_state9)) | ((tmp_32_fu_1154_p1 == 3'd6) & (exitcond2_fu_1143_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5)))) begin
        dis_6_we0 = 1'b1;
    end else begin
        dis_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        dis_7_address0 = dis_7_addr_1_reg_1698;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        dis_7_address0 = newIndex9_fu_1235_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        dis_7_address0 = newIndex7_fu_1168_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        dis_7_address0 = grp_update_fu_907_temp_7_address0;
    end else begin
        dis_7_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state5))) begin
        dis_7_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        dis_7_ce0 = grp_update_fu_907_temp_7_ce0;
    end else begin
        dis_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        dis_7_d0 = tmp_13_reg_1743;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        dis_7_d0 = 64'd0;
    end else begin
        dis_7_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_33_reg_1658 == 3'd7) & (exitcond_flatten_reg_1638 == 1'd0) & (1'b1 == ap_CS_fsm_state9)) | ((tmp_32_fu_1154_p1 == 3'd7) & (exitcond2_fu_1143_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5)))) begin
        dis_7_we0 = 1'b1;
    end else begin
        dis_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        local_temp_0_address0 = newIndex9_fu_1235_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_temp_0_address0 = newIndex5_reg_1537;
    end else begin
        local_temp_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        local_temp_0_ce0 = 1'b1;
    end else begin
        local_temp_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_31_reg_1533 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_temp_0_we0 = 1'b1;
    end else begin
        local_temp_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        local_temp_1_address0 = newIndex9_fu_1235_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_temp_1_address0 = newIndex5_reg_1537;
    end else begin
        local_temp_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        local_temp_1_ce0 = 1'b1;
    end else begin
        local_temp_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_1_reg_1554 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (tmp_31_reg_1533 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_temp_1_we0 = 1'b1;
    end else begin
        local_temp_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        local_temp_2_address0 = newIndex9_fu_1235_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_temp_2_address0 = newIndex5_reg_1537;
    end else begin
        local_temp_2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        local_temp_2_ce0 = 1'b1;
    end else begin
        local_temp_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_2_reg_1563 == 1'd1) & (tmp_1_reg_1554 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (tmp_31_reg_1533 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_temp_2_we0 = 1'b1;
    end else begin
        local_temp_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        local_temp_3_address0 = newIndex9_fu_1235_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_temp_3_address0 = newIndex5_reg_1537;
    end else begin
        local_temp_3_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        local_temp_3_ce0 = 1'b1;
    end else begin
        local_temp_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_3_reg_1572 == 1'd1) & (tmp_2_reg_1563 == 1'd1) & (tmp_1_reg_1554 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (tmp_31_reg_1533 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_temp_3_we0 = 1'b1;
    end else begin
        local_temp_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        local_temp_4_address0 = newIndex9_fu_1235_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_temp_4_address0 = newIndex5_reg_1537;
    end else begin
        local_temp_4_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        local_temp_4_ce0 = 1'b1;
    end else begin
        local_temp_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_4_reg_1581 == 1'd1) & (tmp_3_reg_1572 == 1'd1) & (tmp_2_reg_1563 == 1'd1) & (tmp_1_reg_1554 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (tmp_31_reg_1533 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_temp_4_we0 = 1'b1;
    end else begin
        local_temp_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        local_temp_5_address0 = newIndex9_fu_1235_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_temp_5_address0 = newIndex5_reg_1537;
    end else begin
        local_temp_5_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        local_temp_5_ce0 = 1'b1;
    end else begin
        local_temp_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_5_reg_1590 == 1'd1) & (tmp_4_reg_1581 == 1'd1) & (tmp_3_reg_1572 == 1'd1) & (tmp_2_reg_1563 == 1'd1) & (tmp_1_reg_1554 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (tmp_31_reg_1533 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_temp_5_we0 = 1'b1;
    end else begin
        local_temp_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        local_temp_6_address0 = newIndex9_fu_1235_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_temp_6_address0 = newIndex5_reg_1537;
    end else begin
        local_temp_6_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        local_temp_6_ce0 = 1'b1;
    end else begin
        local_temp_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_6_reg_1599 == 1'd1) & (tmp_5_reg_1590 == 1'd1) & (tmp_4_reg_1581 == 1'd1) & (tmp_3_reg_1572 == 1'd1) & (tmp_2_reg_1563 == 1'd1) & (tmp_1_reg_1554 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (tmp_31_reg_1533 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_temp_6_we0 = 1'b1;
    end else begin
        local_temp_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        local_temp_7_address0 = newIndex9_fu_1235_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_temp_7_address0 = newIndex5_reg_1537;
    end else begin
        local_temp_7_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        local_temp_7_ce0 = 1'b1;
    end else begin
        local_temp_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_7_reg_1608 == 1'd1) & (tmp_6_reg_1599 == 1'd1) & (tmp_5_reg_1590 == 1'd1) & (tmp_4_reg_1581 == 1'd1) & (tmp_3_reg_1572 == 1'd1) & (tmp_2_reg_1563 == 1'd1) & (tmp_1_reg_1554 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (tmp_31_reg_1533 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_temp_7_we0 = 1'b1;
    end else begin
        local_temp_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        train_images_0_ce0 = 1'b1;
    end else begin
        train_images_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        train_images_1_ce0 = 1'b1;
    end else begin
        train_images_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        train_images_2_ce0 = 1'b1;
    end else begin
        train_images_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        train_images_3_ce0 = 1'b1;
    end else begin
        train_images_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        train_images_4_ce0 = 1'b1;
    end else begin
        train_images_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        train_images_5_ce0 = 1'b1;
    end else begin
        train_images_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        train_images_6_ce0 = 1'b1;
    end else begin
        train_images_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        train_images_7_ce0 = 1'b1;
    end else begin
        train_images_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            if (((exitcond2_fu_1143_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            if (((exitcond_flatten_fu_1183_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            if (((grp_update_fu_907_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state11))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd7];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

always @ (*) begin
    ap_predicate_tran3to4_state2 = ((tmp_31_fu_985_p2 == 1'd1) | ((tmp_1_fu_1018_p2 == 1'd0) & (tmp_31_fu_985_p2 == 1'd0)) | ((tmp_1_fu_1018_p2 == 1'd1) & (tmp_2_fu_1029_p2 == 1'd0) & (tmp_31_fu_985_p2 == 1'd0)) | ((tmp_2_fu_1029_p2 == 1'd1) & (tmp_1_fu_1018_p2 == 1'd1) & (tmp_3_fu_1040_p2 == 1'd0) & (tmp_31_fu_985_p2 == 1'd0)) | ((tmp_3_fu_1040_p2 == 1'd1) & (tmp_2_fu_1029_p2 == 1'd1) & (tmp_1_fu_1018_p2 == 1'd1) & (tmp_4_fu_1051_p2 == 1'd0) & (tmp_31_fu_985_p2 == 1'd0)) | ((tmp_4_fu_1051_p2 == 1'd1) & (tmp_3_fu_1040_p2 == 1'd1) & (tmp_2_fu_1029_p2 == 1'd1) & (tmp_1_fu_1018_p2 == 1'd1) & (tmp_5_fu_1062_p2 == 1'd0) & (tmp_31_fu_985_p2 == 1'd0)) | ((tmp_5_fu_1062_p2 == 1'd1) & (tmp_4_fu_1051_p2 == 1'd1) & (tmp_3_fu_1040_p2 == 1'd1) & (tmp_2_fu_1029_p2 == 1'd1) & (tmp_1_fu_1018_p2 == 1'd1) & (tmp_6_fu_1073_p2 == 1'd0) & (tmp_31_fu_985_p2 == 1'd0)) | ((tmp_6_fu_1073_p2 == 1'd1) & (tmp_5_fu_1062_p2 == 1'd1) & (tmp_4_fu_1051_p2 == 1'd1) & (tmp_3_fu_1040_p2 == 1'd1) & (tmp_2_fu_1029_p2 == 1'd1) & (tmp_1_fu_1018_p2 == 1'd1) & (tmp_7_fu_1084_p2 == 1'd0) & (tmp_31_fu_985_p2 == 1'd0)));
end

assign arrayNo_fu_1264_p1 = tmp_33_reg_1658;

assign bound_fu_1342_p0 = bound_fu_1342_p00;

assign bound_fu_1342_p00 = local_num_elements;

assign bound_fu_1342_p1 = 17'd49;

assign exitcond2_fu_1143_p2 = ((i_reg_863 == local_num_elements) ? 1'b1 : 1'b0);

assign exitcond_flatten_fu_1183_p2 = ((indvar_flatten_reg_874 == bound_reg_1633) ? 1'b1 : 1'b0);

assign exitcond_fu_1194_p2 = ((x2_reg_896 != local_num_elements) ? 1'b1 : 1'b0);

assign grp_update_fu_907_ap_start = grp_update_fu_907_ap_start_reg;

assign i_3_fu_1148_p2 = (i_reg_863 + 11'd1);

assign i_s_fu_1207_p2 = (6'd1 + i1_reg_885);

assign indvar_flatten_next_fu_1188_p2 = (indvar_flatten_reg_874 + 17'd1);

assign local_num_elements_cast1_cast_fu_953_p1 = local_num_elements;

assign local_num_elements_cast1_fu_949_p1 = local_num_elements;

assign local_temp_0_d0 = (train_images_0_q0 ^ test_image);

assign local_temp_1_d0 = (train_images_1_q0 ^ test_image);

assign local_temp_2_d0 = (train_images_2_q0 ^ test_image);

assign local_temp_3_d0 = (train_images_3_q0 ^ test_image);

assign local_temp_4_d0 = (train_images_4_q0 ^ test_image);

assign local_temp_5_d0 = (train_images_5_q0 ^ test_image);

assign local_temp_6_d0 = (train_images_6_q0 ^ test_image);

assign local_temp_7_d0 = (train_images_7_q0 ^ test_image);

assign newIndex5_fu_1000_p1 = newIndex_fu_990_p4;

assign newIndex6_fu_1158_p4 = {{i_reg_863[10:3]}};

assign newIndex7_fu_1168_p1 = newIndex6_fu_1158_p4;

assign newIndex8_fu_1225_p4 = {{x2_mid2_fu_1199_p3[10:3]}};

assign newIndex9_fu_1235_p1 = newIndex8_fu_1225_p4;

assign newIndex_fu_990_p4 = {{x1_reg_852[31:3]}};

assign p_cast4_fu_981_p1 = tmp_30_fu_973_p3;

assign tmp_11_fu_1315_p2 = (tmp_9_mid2_fu_1258_p2 & tmp_34_fu_1311_p1);

assign tmp_12_cast_fu_1327_p1 = tmp_12_fu_1321_p2;

assign tmp_12_fu_1321_p2 = tmp_11_fu_1315_p2 >> tmp_8_cast_mid2_fu_1255_p1;

assign tmp_13_fu_1331_p2 = (tmp_12_cast_fu_1327_p1 + tmp_s_fu_1267_p10);

assign tmp_1_fu_1018_p2 = (($signed(x1_1_s_fu_1012_p2) < $signed(local_num_elements_cast1_reg_1517)) ? 1'b1 : 1'b0);

assign tmp_29_fu_963_p4 = {{tmp_fu_957_p2[11:3]}};

assign tmp_2_fu_1029_p2 = (($signed(x1_1_1_fu_1023_p2) < $signed(local_num_elements_cast1_reg_1517)) ? 1'b1 : 1'b0);

assign tmp_30_fu_973_p3 = {{tmp_29_fu_963_p4}, {3'd0}};

assign tmp_31_fu_985_p2 = ((x1_reg_852 == p_cast4_reg_1528) ? 1'b1 : 1'b0);

assign tmp_32_fu_1154_p1 = i_reg_863[2:0];

assign tmp_33_fu_1221_p1 = x2_mid2_fu_1199_p3[2:0];

assign tmp_34_fu_1311_p1 = tmp_26_fu_1289_p10[48:0];

assign tmp_3_fu_1040_p2 = (($signed(x1_1_2_fu_1034_p2) < $signed(local_num_elements_cast1_reg_1517)) ? 1'b1 : 1'b0);

assign tmp_4_fu_1051_p2 = (($signed(x1_1_3_fu_1045_p2) < $signed(local_num_elements_cast1_reg_1517)) ? 1'b1 : 1'b0);

assign tmp_5_fu_1062_p2 = (($signed(x1_1_4_fu_1056_p2) < $signed(local_num_elements_cast1_reg_1517)) ? 1'b1 : 1'b0);

assign tmp_6_fu_1073_p2 = (($signed(x1_1_5_fu_1067_p2) < $signed(local_num_elements_cast1_reg_1517)) ? 1'b1 : 1'b0);

assign tmp_7_fu_1084_p2 = (($signed(x1_1_6_fu_1078_p2) < $signed(local_num_elements_cast1_reg_1517)) ? 1'b1 : 1'b0);

assign tmp_8_cast_mid2_fu_1255_p1 = tmp_8_cast_mid2_v_reg_1652;

assign tmp_8_cast_mid2_v_fu_1213_p3 = ((exitcond_fu_1194_p2[0:0] === 1'b1) ? i1_reg_885 : i_s_fu_1207_p2);

assign tmp_9_mid2_fu_1258_p2 = 49'd1 << tmp_8_cast_mid2_fu_1255_p1;

assign tmp_fu_957_p2 = (local_num_elements_cast1_cast_fu_953_p1 + 12'd7);

assign train_images_0_address0 = newIndex5_fu_1000_p1;

assign train_images_1_address0 = newIndex5_fu_1000_p1;

assign train_images_2_address0 = newIndex5_fu_1000_p1;

assign train_images_3_address0 = newIndex5_fu_1000_p1;

assign train_images_4_address0 = newIndex5_fu_1000_p1;

assign train_images_5_address0 = newIndex5_fu_1000_p1;

assign train_images_6_address0 = newIndex5_fu_1000_p1;

assign train_images_7_address0 = newIndex5_fu_1000_p1;

assign x1_1_1_fu_1023_p2 = (x1_reg_852 | 32'd2);

assign x1_1_2_fu_1034_p2 = (x1_reg_852 | 32'd3);

assign x1_1_3_fu_1045_p2 = (x1_reg_852 | 32'd4);

assign x1_1_4_fu_1056_p2 = (x1_reg_852 | 32'd5);

assign x1_1_5_fu_1067_p2 = (x1_reg_852 | 32'd6);

assign x1_1_6_fu_1078_p2 = (x1_reg_852 | 32'd7);

assign x1_1_7_fu_1089_p2 = (x1_reg_852 + 32'd8);

assign x1_1_s_fu_1012_p2 = (x1_reg_852 | 32'd1);

assign x2_1_fu_1337_p2 = (x2_mid2_reg_1647 + 11'd1);

assign x2_mid2_fu_1199_p3 = ((exitcond_fu_1194_p2[0:0] === 1'b1) ? x2_reg_896 : 11'd0);

always @ (posedge ap_clk) begin
    local_num_elements_cast1_reg_1517[31:11] <= 21'b000000000000000000000;
    p_cast4_reg_1528[2:0] <= 3'b000;
    p_cast4_reg_1528[31:12] <= 20'b00000000000000000000;
    newIndex5_reg_1537[63:29] <= 35'b00000000000000000000000000000000000;
end

endmodule //digitrec_kernel_compute
