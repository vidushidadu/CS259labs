-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2_AR71275_op
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity digitrec_kernel_digitrec_kernel is
generic (
    C_M_AXI_GMEM_ADDR_WIDTH : INTEGER := 64;
    C_M_AXI_GMEM_ID_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_DATA_WIDTH : INTEGER := 64;
    C_M_AXI_GMEM_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_BUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM2_ADDR_WIDTH : INTEGER := 64;
    C_M_AXI_GMEM2_ID_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM2_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM2_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_GMEM2_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM2_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM2_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM2_BUSER_WIDTH : INTEGER := 1;
    C_S_AXI_CONTROL_ADDR_WIDTH : INTEGER := 6;
    C_S_AXI_CONTROL_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_GMEM_USER_VALUE : INTEGER := 0;
    C_M_AXI_GMEM_PROT_VALUE : INTEGER := 0;
    C_M_AXI_GMEM_CACHE_VALUE : INTEGER := 3;
    C_M_AXI_GMEM2_USER_VALUE : INTEGER := 0;
    C_M_AXI_GMEM2_PROT_VALUE : INTEGER := 0;
    C_M_AXI_GMEM2_CACHE_VALUE : INTEGER := 3 );
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    m_axi_gmem_AWVALID : OUT STD_LOGIC;
    m_axi_gmem_AWREADY : IN STD_LOGIC;
    m_axi_gmem_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_ADDR_WIDTH-1 downto 0);
    m_axi_gmem_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_ID_WIDTH-1 downto 0);
    m_axi_gmem_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_AWUSER_WIDTH-1 downto 0);
    m_axi_gmem_WVALID : OUT STD_LOGIC;
    m_axi_gmem_WREADY : IN STD_LOGIC;
    m_axi_gmem_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_DATA_WIDTH-1 downto 0);
    m_axi_gmem_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_DATA_WIDTH/8-1 downto 0);
    m_axi_gmem_WLAST : OUT STD_LOGIC;
    m_axi_gmem_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_ID_WIDTH-1 downto 0);
    m_axi_gmem_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_WUSER_WIDTH-1 downto 0);
    m_axi_gmem_ARVALID : OUT STD_LOGIC;
    m_axi_gmem_ARREADY : IN STD_LOGIC;
    m_axi_gmem_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_ADDR_WIDTH-1 downto 0);
    m_axi_gmem_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_ID_WIDTH-1 downto 0);
    m_axi_gmem_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_ARUSER_WIDTH-1 downto 0);
    m_axi_gmem_RVALID : IN STD_LOGIC;
    m_axi_gmem_RREADY : OUT STD_LOGIC;
    m_axi_gmem_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_DATA_WIDTH-1 downto 0);
    m_axi_gmem_RLAST : IN STD_LOGIC;
    m_axi_gmem_RID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_ID_WIDTH-1 downto 0);
    m_axi_gmem_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_RUSER_WIDTH-1 downto 0);
    m_axi_gmem_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_BVALID : IN STD_LOGIC;
    m_axi_gmem_BREADY : OUT STD_LOGIC;
    m_axi_gmem_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_BID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_ID_WIDTH-1 downto 0);
    m_axi_gmem_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_BUSER_WIDTH-1 downto 0);
    m_axi_gmem2_AWVALID : OUT STD_LOGIC;
    m_axi_gmem2_AWREADY : IN STD_LOGIC;
    m_axi_gmem2_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM2_ADDR_WIDTH-1 downto 0);
    m_axi_gmem2_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM2_ID_WIDTH-1 downto 0);
    m_axi_gmem2_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem2_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem2_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem2_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem2_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem2_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem2_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem2_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem2_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM2_AWUSER_WIDTH-1 downto 0);
    m_axi_gmem2_WVALID : OUT STD_LOGIC;
    m_axi_gmem2_WREADY : IN STD_LOGIC;
    m_axi_gmem2_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM2_DATA_WIDTH-1 downto 0);
    m_axi_gmem2_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM2_DATA_WIDTH/8-1 downto 0);
    m_axi_gmem2_WLAST : OUT STD_LOGIC;
    m_axi_gmem2_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM2_ID_WIDTH-1 downto 0);
    m_axi_gmem2_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM2_WUSER_WIDTH-1 downto 0);
    m_axi_gmem2_ARVALID : OUT STD_LOGIC;
    m_axi_gmem2_ARREADY : IN STD_LOGIC;
    m_axi_gmem2_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM2_ADDR_WIDTH-1 downto 0);
    m_axi_gmem2_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM2_ID_WIDTH-1 downto 0);
    m_axi_gmem2_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem2_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem2_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem2_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem2_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem2_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem2_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem2_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem2_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM2_ARUSER_WIDTH-1 downto 0);
    m_axi_gmem2_RVALID : IN STD_LOGIC;
    m_axi_gmem2_RREADY : OUT STD_LOGIC;
    m_axi_gmem2_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM2_DATA_WIDTH-1 downto 0);
    m_axi_gmem2_RLAST : IN STD_LOGIC;
    m_axi_gmem2_RID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM2_ID_WIDTH-1 downto 0);
    m_axi_gmem2_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM2_RUSER_WIDTH-1 downto 0);
    m_axi_gmem2_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem2_BVALID : IN STD_LOGIC;
    m_axi_gmem2_BREADY : OUT STD_LOGIC;
    m_axi_gmem2_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem2_BID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM2_ID_WIDTH-1 downto 0);
    m_axi_gmem2_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM2_BUSER_WIDTH-1 downto 0);
    s_axi_control_AWVALID : IN STD_LOGIC;
    s_axi_control_AWREADY : OUT STD_LOGIC;
    s_axi_control_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_WVALID : IN STD_LOGIC;
    s_axi_control_WREADY : OUT STD_LOGIC;
    s_axi_control_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH/8-1 downto 0);
    s_axi_control_ARVALID : IN STD_LOGIC;
    s_axi_control_ARREADY : OUT STD_LOGIC;
    s_axi_control_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_RVALID : OUT STD_LOGIC;
    s_axi_control_RREADY : IN STD_LOGIC;
    s_axi_control_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_control_BVALID : OUT STD_LOGIC;
    s_axi_control_BREADY : IN STD_LOGIC;
    s_axi_control_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    interrupt : OUT STD_LOGIC );
end;


architecture behav of digitrec_kernel_digitrec_kernel is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "digitrec_kernel_digitrec_kernel,hls_ip_2018_2_AR71275_op,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcvu9p-flgb2104-2-i,HLS_INPUT_CLOCK=4.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=2.920000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=52,HLS_SYN_DSP=1,HLS_SYN_FF=3747,HLS_SYN_LUT=7596,HLS_VERSION=2018_2_AR71275_op}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (7 downto 0) := "00000010";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (7 downto 0) := "00000100";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (7 downto 0) := "00001000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (7 downto 0) := "00010000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (7 downto 0) := "00100000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (7 downto 0) := "01000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (7 downto 0) := "10000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant C_S_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant C_M_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv15_0 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000000";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv5_1E : STD_LOGIC_VECTOR (4 downto 0) := "11110";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv8_32 : STD_LOGIC_VECTOR (7 downto 0) := "00110010";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv15_4650 : STD_LOGIC_VECTOR (14 downto 0) := "100011001010000";
    constant ap_const_lv15_708 : STD_LOGIC_VECTOR (14 downto 0) := "000011100001000";
    constant ap_const_lv11_708 : STD_LOGIC_VECTOR (10 downto 0) := "11100001000";
    constant ap_const_lv5_3 : STD_LOGIC_VECTOR (4 downto 0) := "00011";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";

attribute shreg_extract : string;
    signal ap_rst_reg_2 : STD_LOGIC := '1';
attribute shreg_extract of ap_rst_reg_2 : signal is "no";
    signal ap_rst_reg_1 : STD_LOGIC := '1';
attribute shreg_extract of ap_rst_reg_1 : signal is "no";
    signal ap_rst_n_inv : STD_LOGIC := '1';
attribute shreg_extract of ap_rst_n_inv : signal is "no";
    signal ap_start : STD_LOGIC;
    signal ap_done : STD_LOGIC;
    signal ap_idle : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ap_ready : STD_LOGIC;
    signal test_image : STD_LOGIC_VECTOR (63 downto 0);
    signal train_images : STD_LOGIC_VECTOR (63 downto 0);
    signal knn_mat : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_AWREADY : STD_LOGIC;
    signal gmem_WREADY : STD_LOGIC;
    signal gmem_ARVALID : STD_LOGIC;
    signal gmem_ARREADY : STD_LOGIC;
    signal gmem_RVALID : STD_LOGIC;
    signal gmem_RREADY : STD_LOGIC;
    signal gmem_RDATA : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_RLAST : STD_LOGIC;
    signal gmem_RID : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem_RUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem_RRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal gmem_BVALID : STD_LOGIC;
    signal gmem_BRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal gmem_BID : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem_BUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem2_AWVALID : STD_LOGIC;
    signal gmem2_AWREADY : STD_LOGIC;
    signal gmem2_WVALID : STD_LOGIC;
    signal gmem2_WREADY : STD_LOGIC;
    signal gmem2_ARREADY : STD_LOGIC;
    signal gmem2_RVALID : STD_LOGIC;
    signal gmem2_RDATA : STD_LOGIC_VECTOR (7 downto 0);
    signal gmem2_RLAST : STD_LOGIC;
    signal gmem2_RID : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem2_RUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem2_RRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal gmem2_BVALID : STD_LOGIC;
    signal gmem2_BREADY : STD_LOGIC;
    signal gmem2_BRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal gmem2_BID : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem2_BUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_flatten_reg_290 : STD_LOGIC_VECTOR (4 downto 0);
    signal x_reg_301 : STD_LOGIC_VECTOR (3 downto 0);
    signal y_reg_312 : STD_LOGIC_VECTOR (1 downto 0);
    signal knn_mat_read_reg_1905 : STD_LOGIC_VECTOR (63 downto 0);
    signal test_image_read_reg_1910 : STD_LOGIC_VECTOR (63 downto 0);
    signal train_images1_reg_1915 : STD_LOGIC_VECTOR (60 downto 0);
    signal local_knn_mat_0_0_1_load_reg_1920 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal local_knn_mat_0_1_1_load_reg_1925 : STD_LOGIC_VECTOR (7 downto 0);
    signal local_knn_mat_0_2_1_load_reg_1930 : STD_LOGIC_VECTOR (7 downto 0);
    signal local_knn_mat_0_3_1_load_reg_1935 : STD_LOGIC_VECTOR (7 downto 0);
    signal local_knn_mat_1_0_1_load_reg_1940 : STD_LOGIC_VECTOR (7 downto 0);
    signal local_knn_mat_1_1_1_load_reg_1945 : STD_LOGIC_VECTOR (7 downto 0);
    signal local_knn_mat_1_2_1_load_reg_1950 : STD_LOGIC_VECTOR (7 downto 0);
    signal local_knn_mat_1_3_1_load_reg_1955 : STD_LOGIC_VECTOR (7 downto 0);
    signal local_knn_mat_2_0_1_load_reg_1960 : STD_LOGIC_VECTOR (7 downto 0);
    signal local_knn_mat_2_1_1_load_reg_1965 : STD_LOGIC_VECTOR (7 downto 0);
    signal local_knn_mat_2_2_1_load_reg_1970 : STD_LOGIC_VECTOR (7 downto 0);
    signal local_knn_mat_2_3_1_load_reg_1975 : STD_LOGIC_VECTOR (7 downto 0);
    signal local_knn_mat_3_0_1_load_reg_1980 : STD_LOGIC_VECTOR (7 downto 0);
    signal local_knn_mat_3_1_1_load_reg_1985 : STD_LOGIC_VECTOR (7 downto 0);
    signal local_knn_mat_3_2_1_load_reg_1990 : STD_LOGIC_VECTOR (7 downto 0);
    signal local_knn_mat_3_3_1_load_reg_1995 : STD_LOGIC_VECTOR (7 downto 0);
    signal local_knn_mat_4_0_1_load_reg_2000 : STD_LOGIC_VECTOR (7 downto 0);
    signal local_knn_mat_4_1_1_load_reg_2005 : STD_LOGIC_VECTOR (7 downto 0);
    signal local_knn_mat_4_2_1_load_reg_2010 : STD_LOGIC_VECTOR (7 downto 0);
    signal local_knn_mat_4_3_1_load_reg_2015 : STD_LOGIC_VECTOR (7 downto 0);
    signal local_knn_mat_5_0_1_load_reg_2020 : STD_LOGIC_VECTOR (7 downto 0);
    signal local_knn_mat_5_1_1_load_reg_2025 : STD_LOGIC_VECTOR (7 downto 0);
    signal local_knn_mat_5_2_1_load_reg_2030 : STD_LOGIC_VECTOR (7 downto 0);
    signal local_knn_mat_5_3_1_load_reg_2035 : STD_LOGIC_VECTOR (7 downto 0);
    signal local_knn_mat_6_0_1_load_reg_2040 : STD_LOGIC_VECTOR (7 downto 0);
    signal local_knn_mat_6_1_1_load_reg_2045 : STD_LOGIC_VECTOR (7 downto 0);
    signal local_knn_mat_6_2_1_load_reg_2050 : STD_LOGIC_VECTOR (7 downto 0);
    signal local_knn_mat_7_0_1_load_reg_2055 : STD_LOGIC_VECTOR (7 downto 0);
    signal local_knn_mat_7_1_1_load_reg_2060 : STD_LOGIC_VECTOR (7 downto 0);
    signal local_knn_mat_7_2_1_load_reg_2065 : STD_LOGIC_VECTOR (7 downto 0);
    signal exitcond_flatten_fu_874_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_flatten_next_fu_880_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal x_mid2_fu_944_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal arrayNo_trunc_fu_966_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal y_1_fu_1552_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal local_num_elements_fu_1580_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal local_num_elements_reg_2096 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal tmp_s_fu_1558_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_fu_1589_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal i_reg_2102 : STD_LOGIC_VECTOR (14 downto 0);
    signal local_knn_mat_0_0_reg_2107 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal grp_compute_fu_647_ap_idle : STD_LOGIC;
    signal grp_compute_fu_647_ap_ready : STD_LOGIC;
    signal grp_compute_fu_647_ap_done : STD_LOGIC;
    signal local_knn_mat_0_1_reg_2113 : STD_LOGIC_VECTOR (7 downto 0);
    signal local_knn_mat_0_2_reg_2118 : STD_LOGIC_VECTOR (7 downto 0);
    signal local_knn_mat_0_3_reg_2123 : STD_LOGIC_VECTOR (7 downto 0);
    signal local_knn_mat_1_0_reg_2128 : STD_LOGIC_VECTOR (7 downto 0);
    signal local_knn_mat_1_1_reg_2134 : STD_LOGIC_VECTOR (7 downto 0);
    signal local_knn_mat_1_2_reg_2139 : STD_LOGIC_VECTOR (7 downto 0);
    signal local_knn_mat_1_3_reg_2144 : STD_LOGIC_VECTOR (7 downto 0);
    signal local_knn_mat_2_0_reg_2149 : STD_LOGIC_VECTOR (7 downto 0);
    signal local_knn_mat_2_1_reg_2155 : STD_LOGIC_VECTOR (7 downto 0);
    signal local_knn_mat_2_2_reg_2160 : STD_LOGIC_VECTOR (7 downto 0);
    signal local_knn_mat_2_3_reg_2165 : STD_LOGIC_VECTOR (7 downto 0);
    signal local_knn_mat_3_0_reg_2170 : STD_LOGIC_VECTOR (7 downto 0);
    signal local_knn_mat_3_1_reg_2175 : STD_LOGIC_VECTOR (7 downto 0);
    signal local_knn_mat_3_2_reg_2180 : STD_LOGIC_VECTOR (7 downto 0);
    signal local_knn_mat_3_3_reg_2185 : STD_LOGIC_VECTOR (7 downto 0);
    signal local_knn_mat_4_0_reg_2190 : STD_LOGIC_VECTOR (7 downto 0);
    signal local_knn_mat_4_1_reg_2195 : STD_LOGIC_VECTOR (7 downto 0);
    signal local_knn_mat_4_2_reg_2200 : STD_LOGIC_VECTOR (7 downto 0);
    signal local_knn_mat_4_3_reg_2205 : STD_LOGIC_VECTOR (7 downto 0);
    signal local_knn_mat_5_0_reg_2210 : STD_LOGIC_VECTOR (7 downto 0);
    signal local_knn_mat_5_1_reg_2215 : STD_LOGIC_VECTOR (7 downto 0);
    signal local_knn_mat_5_2_reg_2220 : STD_LOGIC_VECTOR (7 downto 0);
    signal local_knn_mat_5_3_reg_2225 : STD_LOGIC_VECTOR (7 downto 0);
    signal local_knn_mat_6_0_reg_2230 : STD_LOGIC_VECTOR (7 downto 0);
    signal local_knn_mat_6_1_reg_2235 : STD_LOGIC_VECTOR (7 downto 0);
    signal local_knn_mat_6_2_reg_2240 : STD_LOGIC_VECTOR (7 downto 0);
    signal local_knn_mat_7_0_reg_2245 : STD_LOGIC_VECTOR (7 downto 0);
    signal local_knn_mat_7_1_reg_2251 : STD_LOGIC_VECTOR (7 downto 0);
    signal local_knn_mat_7_2_reg_2256 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_rec_fu_1719_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal p_rec_reg_2261 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state2 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal p_01_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_01_ce0 : STD_LOGIC;
    signal p_01_we0 : STD_LOGIC;
    signal p_01_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_1_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_1_ce0 : STD_LOGIC;
    signal p_1_we0 : STD_LOGIC;
    signal p_1_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_2_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_2_ce0 : STD_LOGIC;
    signal p_2_we0 : STD_LOGIC;
    signal p_2_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_3_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_3_ce0 : STD_LOGIC;
    signal p_3_we0 : STD_LOGIC;
    signal p_3_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_4_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_4_ce0 : STD_LOGIC;
    signal p_4_we0 : STD_LOGIC;
    signal p_4_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_5_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_5_ce0 : STD_LOGIC;
    signal p_5_we0 : STD_LOGIC;
    signal p_5_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_6_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_6_ce0 : STD_LOGIC;
    signal p_6_we0 : STD_LOGIC;
    signal p_6_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_7_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_7_ce0 : STD_LOGIC;
    signal p_7_we0 : STD_LOGIC;
    signal p_7_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_compute_fu_647_ap_start : STD_LOGIC;
    signal grp_compute_fu_647_train_images_0_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_compute_fu_647_train_images_0_ce0 : STD_LOGIC;
    signal grp_compute_fu_647_train_images_1_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_compute_fu_647_train_images_1_ce0 : STD_LOGIC;
    signal grp_compute_fu_647_train_images_2_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_compute_fu_647_train_images_2_ce0 : STD_LOGIC;
    signal grp_compute_fu_647_train_images_3_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_compute_fu_647_train_images_3_ce0 : STD_LOGIC;
    signal grp_compute_fu_647_train_images_4_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_compute_fu_647_train_images_4_ce0 : STD_LOGIC;
    signal grp_compute_fu_647_train_images_5_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_compute_fu_647_train_images_5_ce0 : STD_LOGIC;
    signal grp_compute_fu_647_train_images_6_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_compute_fu_647_train_images_6_ce0 : STD_LOGIC;
    signal grp_compute_fu_647_train_images_7_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_compute_fu_647_train_images_7_ce0 : STD_LOGIC;
    signal grp_compute_fu_647_ap_return_0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_compute_fu_647_ap_return_1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_compute_fu_647_ap_return_2 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_compute_fu_647_ap_return_3 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_compute_fu_647_ap_return_4 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_compute_fu_647_ap_return_5 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_compute_fu_647_ap_return_6 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_compute_fu_647_ap_return_7 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_compute_fu_647_ap_return_8 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_compute_fu_647_ap_return_9 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_compute_fu_647_ap_return_10 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_compute_fu_647_ap_return_11 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_compute_fu_647_ap_return_12 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_compute_fu_647_ap_return_13 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_compute_fu_647_ap_return_14 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_compute_fu_647_ap_return_15 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_compute_fu_647_ap_return_16 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_compute_fu_647_ap_return_17 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_compute_fu_647_ap_return_18 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_compute_fu_647_ap_return_19 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_compute_fu_647_ap_return_20 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_compute_fu_647_ap_return_21 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_compute_fu_647_ap_return_22 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_compute_fu_647_ap_return_23 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_compute_fu_647_ap_return_24 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_compute_fu_647_ap_return_25 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_compute_fu_647_ap_return_26 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_compute_fu_647_ap_return_27 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_compute_fu_647_ap_return_28 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_compute_fu_647_ap_return_29 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_load_unsigned_long_s_fu_721_ap_start : STD_LOGIC;
    signal grp_load_unsigned_long_s_fu_721_ap_done : STD_LOGIC;
    signal grp_load_unsigned_long_s_fu_721_ap_idle : STD_LOGIC;
    signal grp_load_unsigned_long_s_fu_721_ap_ready : STD_LOGIC;
    signal grp_load_unsigned_long_s_fu_721_m_axi_data_dram_AWVALID : STD_LOGIC;
    signal grp_load_unsigned_long_s_fu_721_m_axi_data_dram_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_load_unsigned_long_s_fu_721_m_axi_data_dram_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_load_unsigned_long_s_fu_721_m_axi_data_dram_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_load_unsigned_long_s_fu_721_m_axi_data_dram_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_load_unsigned_long_s_fu_721_m_axi_data_dram_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_load_unsigned_long_s_fu_721_m_axi_data_dram_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_load_unsigned_long_s_fu_721_m_axi_data_dram_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_load_unsigned_long_s_fu_721_m_axi_data_dram_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_load_unsigned_long_s_fu_721_m_axi_data_dram_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_load_unsigned_long_s_fu_721_m_axi_data_dram_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_load_unsigned_long_s_fu_721_m_axi_data_dram_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_load_unsigned_long_s_fu_721_m_axi_data_dram_WVALID : STD_LOGIC;
    signal grp_load_unsigned_long_s_fu_721_m_axi_data_dram_WDATA : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_load_unsigned_long_s_fu_721_m_axi_data_dram_WSTRB : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_load_unsigned_long_s_fu_721_m_axi_data_dram_WLAST : STD_LOGIC;
    signal grp_load_unsigned_long_s_fu_721_m_axi_data_dram_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_load_unsigned_long_s_fu_721_m_axi_data_dram_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_load_unsigned_long_s_fu_721_m_axi_data_dram_ARVALID : STD_LOGIC;
    signal grp_load_unsigned_long_s_fu_721_m_axi_data_dram_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_load_unsigned_long_s_fu_721_m_axi_data_dram_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_load_unsigned_long_s_fu_721_m_axi_data_dram_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_load_unsigned_long_s_fu_721_m_axi_data_dram_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_load_unsigned_long_s_fu_721_m_axi_data_dram_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_load_unsigned_long_s_fu_721_m_axi_data_dram_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_load_unsigned_long_s_fu_721_m_axi_data_dram_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_load_unsigned_long_s_fu_721_m_axi_data_dram_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_load_unsigned_long_s_fu_721_m_axi_data_dram_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_load_unsigned_long_s_fu_721_m_axi_data_dram_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_load_unsigned_long_s_fu_721_m_axi_data_dram_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_load_unsigned_long_s_fu_721_m_axi_data_dram_RREADY : STD_LOGIC;
    signal grp_load_unsigned_long_s_fu_721_m_axi_data_dram_BREADY : STD_LOGIC;
    signal grp_load_unsigned_long_s_fu_721_data_local_0_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_load_unsigned_long_s_fu_721_data_local_0_ce0 : STD_LOGIC;
    signal grp_load_unsigned_long_s_fu_721_data_local_0_we0 : STD_LOGIC;
    signal grp_load_unsigned_long_s_fu_721_data_local_0_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_load_unsigned_long_s_fu_721_data_local_1_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_load_unsigned_long_s_fu_721_data_local_1_ce0 : STD_LOGIC;
    signal grp_load_unsigned_long_s_fu_721_data_local_1_we0 : STD_LOGIC;
    signal grp_load_unsigned_long_s_fu_721_data_local_1_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_load_unsigned_long_s_fu_721_data_local_2_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_load_unsigned_long_s_fu_721_data_local_2_ce0 : STD_LOGIC;
    signal grp_load_unsigned_long_s_fu_721_data_local_2_we0 : STD_LOGIC;
    signal grp_load_unsigned_long_s_fu_721_data_local_2_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_load_unsigned_long_s_fu_721_data_local_3_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_load_unsigned_long_s_fu_721_data_local_3_ce0 : STD_LOGIC;
    signal grp_load_unsigned_long_s_fu_721_data_local_3_we0 : STD_LOGIC;
    signal grp_load_unsigned_long_s_fu_721_data_local_3_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_load_unsigned_long_s_fu_721_data_local_4_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_load_unsigned_long_s_fu_721_data_local_4_ce0 : STD_LOGIC;
    signal grp_load_unsigned_long_s_fu_721_data_local_4_we0 : STD_LOGIC;
    signal grp_load_unsigned_long_s_fu_721_data_local_4_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_load_unsigned_long_s_fu_721_data_local_5_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_load_unsigned_long_s_fu_721_data_local_5_ce0 : STD_LOGIC;
    signal grp_load_unsigned_long_s_fu_721_data_local_5_we0 : STD_LOGIC;
    signal grp_load_unsigned_long_s_fu_721_data_local_5_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_load_unsigned_long_s_fu_721_data_local_6_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_load_unsigned_long_s_fu_721_data_local_6_ce0 : STD_LOGIC;
    signal grp_load_unsigned_long_s_fu_721_data_local_6_we0 : STD_LOGIC;
    signal grp_load_unsigned_long_s_fu_721_data_local_6_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_load_unsigned_long_s_fu_721_data_local_7_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_load_unsigned_long_s_fu_721_data_local_7_ce0 : STD_LOGIC;
    signal grp_load_unsigned_long_s_fu_721_data_local_7_we0 : STD_LOGIC;
    signal grp_load_unsigned_long_s_fu_721_data_local_7_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_load_unsigned_char_s_fu_739_ap_start : STD_LOGIC;
    signal grp_load_unsigned_char_s_fu_739_ap_done : STD_LOGIC;
    signal grp_load_unsigned_char_s_fu_739_ap_idle : STD_LOGIC;
    signal grp_load_unsigned_char_s_fu_739_ap_ready : STD_LOGIC;
    signal grp_load_unsigned_char_s_fu_739_m_axi_data_local_AWVALID : STD_LOGIC;
    signal grp_load_unsigned_char_s_fu_739_m_axi_data_local_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_load_unsigned_char_s_fu_739_m_axi_data_local_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_load_unsigned_char_s_fu_739_m_axi_data_local_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_load_unsigned_char_s_fu_739_m_axi_data_local_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_load_unsigned_char_s_fu_739_m_axi_data_local_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_load_unsigned_char_s_fu_739_m_axi_data_local_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_load_unsigned_char_s_fu_739_m_axi_data_local_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_load_unsigned_char_s_fu_739_m_axi_data_local_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_load_unsigned_char_s_fu_739_m_axi_data_local_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_load_unsigned_char_s_fu_739_m_axi_data_local_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_load_unsigned_char_s_fu_739_m_axi_data_local_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_load_unsigned_char_s_fu_739_m_axi_data_local_WVALID : STD_LOGIC;
    signal grp_load_unsigned_char_s_fu_739_m_axi_data_local_WDATA : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_load_unsigned_char_s_fu_739_m_axi_data_local_WSTRB : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_load_unsigned_char_s_fu_739_m_axi_data_local_WLAST : STD_LOGIC;
    signal grp_load_unsigned_char_s_fu_739_m_axi_data_local_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_load_unsigned_char_s_fu_739_m_axi_data_local_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_load_unsigned_char_s_fu_739_m_axi_data_local_ARVALID : STD_LOGIC;
    signal grp_load_unsigned_char_s_fu_739_m_axi_data_local_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_load_unsigned_char_s_fu_739_m_axi_data_local_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_load_unsigned_char_s_fu_739_m_axi_data_local_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_load_unsigned_char_s_fu_739_m_axi_data_local_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_load_unsigned_char_s_fu_739_m_axi_data_local_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_load_unsigned_char_s_fu_739_m_axi_data_local_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_load_unsigned_char_s_fu_739_m_axi_data_local_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_load_unsigned_char_s_fu_739_m_axi_data_local_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_load_unsigned_char_s_fu_739_m_axi_data_local_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_load_unsigned_char_s_fu_739_m_axi_data_local_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_load_unsigned_char_s_fu_739_m_axi_data_local_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_load_unsigned_char_s_fu_739_m_axi_data_local_RREADY : STD_LOGIC;
    signal grp_load_unsigned_char_s_fu_739_m_axi_data_local_BREADY : STD_LOGIC;
    signal local_knn_mat_7_2_3_reg_323 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal local_knn_mat_7_1_3_reg_333 : STD_LOGIC_VECTOR (7 downto 0);
    signal local_knn_mat_7_0_3_reg_343 : STD_LOGIC_VECTOR (7 downto 0);
    signal local_knn_mat_6_2_3_reg_353 : STD_LOGIC_VECTOR (7 downto 0);
    signal local_knn_mat_6_1_3_reg_363 : STD_LOGIC_VECTOR (7 downto 0);
    signal local_knn_mat_6_0_3_reg_373 : STD_LOGIC_VECTOR (7 downto 0);
    signal local_knn_mat_5_3_3_reg_383 : STD_LOGIC_VECTOR (7 downto 0);
    signal local_knn_mat_5_2_3_reg_393 : STD_LOGIC_VECTOR (7 downto 0);
    signal local_knn_mat_5_1_3_reg_403 : STD_LOGIC_VECTOR (7 downto 0);
    signal local_knn_mat_5_0_3_reg_413 : STD_LOGIC_VECTOR (7 downto 0);
    signal local_knn_mat_4_3_3_reg_423 : STD_LOGIC_VECTOR (7 downto 0);
    signal local_knn_mat_4_2_3_reg_433 : STD_LOGIC_VECTOR (7 downto 0);
    signal local_knn_mat_4_1_3_reg_443 : STD_LOGIC_VECTOR (7 downto 0);
    signal local_knn_mat_4_0_3_reg_453 : STD_LOGIC_VECTOR (7 downto 0);
    signal local_knn_mat_3_3_3_reg_463 : STD_LOGIC_VECTOR (7 downto 0);
    signal local_knn_mat_3_2_3_reg_473 : STD_LOGIC_VECTOR (7 downto 0);
    signal local_knn_mat_3_1_3_reg_483 : STD_LOGIC_VECTOR (7 downto 0);
    signal local_knn_mat_3_0_3_reg_493 : STD_LOGIC_VECTOR (7 downto 0);
    signal local_knn_mat_2_3_3_reg_503 : STD_LOGIC_VECTOR (7 downto 0);
    signal local_knn_mat_2_2_3_reg_513 : STD_LOGIC_VECTOR (7 downto 0);
    signal local_knn_mat_2_1_3_reg_523 : STD_LOGIC_VECTOR (7 downto 0);
    signal local_knn_mat_2_0_3_reg_533 : STD_LOGIC_VECTOR (7 downto 0);
    signal local_knn_mat_1_3_3_reg_543 : STD_LOGIC_VECTOR (7 downto 0);
    signal local_knn_mat_1_2_3_reg_553 : STD_LOGIC_VECTOR (7 downto 0);
    signal local_knn_mat_1_1_3_reg_563 : STD_LOGIC_VECTOR (7 downto 0);
    signal local_knn_mat_1_0_3_reg_573 : STD_LOGIC_VECTOR (7 downto 0);
    signal local_knn_mat_0_3_3_reg_583 : STD_LOGIC_VECTOR (7 downto 0);
    signal local_knn_mat_0_2_3_reg_593 : STD_LOGIC_VECTOR (7 downto 0);
    signal local_knn_mat_0_1_3_reg_603 : STD_LOGIC_VECTOR (7 downto 0);
    signal local_knn_mat_0_0_3_reg_613 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_01_rec_reg_623 : STD_LOGIC_VECTOR (4 downto 0);
    signal p_0_rec_reg_635 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_compute_fu_647_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal grp_load_unsigned_long_s_fu_721_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal grp_load_unsigned_char_s_fu_739_ap_start_reg : STD_LOGIC := '0';
    signal local_knn_mat_0_0_1_fu_120 : STD_LOGIC_VECTOR (7 downto 0);
    signal local_knn_mat_0_0_4_fu_1419_p6 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal local_knn_mat_0_1_1_fu_124 : STD_LOGIC_VECTOR (7 downto 0);
    signal local_knn_mat_0_1_4_fu_1433_p6 : STD_LOGIC_VECTOR (7 downto 0);
    signal local_knn_mat_0_2_1_fu_128 : STD_LOGIC_VECTOR (7 downto 0);
    signal local_knn_mat_0_2_4_fu_1447_p6 : STD_LOGIC_VECTOR (7 downto 0);
    signal local_knn_mat_0_3_1_fu_132 : STD_LOGIC_VECTOR (7 downto 0);
    signal local_knn_mat_0_3_4_fu_1461_p6 : STD_LOGIC_VECTOR (7 downto 0);
    signal local_knn_mat_1_0_1_fu_136 : STD_LOGIC_VECTOR (7 downto 0);
    signal local_knn_mat_1_0_4_fu_1343_p6 : STD_LOGIC_VECTOR (7 downto 0);
    signal local_knn_mat_1_1_1_fu_140 : STD_LOGIC_VECTOR (7 downto 0);
    signal local_knn_mat_1_1_4_fu_1357_p6 : STD_LOGIC_VECTOR (7 downto 0);
    signal local_knn_mat_1_2_1_fu_144 : STD_LOGIC_VECTOR (7 downto 0);
    signal local_knn_mat_1_2_4_fu_1371_p6 : STD_LOGIC_VECTOR (7 downto 0);
    signal local_knn_mat_1_3_1_fu_148 : STD_LOGIC_VECTOR (7 downto 0);
    signal local_knn_mat_1_3_4_fu_1385_p6 : STD_LOGIC_VECTOR (7 downto 0);
    signal local_knn_mat_2_0_1_fu_152 : STD_LOGIC_VECTOR (7 downto 0);
    signal local_knn_mat_2_0_4_fu_1267_p6 : STD_LOGIC_VECTOR (7 downto 0);
    signal local_knn_mat_2_1_1_fu_156 : STD_LOGIC_VECTOR (7 downto 0);
    signal local_knn_mat_2_1_4_fu_1281_p6 : STD_LOGIC_VECTOR (7 downto 0);
    signal local_knn_mat_2_2_1_fu_160 : STD_LOGIC_VECTOR (7 downto 0);
    signal local_knn_mat_2_2_4_fu_1295_p6 : STD_LOGIC_VECTOR (7 downto 0);
    signal local_knn_mat_2_3_1_fu_164 : STD_LOGIC_VECTOR (7 downto 0);
    signal local_knn_mat_2_3_4_fu_1309_p6 : STD_LOGIC_VECTOR (7 downto 0);
    signal local_knn_mat_3_0_1_fu_168 : STD_LOGIC_VECTOR (7 downto 0);
    signal local_knn_mat_3_0_4_fu_1191_p6 : STD_LOGIC_VECTOR (7 downto 0);
    signal local_knn_mat_3_1_1_fu_172 : STD_LOGIC_VECTOR (7 downto 0);
    signal local_knn_mat_3_1_4_fu_1205_p6 : STD_LOGIC_VECTOR (7 downto 0);
    signal local_knn_mat_3_2_1_fu_176 : STD_LOGIC_VECTOR (7 downto 0);
    signal local_knn_mat_3_2_4_fu_1219_p6 : STD_LOGIC_VECTOR (7 downto 0);
    signal local_knn_mat_3_3_1_fu_180 : STD_LOGIC_VECTOR (7 downto 0);
    signal local_knn_mat_3_3_4_fu_1233_p6 : STD_LOGIC_VECTOR (7 downto 0);
    signal local_knn_mat_4_0_1_fu_184 : STD_LOGIC_VECTOR (7 downto 0);
    signal local_knn_mat_4_0_4_fu_1115_p6 : STD_LOGIC_VECTOR (7 downto 0);
    signal local_knn_mat_4_1_1_fu_188 : STD_LOGIC_VECTOR (7 downto 0);
    signal local_knn_mat_4_1_4_fu_1129_p6 : STD_LOGIC_VECTOR (7 downto 0);
    signal local_knn_mat_4_2_1_fu_192 : STD_LOGIC_VECTOR (7 downto 0);
    signal local_knn_mat_4_2_4_fu_1143_p6 : STD_LOGIC_VECTOR (7 downto 0);
    signal local_knn_mat_4_3_1_fu_196 : STD_LOGIC_VECTOR (7 downto 0);
    signal local_knn_mat_4_3_4_fu_1157_p6 : STD_LOGIC_VECTOR (7 downto 0);
    signal local_knn_mat_5_0_1_fu_200 : STD_LOGIC_VECTOR (7 downto 0);
    signal local_knn_mat_5_0_4_fu_1039_p6 : STD_LOGIC_VECTOR (7 downto 0);
    signal local_knn_mat_5_1_1_fu_204 : STD_LOGIC_VECTOR (7 downto 0);
    signal local_knn_mat_5_1_4_fu_1053_p6 : STD_LOGIC_VECTOR (7 downto 0);
    signal local_knn_mat_5_2_1_fu_208 : STD_LOGIC_VECTOR (7 downto 0);
    signal local_knn_mat_5_2_4_fu_1067_p6 : STD_LOGIC_VECTOR (7 downto 0);
    signal local_knn_mat_5_3_1_fu_212 : STD_LOGIC_VECTOR (7 downto 0);
    signal local_knn_mat_5_3_4_fu_1081_p6 : STD_LOGIC_VECTOR (7 downto 0);
    signal local_knn_mat_6_0_1_fu_216 : STD_LOGIC_VECTOR (7 downto 0);
    signal local_knn_mat_6_0_4_fu_982_p6 : STD_LOGIC_VECTOR (7 downto 0);
    signal local_knn_mat_6_1_1_fu_220 : STD_LOGIC_VECTOR (7 downto 0);
    signal local_knn_mat_6_1_4_fu_996_p6 : STD_LOGIC_VECTOR (7 downto 0);
    signal local_knn_mat_6_2_1_fu_224 : STD_LOGIC_VECTOR (7 downto 0);
    signal local_knn_mat_6_2_4_fu_1010_p6 : STD_LOGIC_VECTOR (7 downto 0);
    signal local_knn_mat_7_0_1_fu_228 : STD_LOGIC_VECTOR (7 downto 0);
    signal local_knn_mat_7_0_4_fu_1495_p6 : STD_LOGIC_VECTOR (7 downto 0);
    signal local_knn_mat_7_1_1_fu_232 : STD_LOGIC_VECTOR (7 downto 0);
    signal local_knn_mat_7_1_4_fu_1509_p6 : STD_LOGIC_VECTOR (7 downto 0);
    signal local_knn_mat_7_2_1_fu_236 : STD_LOGIC_VECTOR (7 downto 0);
    signal local_knn_mat_7_2_4_fu_1523_p6 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_shl_fu_856_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_shl_cast_fu_864_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal x_cast_fu_852_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal exitcond_fu_886_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_s_fu_900_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_shl_mid1_fu_910_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_shl_cast_mid1_fu_918_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal x_cast_mid1_fu_906_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_mid1_fu_922_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_fu_868_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_cast_mid2_v_fu_928_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal y_mid2_fu_892_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal y_cast_fu_952_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_26_fu_936_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_27_fu_940_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_25_fu_956_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_1_fu_960_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal local_knn_mat_6_0_4_fu_982_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal local_knn_mat_6_1_4_fu_996_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal local_knn_mat_6_2_4_fu_1010_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal local_knn_mat_5_0_4_fu_1039_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal local_knn_mat_5_1_4_fu_1053_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal local_knn_mat_5_2_4_fu_1067_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal local_knn_mat_5_3_4_fu_1081_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal local_knn_mat_4_0_4_fu_1115_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal local_knn_mat_4_1_4_fu_1129_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal local_knn_mat_4_2_4_fu_1143_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal local_knn_mat_4_3_4_fu_1157_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal local_knn_mat_3_0_4_fu_1191_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal local_knn_mat_3_1_4_fu_1205_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal local_knn_mat_3_2_4_fu_1219_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal local_knn_mat_3_3_4_fu_1233_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal local_knn_mat_2_0_4_fu_1267_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal local_knn_mat_2_1_4_fu_1281_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal local_knn_mat_2_2_4_fu_1295_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal local_knn_mat_2_3_4_fu_1309_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal local_knn_mat_1_0_4_fu_1343_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal local_knn_mat_1_1_4_fu_1357_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal local_knn_mat_1_2_4_fu_1371_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal local_knn_mat_1_3_4_fu_1385_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal local_knn_mat_0_0_4_fu_1419_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal local_knn_mat_0_1_4_fu_1433_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal local_knn_mat_0_2_4_fu_1447_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal local_knn_mat_0_3_4_fu_1461_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal local_knn_mat_7_0_4_fu_1495_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal local_knn_mat_7_1_4_fu_1509_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal local_knn_mat_7_2_4_fu_1523_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal a_read_assign_fu_1564_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_i_fu_1574_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_28_fu_1570_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;

    component digitrec_kernel_compute IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        test_image : IN STD_LOGIC_VECTOR (63 downto 0);
        train_images_0_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        train_images_0_ce0 : OUT STD_LOGIC;
        train_images_0_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        train_images_1_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        train_images_1_ce0 : OUT STD_LOGIC;
        train_images_1_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        train_images_2_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        train_images_2_ce0 : OUT STD_LOGIC;
        train_images_2_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        train_images_3_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        train_images_3_ce0 : OUT STD_LOGIC;
        train_images_3_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        train_images_4_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        train_images_4_ce0 : OUT STD_LOGIC;
        train_images_4_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        train_images_5_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        train_images_5_ce0 : OUT STD_LOGIC;
        train_images_5_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        train_images_6_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        train_images_6_ce0 : OUT STD_LOGIC;
        train_images_6_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        train_images_7_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        train_images_7_ce0 : OUT STD_LOGIC;
        train_images_7_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        knn_mat_0_0_read : IN STD_LOGIC_VECTOR (7 downto 0);
        knn_mat_0_1_read : IN STD_LOGIC_VECTOR (7 downto 0);
        knn_mat_0_2_read : IN STD_LOGIC_VECTOR (7 downto 0);
        knn_mat_0_3_read : IN STD_LOGIC_VECTOR (7 downto 0);
        knn_mat_1_0_read : IN STD_LOGIC_VECTOR (7 downto 0);
        knn_mat_1_1_read : IN STD_LOGIC_VECTOR (7 downto 0);
        knn_mat_1_2_read : IN STD_LOGIC_VECTOR (7 downto 0);
        knn_mat_1_3_read : IN STD_LOGIC_VECTOR (7 downto 0);
        knn_mat_2_0_read : IN STD_LOGIC_VECTOR (7 downto 0);
        knn_mat_2_1_read : IN STD_LOGIC_VECTOR (7 downto 0);
        knn_mat_2_2_read : IN STD_LOGIC_VECTOR (7 downto 0);
        knn_mat_2_3_read : IN STD_LOGIC_VECTOR (7 downto 0);
        knn_mat_3_0_read : IN STD_LOGIC_VECTOR (7 downto 0);
        knn_mat_3_1_read : IN STD_LOGIC_VECTOR (7 downto 0);
        knn_mat_3_2_read : IN STD_LOGIC_VECTOR (7 downto 0);
        knn_mat_3_3_read : IN STD_LOGIC_VECTOR (7 downto 0);
        knn_mat_4_0_read : IN STD_LOGIC_VECTOR (7 downto 0);
        knn_mat_4_1_read : IN STD_LOGIC_VECTOR (7 downto 0);
        knn_mat_4_2_read : IN STD_LOGIC_VECTOR (7 downto 0);
        knn_mat_4_3_read : IN STD_LOGIC_VECTOR (7 downto 0);
        knn_mat_5_0_read : IN STD_LOGIC_VECTOR (7 downto 0);
        knn_mat_5_1_read : IN STD_LOGIC_VECTOR (7 downto 0);
        knn_mat_5_2_read : IN STD_LOGIC_VECTOR (7 downto 0);
        knn_mat_5_3_read : IN STD_LOGIC_VECTOR (7 downto 0);
        knn_mat_6_0_read : IN STD_LOGIC_VECTOR (7 downto 0);
        knn_mat_6_1_read : IN STD_LOGIC_VECTOR (7 downto 0);
        knn_mat_6_2_read : IN STD_LOGIC_VECTOR (7 downto 0);
        knn_mat_7_0_read : IN STD_LOGIC_VECTOR (7 downto 0);
        knn_mat_7_1_read : IN STD_LOGIC_VECTOR (7 downto 0);
        knn_mat_7_2_read : IN STD_LOGIC_VECTOR (7 downto 0);
        local_num_elements : IN STD_LOGIC_VECTOR (10 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_5 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_6 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_7 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_8 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_9 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_10 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_11 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_12 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_13 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_14 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_15 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_16 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_17 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_18 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_19 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_20 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_21 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_22 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_23 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_24 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_25 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_26 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_27 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_28 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_29 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component digitrec_kernel_load_unsigned_long_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_data_dram_AWVALID : OUT STD_LOGIC;
        m_axi_data_dram_AWREADY : IN STD_LOGIC;
        m_axi_data_dram_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_data_dram_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_data_dram_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_data_dram_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_data_dram_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_data_dram_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_data_dram_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_data_dram_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_data_dram_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_data_dram_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_data_dram_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_data_dram_WVALID : OUT STD_LOGIC;
        m_axi_data_dram_WREADY : IN STD_LOGIC;
        m_axi_data_dram_WDATA : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_data_dram_WSTRB : OUT STD_LOGIC_VECTOR (7 downto 0);
        m_axi_data_dram_WLAST : OUT STD_LOGIC;
        m_axi_data_dram_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_data_dram_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_data_dram_ARVALID : OUT STD_LOGIC;
        m_axi_data_dram_ARREADY : IN STD_LOGIC;
        m_axi_data_dram_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_data_dram_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_data_dram_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_data_dram_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_data_dram_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_data_dram_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_data_dram_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_data_dram_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_data_dram_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_data_dram_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_data_dram_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_data_dram_RVALID : IN STD_LOGIC;
        m_axi_data_dram_RREADY : OUT STD_LOGIC;
        m_axi_data_dram_RDATA : IN STD_LOGIC_VECTOR (63 downto 0);
        m_axi_data_dram_RLAST : IN STD_LOGIC;
        m_axi_data_dram_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_data_dram_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_data_dram_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_data_dram_BVALID : IN STD_LOGIC;
        m_axi_data_dram_BREADY : OUT STD_LOGIC;
        m_axi_data_dram_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_data_dram_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_data_dram_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        data_dram_offset : IN STD_LOGIC_VECTOR (60 downto 0);
        data_dram_offset1 : IN STD_LOGIC_VECTOR (14 downto 0);
        data_local_0_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        data_local_0_ce0 : OUT STD_LOGIC;
        data_local_0_we0 : OUT STD_LOGIC;
        data_local_0_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        data_local_1_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        data_local_1_ce0 : OUT STD_LOGIC;
        data_local_1_we0 : OUT STD_LOGIC;
        data_local_1_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        data_local_2_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        data_local_2_ce0 : OUT STD_LOGIC;
        data_local_2_we0 : OUT STD_LOGIC;
        data_local_2_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        data_local_3_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        data_local_3_ce0 : OUT STD_LOGIC;
        data_local_3_we0 : OUT STD_LOGIC;
        data_local_3_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        data_local_4_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        data_local_4_ce0 : OUT STD_LOGIC;
        data_local_4_we0 : OUT STD_LOGIC;
        data_local_4_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        data_local_5_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        data_local_5_ce0 : OUT STD_LOGIC;
        data_local_5_we0 : OUT STD_LOGIC;
        data_local_5_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        data_local_6_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        data_local_6_ce0 : OUT STD_LOGIC;
        data_local_6_we0 : OUT STD_LOGIC;
        data_local_6_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        data_local_7_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        data_local_7_ce0 : OUT STD_LOGIC;
        data_local_7_we0 : OUT STD_LOGIC;
        data_local_7_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        num_elem : IN STD_LOGIC_VECTOR (10 downto 0) );
    end component;


    component digitrec_kernel_load_unsigned_char_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        p_read : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read4 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read8 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read27 : IN STD_LOGIC_VECTOR (7 downto 0);
        m_axi_data_local_AWVALID : OUT STD_LOGIC;
        m_axi_data_local_AWREADY : IN STD_LOGIC;
        m_axi_data_local_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_data_local_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_data_local_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_data_local_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_data_local_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_data_local_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_data_local_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_data_local_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_data_local_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_data_local_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_data_local_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_data_local_WVALID : OUT STD_LOGIC;
        m_axi_data_local_WREADY : IN STD_LOGIC;
        m_axi_data_local_WDATA : OUT STD_LOGIC_VECTOR (7 downto 0);
        m_axi_data_local_WSTRB : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_data_local_WLAST : OUT STD_LOGIC;
        m_axi_data_local_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_data_local_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_data_local_ARVALID : OUT STD_LOGIC;
        m_axi_data_local_ARREADY : IN STD_LOGIC;
        m_axi_data_local_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_data_local_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_data_local_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_data_local_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_data_local_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_data_local_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_data_local_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_data_local_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_data_local_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_data_local_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_data_local_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_data_local_RVALID : IN STD_LOGIC;
        m_axi_data_local_RREADY : OUT STD_LOGIC;
        m_axi_data_local_RDATA : IN STD_LOGIC_VECTOR (7 downto 0);
        m_axi_data_local_RLAST : IN STD_LOGIC;
        m_axi_data_local_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_data_local_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_data_local_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_data_local_BVALID : IN STD_LOGIC;
        m_axi_data_local_BREADY : OUT STD_LOGIC;
        m_axi_data_local_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_data_local_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_data_local_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        data_local_offset : IN STD_LOGIC_VECTOR (63 downto 0);
        data_local_offset1 : IN STD_LOGIC_VECTOR (4 downto 0) );
    end component;


    component digitrec_kernel_digitrec_kernel_mux_42_8_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (7 downto 0);
        din3 : IN STD_LOGIC_VECTOR (7 downto 0);
        din4 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component digitrec_kernel_compute_local_temp_0 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (63 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component digitrec_kernel_digitrec_kernel_control_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        ap_start : OUT STD_LOGIC;
        interrupt : OUT STD_LOGIC;
        ap_ready : IN STD_LOGIC;
        ap_done : IN STD_LOGIC;
        ap_idle : IN STD_LOGIC;
        test_image : OUT STD_LOGIC_VECTOR (63 downto 0);
        train_images : OUT STD_LOGIC_VECTOR (63 downto 0);
        knn_mat : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component digitrec_kernel_digitrec_kernel_gmem_m_axi IS
    generic (
        CONSERVATIVE : INTEGER;
        USER_DW : INTEGER;
        USER_AW : INTEGER;
        USER_MAXREQS : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_ARVALID : IN STD_LOGIC;
        I_ARREADY : OUT STD_LOGIC;
        I_ARADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_ARID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_ARSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_RVALID : OUT STD_LOGIC;
        I_RREADY : IN STD_LOGIC;
        I_RDATA : OUT STD_LOGIC_VECTOR (63 downto 0);
        I_RID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_RLAST : OUT STD_LOGIC;
        I_AWVALID : IN STD_LOGIC;
        I_AWREADY : OUT STD_LOGIC;
        I_AWADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_AWID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_AWSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_WVALID : IN STD_LOGIC;
        I_WREADY : OUT STD_LOGIC;
        I_WDATA : IN STD_LOGIC_VECTOR (63 downto 0);
        I_WID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WLAST : IN STD_LOGIC;
        I_WSTRB : IN STD_LOGIC_VECTOR (7 downto 0);
        I_BVALID : OUT STD_LOGIC;
        I_BREADY : IN STD_LOGIC;
        I_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_BID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_BUSER : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component digitrec_kernel_digitrec_kernel_gmem2_m_axi IS
    generic (
        CONSERVATIVE : INTEGER;
        USER_DW : INTEGER;
        USER_AW : INTEGER;
        USER_MAXREQS : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_ARVALID : IN STD_LOGIC;
        I_ARREADY : OUT STD_LOGIC;
        I_ARADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_ARID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_ARSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_RVALID : OUT STD_LOGIC;
        I_RREADY : IN STD_LOGIC;
        I_RDATA : OUT STD_LOGIC_VECTOR (7 downto 0);
        I_RID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_RLAST : OUT STD_LOGIC;
        I_AWVALID : IN STD_LOGIC;
        I_AWREADY : OUT STD_LOGIC;
        I_AWADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_AWID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_AWSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_WVALID : IN STD_LOGIC;
        I_WREADY : OUT STD_LOGIC;
        I_WDATA : IN STD_LOGIC_VECTOR (7 downto 0);
        I_WID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WLAST : IN STD_LOGIC;
        I_WSTRB : IN STD_LOGIC_VECTOR (0 downto 0);
        I_BVALID : OUT STD_LOGIC;
        I_BREADY : IN STD_LOGIC;
        I_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_BID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_BUSER : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;



begin
    digitrec_kernel_control_s_axi_U : component digitrec_kernel_digitrec_kernel_control_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_CONTROL_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_CONTROL_DATA_WIDTH)
    port map (
        AWVALID => s_axi_control_AWVALID,
        AWREADY => s_axi_control_AWREADY,
        AWADDR => s_axi_control_AWADDR,
        WVALID => s_axi_control_WVALID,
        WREADY => s_axi_control_WREADY,
        WDATA => s_axi_control_WDATA,
        WSTRB => s_axi_control_WSTRB,
        ARVALID => s_axi_control_ARVALID,
        ARREADY => s_axi_control_ARREADY,
        ARADDR => s_axi_control_ARADDR,
        RVALID => s_axi_control_RVALID,
        RREADY => s_axi_control_RREADY,
        RDATA => s_axi_control_RDATA,
        RRESP => s_axi_control_RRESP,
        BVALID => s_axi_control_BVALID,
        BREADY => s_axi_control_BREADY,
        BRESP => s_axi_control_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        ap_start => ap_start,
        interrupt => interrupt,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_idle => ap_idle,
        test_image => test_image,
        train_images => train_images,
        knn_mat => knn_mat);

    digitrec_kernel_gmem_m_axi_U : component digitrec_kernel_digitrec_kernel_gmem_m_axi
    generic map (
        CONSERVATIVE => 1,
        USER_DW => 64,
        USER_AW => 64,
        USER_MAXREQS => 5,
        NUM_READ_OUTSTANDING => 16,
        NUM_WRITE_OUTSTANDING => 16,
        MAX_READ_BURST_LENGTH => 16,
        MAX_WRITE_BURST_LENGTH => 16,
        C_M_AXI_ID_WIDTH => C_M_AXI_GMEM_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_GMEM_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_GMEM_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_GMEM_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_GMEM_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_GMEM_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_GMEM_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_GMEM_BUSER_WIDTH,
        C_USER_VALUE => C_M_AXI_GMEM_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_GMEM_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_GMEM_CACHE_VALUE)
    port map (
        AWVALID => m_axi_gmem_AWVALID,
        AWREADY => m_axi_gmem_AWREADY,
        AWADDR => m_axi_gmem_AWADDR,
        AWID => m_axi_gmem_AWID,
        AWLEN => m_axi_gmem_AWLEN,
        AWSIZE => m_axi_gmem_AWSIZE,
        AWBURST => m_axi_gmem_AWBURST,
        AWLOCK => m_axi_gmem_AWLOCK,
        AWCACHE => m_axi_gmem_AWCACHE,
        AWPROT => m_axi_gmem_AWPROT,
        AWQOS => m_axi_gmem_AWQOS,
        AWREGION => m_axi_gmem_AWREGION,
        AWUSER => m_axi_gmem_AWUSER,
        WVALID => m_axi_gmem_WVALID,
        WREADY => m_axi_gmem_WREADY,
        WDATA => m_axi_gmem_WDATA,
        WSTRB => m_axi_gmem_WSTRB,
        WLAST => m_axi_gmem_WLAST,
        WID => m_axi_gmem_WID,
        WUSER => m_axi_gmem_WUSER,
        ARVALID => m_axi_gmem_ARVALID,
        ARREADY => m_axi_gmem_ARREADY,
        ARADDR => m_axi_gmem_ARADDR,
        ARID => m_axi_gmem_ARID,
        ARLEN => m_axi_gmem_ARLEN,
        ARSIZE => m_axi_gmem_ARSIZE,
        ARBURST => m_axi_gmem_ARBURST,
        ARLOCK => m_axi_gmem_ARLOCK,
        ARCACHE => m_axi_gmem_ARCACHE,
        ARPROT => m_axi_gmem_ARPROT,
        ARQOS => m_axi_gmem_ARQOS,
        ARREGION => m_axi_gmem_ARREGION,
        ARUSER => m_axi_gmem_ARUSER,
        RVALID => m_axi_gmem_RVALID,
        RREADY => m_axi_gmem_RREADY,
        RDATA => m_axi_gmem_RDATA,
        RLAST => m_axi_gmem_RLAST,
        RID => m_axi_gmem_RID,
        RUSER => m_axi_gmem_RUSER,
        RRESP => m_axi_gmem_RRESP,
        BVALID => m_axi_gmem_BVALID,
        BREADY => m_axi_gmem_BREADY,
        BRESP => m_axi_gmem_BRESP,
        BID => m_axi_gmem_BID,
        BUSER => m_axi_gmem_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_ARVALID => gmem_ARVALID,
        I_ARREADY => gmem_ARREADY,
        I_ARADDR => grp_load_unsigned_long_s_fu_721_m_axi_data_dram_ARADDR,
        I_ARID => grp_load_unsigned_long_s_fu_721_m_axi_data_dram_ARID,
        I_ARLEN => grp_load_unsigned_long_s_fu_721_m_axi_data_dram_ARLEN,
        I_ARSIZE => grp_load_unsigned_long_s_fu_721_m_axi_data_dram_ARSIZE,
        I_ARLOCK => grp_load_unsigned_long_s_fu_721_m_axi_data_dram_ARLOCK,
        I_ARCACHE => grp_load_unsigned_long_s_fu_721_m_axi_data_dram_ARCACHE,
        I_ARQOS => grp_load_unsigned_long_s_fu_721_m_axi_data_dram_ARQOS,
        I_ARPROT => grp_load_unsigned_long_s_fu_721_m_axi_data_dram_ARPROT,
        I_ARUSER => grp_load_unsigned_long_s_fu_721_m_axi_data_dram_ARUSER,
        I_ARBURST => grp_load_unsigned_long_s_fu_721_m_axi_data_dram_ARBURST,
        I_ARREGION => grp_load_unsigned_long_s_fu_721_m_axi_data_dram_ARREGION,
        I_RVALID => gmem_RVALID,
        I_RREADY => gmem_RREADY,
        I_RDATA => gmem_RDATA,
        I_RID => gmem_RID,
        I_RUSER => gmem_RUSER,
        I_RRESP => gmem_RRESP,
        I_RLAST => gmem_RLAST,
        I_AWVALID => ap_const_logic_0,
        I_AWREADY => gmem_AWREADY,
        I_AWADDR => ap_const_lv64_0,
        I_AWID => ap_const_lv1_0,
        I_AWLEN => ap_const_lv32_0,
        I_AWSIZE => ap_const_lv3_0,
        I_AWLOCK => ap_const_lv2_0,
        I_AWCACHE => ap_const_lv4_0,
        I_AWQOS => ap_const_lv4_0,
        I_AWPROT => ap_const_lv3_0,
        I_AWUSER => ap_const_lv1_0,
        I_AWBURST => ap_const_lv2_0,
        I_AWREGION => ap_const_lv4_0,
        I_WVALID => ap_const_logic_0,
        I_WREADY => gmem_WREADY,
        I_WDATA => ap_const_lv64_0,
        I_WID => ap_const_lv1_0,
        I_WUSER => ap_const_lv1_0,
        I_WLAST => ap_const_logic_0,
        I_WSTRB => ap_const_lv8_0,
        I_BVALID => gmem_BVALID,
        I_BREADY => ap_const_logic_0,
        I_BRESP => gmem_BRESP,
        I_BID => gmem_BID,
        I_BUSER => gmem_BUSER);

    digitrec_kernel_gmem2_m_axi_U : component digitrec_kernel_digitrec_kernel_gmem2_m_axi
    generic map (
        CONSERVATIVE => 1,
        USER_DW => 8,
        USER_AW => 64,
        USER_MAXREQS => 5,
        NUM_READ_OUTSTANDING => 16,
        NUM_WRITE_OUTSTANDING => 16,
        MAX_READ_BURST_LENGTH => 16,
        MAX_WRITE_BURST_LENGTH => 16,
        C_M_AXI_ID_WIDTH => C_M_AXI_GMEM2_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_GMEM2_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_GMEM2_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_GMEM2_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_GMEM2_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_GMEM2_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_GMEM2_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_GMEM2_BUSER_WIDTH,
        C_USER_VALUE => C_M_AXI_GMEM2_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_GMEM2_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_GMEM2_CACHE_VALUE)
    port map (
        AWVALID => m_axi_gmem2_AWVALID,
        AWREADY => m_axi_gmem2_AWREADY,
        AWADDR => m_axi_gmem2_AWADDR,
        AWID => m_axi_gmem2_AWID,
        AWLEN => m_axi_gmem2_AWLEN,
        AWSIZE => m_axi_gmem2_AWSIZE,
        AWBURST => m_axi_gmem2_AWBURST,
        AWLOCK => m_axi_gmem2_AWLOCK,
        AWCACHE => m_axi_gmem2_AWCACHE,
        AWPROT => m_axi_gmem2_AWPROT,
        AWQOS => m_axi_gmem2_AWQOS,
        AWREGION => m_axi_gmem2_AWREGION,
        AWUSER => m_axi_gmem2_AWUSER,
        WVALID => m_axi_gmem2_WVALID,
        WREADY => m_axi_gmem2_WREADY,
        WDATA => m_axi_gmem2_WDATA,
        WSTRB => m_axi_gmem2_WSTRB,
        WLAST => m_axi_gmem2_WLAST,
        WID => m_axi_gmem2_WID,
        WUSER => m_axi_gmem2_WUSER,
        ARVALID => m_axi_gmem2_ARVALID,
        ARREADY => m_axi_gmem2_ARREADY,
        ARADDR => m_axi_gmem2_ARADDR,
        ARID => m_axi_gmem2_ARID,
        ARLEN => m_axi_gmem2_ARLEN,
        ARSIZE => m_axi_gmem2_ARSIZE,
        ARBURST => m_axi_gmem2_ARBURST,
        ARLOCK => m_axi_gmem2_ARLOCK,
        ARCACHE => m_axi_gmem2_ARCACHE,
        ARPROT => m_axi_gmem2_ARPROT,
        ARQOS => m_axi_gmem2_ARQOS,
        ARREGION => m_axi_gmem2_ARREGION,
        ARUSER => m_axi_gmem2_ARUSER,
        RVALID => m_axi_gmem2_RVALID,
        RREADY => m_axi_gmem2_RREADY,
        RDATA => m_axi_gmem2_RDATA,
        RLAST => m_axi_gmem2_RLAST,
        RID => m_axi_gmem2_RID,
        RUSER => m_axi_gmem2_RUSER,
        RRESP => m_axi_gmem2_RRESP,
        BVALID => m_axi_gmem2_BVALID,
        BREADY => m_axi_gmem2_BREADY,
        BRESP => m_axi_gmem2_BRESP,
        BID => m_axi_gmem2_BID,
        BUSER => m_axi_gmem2_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_ARVALID => ap_const_logic_0,
        I_ARREADY => gmem2_ARREADY,
        I_ARADDR => ap_const_lv64_0,
        I_ARID => ap_const_lv1_0,
        I_ARLEN => ap_const_lv32_0,
        I_ARSIZE => ap_const_lv3_0,
        I_ARLOCK => ap_const_lv2_0,
        I_ARCACHE => ap_const_lv4_0,
        I_ARQOS => ap_const_lv4_0,
        I_ARPROT => ap_const_lv3_0,
        I_ARUSER => ap_const_lv1_0,
        I_ARBURST => ap_const_lv2_0,
        I_ARREGION => ap_const_lv4_0,
        I_RVALID => gmem2_RVALID,
        I_RREADY => ap_const_logic_0,
        I_RDATA => gmem2_RDATA,
        I_RID => gmem2_RID,
        I_RUSER => gmem2_RUSER,
        I_RRESP => gmem2_RRESP,
        I_RLAST => gmem2_RLAST,
        I_AWVALID => gmem2_AWVALID,
        I_AWREADY => gmem2_AWREADY,
        I_AWADDR => grp_load_unsigned_char_s_fu_739_m_axi_data_local_AWADDR,
        I_AWID => grp_load_unsigned_char_s_fu_739_m_axi_data_local_AWID,
        I_AWLEN => grp_load_unsigned_char_s_fu_739_m_axi_data_local_AWLEN,
        I_AWSIZE => grp_load_unsigned_char_s_fu_739_m_axi_data_local_AWSIZE,
        I_AWLOCK => grp_load_unsigned_char_s_fu_739_m_axi_data_local_AWLOCK,
        I_AWCACHE => grp_load_unsigned_char_s_fu_739_m_axi_data_local_AWCACHE,
        I_AWQOS => grp_load_unsigned_char_s_fu_739_m_axi_data_local_AWQOS,
        I_AWPROT => grp_load_unsigned_char_s_fu_739_m_axi_data_local_AWPROT,
        I_AWUSER => grp_load_unsigned_char_s_fu_739_m_axi_data_local_AWUSER,
        I_AWBURST => grp_load_unsigned_char_s_fu_739_m_axi_data_local_AWBURST,
        I_AWREGION => grp_load_unsigned_char_s_fu_739_m_axi_data_local_AWREGION,
        I_WVALID => gmem2_WVALID,
        I_WREADY => gmem2_WREADY,
        I_WDATA => grp_load_unsigned_char_s_fu_739_m_axi_data_local_WDATA,
        I_WID => grp_load_unsigned_char_s_fu_739_m_axi_data_local_WID,
        I_WUSER => grp_load_unsigned_char_s_fu_739_m_axi_data_local_WUSER,
        I_WLAST => grp_load_unsigned_char_s_fu_739_m_axi_data_local_WLAST,
        I_WSTRB => grp_load_unsigned_char_s_fu_739_m_axi_data_local_WSTRB,
        I_BVALID => gmem2_BVALID,
        I_BREADY => gmem2_BREADY,
        I_BRESP => gmem2_BRESP,
        I_BID => gmem2_BID,
        I_BUSER => gmem2_BUSER);

    p_01_U : component digitrec_kernel_compute_local_temp_0
    generic map (
        DataWidth => 64,
        AddressRange => 225,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => p_01_address0,
        ce0 => p_01_ce0,
        we0 => p_01_we0,
        d0 => grp_load_unsigned_long_s_fu_721_data_local_0_d0,
        q0 => p_01_q0);

    p_1_U : component digitrec_kernel_compute_local_temp_0
    generic map (
        DataWidth => 64,
        AddressRange => 225,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => p_1_address0,
        ce0 => p_1_ce0,
        we0 => p_1_we0,
        d0 => grp_load_unsigned_long_s_fu_721_data_local_1_d0,
        q0 => p_1_q0);

    p_2_U : component digitrec_kernel_compute_local_temp_0
    generic map (
        DataWidth => 64,
        AddressRange => 225,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => p_2_address0,
        ce0 => p_2_ce0,
        we0 => p_2_we0,
        d0 => grp_load_unsigned_long_s_fu_721_data_local_2_d0,
        q0 => p_2_q0);

    p_3_U : component digitrec_kernel_compute_local_temp_0
    generic map (
        DataWidth => 64,
        AddressRange => 225,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => p_3_address0,
        ce0 => p_3_ce0,
        we0 => p_3_we0,
        d0 => grp_load_unsigned_long_s_fu_721_data_local_3_d0,
        q0 => p_3_q0);

    p_4_U : component digitrec_kernel_compute_local_temp_0
    generic map (
        DataWidth => 64,
        AddressRange => 225,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => p_4_address0,
        ce0 => p_4_ce0,
        we0 => p_4_we0,
        d0 => grp_load_unsigned_long_s_fu_721_data_local_4_d0,
        q0 => p_4_q0);

    p_5_U : component digitrec_kernel_compute_local_temp_0
    generic map (
        DataWidth => 64,
        AddressRange => 225,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => p_5_address0,
        ce0 => p_5_ce0,
        we0 => p_5_we0,
        d0 => grp_load_unsigned_long_s_fu_721_data_local_5_d0,
        q0 => p_5_q0);

    p_6_U : component digitrec_kernel_compute_local_temp_0
    generic map (
        DataWidth => 64,
        AddressRange => 225,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => p_6_address0,
        ce0 => p_6_ce0,
        we0 => p_6_we0,
        d0 => grp_load_unsigned_long_s_fu_721_data_local_6_d0,
        q0 => p_6_q0);

    p_7_U : component digitrec_kernel_compute_local_temp_0
    generic map (
        DataWidth => 64,
        AddressRange => 225,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => p_7_address0,
        ce0 => p_7_ce0,
        we0 => p_7_we0,
        d0 => grp_load_unsigned_long_s_fu_721_data_local_7_d0,
        q0 => p_7_q0);

    grp_compute_fu_647 : component digitrec_kernel_compute
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_compute_fu_647_ap_start,
        ap_done => grp_compute_fu_647_ap_done,
        ap_idle => grp_compute_fu_647_ap_idle,
        ap_ready => grp_compute_fu_647_ap_ready,
        test_image => test_image_read_reg_1910,
        train_images_0_address0 => grp_compute_fu_647_train_images_0_address0,
        train_images_0_ce0 => grp_compute_fu_647_train_images_0_ce0,
        train_images_0_q0 => p_01_q0,
        train_images_1_address0 => grp_compute_fu_647_train_images_1_address0,
        train_images_1_ce0 => grp_compute_fu_647_train_images_1_ce0,
        train_images_1_q0 => p_1_q0,
        train_images_2_address0 => grp_compute_fu_647_train_images_2_address0,
        train_images_2_ce0 => grp_compute_fu_647_train_images_2_ce0,
        train_images_2_q0 => p_2_q0,
        train_images_3_address0 => grp_compute_fu_647_train_images_3_address0,
        train_images_3_ce0 => grp_compute_fu_647_train_images_3_ce0,
        train_images_3_q0 => p_3_q0,
        train_images_4_address0 => grp_compute_fu_647_train_images_4_address0,
        train_images_4_ce0 => grp_compute_fu_647_train_images_4_ce0,
        train_images_4_q0 => p_4_q0,
        train_images_5_address0 => grp_compute_fu_647_train_images_5_address0,
        train_images_5_ce0 => grp_compute_fu_647_train_images_5_ce0,
        train_images_5_q0 => p_5_q0,
        train_images_6_address0 => grp_compute_fu_647_train_images_6_address0,
        train_images_6_ce0 => grp_compute_fu_647_train_images_6_ce0,
        train_images_6_q0 => p_6_q0,
        train_images_7_address0 => grp_compute_fu_647_train_images_7_address0,
        train_images_7_ce0 => grp_compute_fu_647_train_images_7_ce0,
        train_images_7_q0 => p_7_q0,
        knn_mat_0_0_read => local_knn_mat_0_0_3_reg_613,
        knn_mat_0_1_read => local_knn_mat_0_1_3_reg_603,
        knn_mat_0_2_read => local_knn_mat_0_2_3_reg_593,
        knn_mat_0_3_read => local_knn_mat_0_3_3_reg_583,
        knn_mat_1_0_read => local_knn_mat_1_0_3_reg_573,
        knn_mat_1_1_read => local_knn_mat_1_1_3_reg_563,
        knn_mat_1_2_read => local_knn_mat_1_2_3_reg_553,
        knn_mat_1_3_read => local_knn_mat_1_3_3_reg_543,
        knn_mat_2_0_read => local_knn_mat_2_0_3_reg_533,
        knn_mat_2_1_read => local_knn_mat_2_1_3_reg_523,
        knn_mat_2_2_read => local_knn_mat_2_2_3_reg_513,
        knn_mat_2_3_read => local_knn_mat_2_3_3_reg_503,
        knn_mat_3_0_read => local_knn_mat_3_0_3_reg_493,
        knn_mat_3_1_read => local_knn_mat_3_1_3_reg_483,
        knn_mat_3_2_read => local_knn_mat_3_2_3_reg_473,
        knn_mat_3_3_read => local_knn_mat_3_3_3_reg_463,
        knn_mat_4_0_read => local_knn_mat_4_0_3_reg_453,
        knn_mat_4_1_read => local_knn_mat_4_1_3_reg_443,
        knn_mat_4_2_read => local_knn_mat_4_2_3_reg_433,
        knn_mat_4_3_read => local_knn_mat_4_3_3_reg_423,
        knn_mat_5_0_read => local_knn_mat_5_0_3_reg_413,
        knn_mat_5_1_read => local_knn_mat_5_1_3_reg_403,
        knn_mat_5_2_read => local_knn_mat_5_2_3_reg_393,
        knn_mat_5_3_read => local_knn_mat_5_3_3_reg_383,
        knn_mat_6_0_read => local_knn_mat_6_0_3_reg_373,
        knn_mat_6_1_read => local_knn_mat_6_1_3_reg_363,
        knn_mat_6_2_read => local_knn_mat_6_2_3_reg_353,
        knn_mat_7_0_read => local_knn_mat_7_0_3_reg_343,
        knn_mat_7_1_read => local_knn_mat_7_1_3_reg_333,
        knn_mat_7_2_read => local_knn_mat_7_2_3_reg_323,
        local_num_elements => local_num_elements_reg_2096,
        ap_return_0 => grp_compute_fu_647_ap_return_0,
        ap_return_1 => grp_compute_fu_647_ap_return_1,
        ap_return_2 => grp_compute_fu_647_ap_return_2,
        ap_return_3 => grp_compute_fu_647_ap_return_3,
        ap_return_4 => grp_compute_fu_647_ap_return_4,
        ap_return_5 => grp_compute_fu_647_ap_return_5,
        ap_return_6 => grp_compute_fu_647_ap_return_6,
        ap_return_7 => grp_compute_fu_647_ap_return_7,
        ap_return_8 => grp_compute_fu_647_ap_return_8,
        ap_return_9 => grp_compute_fu_647_ap_return_9,
        ap_return_10 => grp_compute_fu_647_ap_return_10,
        ap_return_11 => grp_compute_fu_647_ap_return_11,
        ap_return_12 => grp_compute_fu_647_ap_return_12,
        ap_return_13 => grp_compute_fu_647_ap_return_13,
        ap_return_14 => grp_compute_fu_647_ap_return_14,
        ap_return_15 => grp_compute_fu_647_ap_return_15,
        ap_return_16 => grp_compute_fu_647_ap_return_16,
        ap_return_17 => grp_compute_fu_647_ap_return_17,
        ap_return_18 => grp_compute_fu_647_ap_return_18,
        ap_return_19 => grp_compute_fu_647_ap_return_19,
        ap_return_20 => grp_compute_fu_647_ap_return_20,
        ap_return_21 => grp_compute_fu_647_ap_return_21,
        ap_return_22 => grp_compute_fu_647_ap_return_22,
        ap_return_23 => grp_compute_fu_647_ap_return_23,
        ap_return_24 => grp_compute_fu_647_ap_return_24,
        ap_return_25 => grp_compute_fu_647_ap_return_25,
        ap_return_26 => grp_compute_fu_647_ap_return_26,
        ap_return_27 => grp_compute_fu_647_ap_return_27,
        ap_return_28 => grp_compute_fu_647_ap_return_28,
        ap_return_29 => grp_compute_fu_647_ap_return_29);

    grp_load_unsigned_long_s_fu_721 : component digitrec_kernel_load_unsigned_long_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_load_unsigned_long_s_fu_721_ap_start,
        ap_done => grp_load_unsigned_long_s_fu_721_ap_done,
        ap_idle => grp_load_unsigned_long_s_fu_721_ap_idle,
        ap_ready => grp_load_unsigned_long_s_fu_721_ap_ready,
        m_axi_data_dram_AWVALID => grp_load_unsigned_long_s_fu_721_m_axi_data_dram_AWVALID,
        m_axi_data_dram_AWREADY => ap_const_logic_0,
        m_axi_data_dram_AWADDR => grp_load_unsigned_long_s_fu_721_m_axi_data_dram_AWADDR,
        m_axi_data_dram_AWID => grp_load_unsigned_long_s_fu_721_m_axi_data_dram_AWID,
        m_axi_data_dram_AWLEN => grp_load_unsigned_long_s_fu_721_m_axi_data_dram_AWLEN,
        m_axi_data_dram_AWSIZE => grp_load_unsigned_long_s_fu_721_m_axi_data_dram_AWSIZE,
        m_axi_data_dram_AWBURST => grp_load_unsigned_long_s_fu_721_m_axi_data_dram_AWBURST,
        m_axi_data_dram_AWLOCK => grp_load_unsigned_long_s_fu_721_m_axi_data_dram_AWLOCK,
        m_axi_data_dram_AWCACHE => grp_load_unsigned_long_s_fu_721_m_axi_data_dram_AWCACHE,
        m_axi_data_dram_AWPROT => grp_load_unsigned_long_s_fu_721_m_axi_data_dram_AWPROT,
        m_axi_data_dram_AWQOS => grp_load_unsigned_long_s_fu_721_m_axi_data_dram_AWQOS,
        m_axi_data_dram_AWREGION => grp_load_unsigned_long_s_fu_721_m_axi_data_dram_AWREGION,
        m_axi_data_dram_AWUSER => grp_load_unsigned_long_s_fu_721_m_axi_data_dram_AWUSER,
        m_axi_data_dram_WVALID => grp_load_unsigned_long_s_fu_721_m_axi_data_dram_WVALID,
        m_axi_data_dram_WREADY => ap_const_logic_0,
        m_axi_data_dram_WDATA => grp_load_unsigned_long_s_fu_721_m_axi_data_dram_WDATA,
        m_axi_data_dram_WSTRB => grp_load_unsigned_long_s_fu_721_m_axi_data_dram_WSTRB,
        m_axi_data_dram_WLAST => grp_load_unsigned_long_s_fu_721_m_axi_data_dram_WLAST,
        m_axi_data_dram_WID => grp_load_unsigned_long_s_fu_721_m_axi_data_dram_WID,
        m_axi_data_dram_WUSER => grp_load_unsigned_long_s_fu_721_m_axi_data_dram_WUSER,
        m_axi_data_dram_ARVALID => grp_load_unsigned_long_s_fu_721_m_axi_data_dram_ARVALID,
        m_axi_data_dram_ARREADY => gmem_ARREADY,
        m_axi_data_dram_ARADDR => grp_load_unsigned_long_s_fu_721_m_axi_data_dram_ARADDR,
        m_axi_data_dram_ARID => grp_load_unsigned_long_s_fu_721_m_axi_data_dram_ARID,
        m_axi_data_dram_ARLEN => grp_load_unsigned_long_s_fu_721_m_axi_data_dram_ARLEN,
        m_axi_data_dram_ARSIZE => grp_load_unsigned_long_s_fu_721_m_axi_data_dram_ARSIZE,
        m_axi_data_dram_ARBURST => grp_load_unsigned_long_s_fu_721_m_axi_data_dram_ARBURST,
        m_axi_data_dram_ARLOCK => grp_load_unsigned_long_s_fu_721_m_axi_data_dram_ARLOCK,
        m_axi_data_dram_ARCACHE => grp_load_unsigned_long_s_fu_721_m_axi_data_dram_ARCACHE,
        m_axi_data_dram_ARPROT => grp_load_unsigned_long_s_fu_721_m_axi_data_dram_ARPROT,
        m_axi_data_dram_ARQOS => grp_load_unsigned_long_s_fu_721_m_axi_data_dram_ARQOS,
        m_axi_data_dram_ARREGION => grp_load_unsigned_long_s_fu_721_m_axi_data_dram_ARREGION,
        m_axi_data_dram_ARUSER => grp_load_unsigned_long_s_fu_721_m_axi_data_dram_ARUSER,
        m_axi_data_dram_RVALID => gmem_RVALID,
        m_axi_data_dram_RREADY => grp_load_unsigned_long_s_fu_721_m_axi_data_dram_RREADY,
        m_axi_data_dram_RDATA => gmem_RDATA,
        m_axi_data_dram_RLAST => gmem_RLAST,
        m_axi_data_dram_RID => gmem_RID,
        m_axi_data_dram_RUSER => gmem_RUSER,
        m_axi_data_dram_RRESP => gmem_RRESP,
        m_axi_data_dram_BVALID => ap_const_logic_0,
        m_axi_data_dram_BREADY => grp_load_unsigned_long_s_fu_721_m_axi_data_dram_BREADY,
        m_axi_data_dram_BRESP => ap_const_lv2_0,
        m_axi_data_dram_BID => ap_const_lv1_0,
        m_axi_data_dram_BUSER => ap_const_lv1_0,
        data_dram_offset => train_images1_reg_1915,
        data_dram_offset1 => p_0_rec_reg_635,
        data_local_0_address0 => grp_load_unsigned_long_s_fu_721_data_local_0_address0,
        data_local_0_ce0 => grp_load_unsigned_long_s_fu_721_data_local_0_ce0,
        data_local_0_we0 => grp_load_unsigned_long_s_fu_721_data_local_0_we0,
        data_local_0_d0 => grp_load_unsigned_long_s_fu_721_data_local_0_d0,
        data_local_1_address0 => grp_load_unsigned_long_s_fu_721_data_local_1_address0,
        data_local_1_ce0 => grp_load_unsigned_long_s_fu_721_data_local_1_ce0,
        data_local_1_we0 => grp_load_unsigned_long_s_fu_721_data_local_1_we0,
        data_local_1_d0 => grp_load_unsigned_long_s_fu_721_data_local_1_d0,
        data_local_2_address0 => grp_load_unsigned_long_s_fu_721_data_local_2_address0,
        data_local_2_ce0 => grp_load_unsigned_long_s_fu_721_data_local_2_ce0,
        data_local_2_we0 => grp_load_unsigned_long_s_fu_721_data_local_2_we0,
        data_local_2_d0 => grp_load_unsigned_long_s_fu_721_data_local_2_d0,
        data_local_3_address0 => grp_load_unsigned_long_s_fu_721_data_local_3_address0,
        data_local_3_ce0 => grp_load_unsigned_long_s_fu_721_data_local_3_ce0,
        data_local_3_we0 => grp_load_unsigned_long_s_fu_721_data_local_3_we0,
        data_local_3_d0 => grp_load_unsigned_long_s_fu_721_data_local_3_d0,
        data_local_4_address0 => grp_load_unsigned_long_s_fu_721_data_local_4_address0,
        data_local_4_ce0 => grp_load_unsigned_long_s_fu_721_data_local_4_ce0,
        data_local_4_we0 => grp_load_unsigned_long_s_fu_721_data_local_4_we0,
        data_local_4_d0 => grp_load_unsigned_long_s_fu_721_data_local_4_d0,
        data_local_5_address0 => grp_load_unsigned_long_s_fu_721_data_local_5_address0,
        data_local_5_ce0 => grp_load_unsigned_long_s_fu_721_data_local_5_ce0,
        data_local_5_we0 => grp_load_unsigned_long_s_fu_721_data_local_5_we0,
        data_local_5_d0 => grp_load_unsigned_long_s_fu_721_data_local_5_d0,
        data_local_6_address0 => grp_load_unsigned_long_s_fu_721_data_local_6_address0,
        data_local_6_ce0 => grp_load_unsigned_long_s_fu_721_data_local_6_ce0,
        data_local_6_we0 => grp_load_unsigned_long_s_fu_721_data_local_6_we0,
        data_local_6_d0 => grp_load_unsigned_long_s_fu_721_data_local_6_d0,
        data_local_7_address0 => grp_load_unsigned_long_s_fu_721_data_local_7_address0,
        data_local_7_ce0 => grp_load_unsigned_long_s_fu_721_data_local_7_ce0,
        data_local_7_we0 => grp_load_unsigned_long_s_fu_721_data_local_7_we0,
        data_local_7_d0 => grp_load_unsigned_long_s_fu_721_data_local_7_d0,
        num_elem => local_num_elements_reg_2096);

    grp_load_unsigned_char_s_fu_739 : component digitrec_kernel_load_unsigned_char_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_load_unsigned_char_s_fu_739_ap_start,
        ap_done => grp_load_unsigned_char_s_fu_739_ap_done,
        ap_idle => grp_load_unsigned_char_s_fu_739_ap_idle,
        ap_ready => grp_load_unsigned_char_s_fu_739_ap_ready,
        p_read => local_knn_mat_0_0_reg_2107,
        p_read4 => local_knn_mat_1_0_reg_2128,
        p_read8 => local_knn_mat_2_0_reg_2149,
        p_read27 => local_knn_mat_7_0_reg_2245,
        m_axi_data_local_AWVALID => grp_load_unsigned_char_s_fu_739_m_axi_data_local_AWVALID,
        m_axi_data_local_AWREADY => gmem2_AWREADY,
        m_axi_data_local_AWADDR => grp_load_unsigned_char_s_fu_739_m_axi_data_local_AWADDR,
        m_axi_data_local_AWID => grp_load_unsigned_char_s_fu_739_m_axi_data_local_AWID,
        m_axi_data_local_AWLEN => grp_load_unsigned_char_s_fu_739_m_axi_data_local_AWLEN,
        m_axi_data_local_AWSIZE => grp_load_unsigned_char_s_fu_739_m_axi_data_local_AWSIZE,
        m_axi_data_local_AWBURST => grp_load_unsigned_char_s_fu_739_m_axi_data_local_AWBURST,
        m_axi_data_local_AWLOCK => grp_load_unsigned_char_s_fu_739_m_axi_data_local_AWLOCK,
        m_axi_data_local_AWCACHE => grp_load_unsigned_char_s_fu_739_m_axi_data_local_AWCACHE,
        m_axi_data_local_AWPROT => grp_load_unsigned_char_s_fu_739_m_axi_data_local_AWPROT,
        m_axi_data_local_AWQOS => grp_load_unsigned_char_s_fu_739_m_axi_data_local_AWQOS,
        m_axi_data_local_AWREGION => grp_load_unsigned_char_s_fu_739_m_axi_data_local_AWREGION,
        m_axi_data_local_AWUSER => grp_load_unsigned_char_s_fu_739_m_axi_data_local_AWUSER,
        m_axi_data_local_WVALID => grp_load_unsigned_char_s_fu_739_m_axi_data_local_WVALID,
        m_axi_data_local_WREADY => gmem2_WREADY,
        m_axi_data_local_WDATA => grp_load_unsigned_char_s_fu_739_m_axi_data_local_WDATA,
        m_axi_data_local_WSTRB => grp_load_unsigned_char_s_fu_739_m_axi_data_local_WSTRB,
        m_axi_data_local_WLAST => grp_load_unsigned_char_s_fu_739_m_axi_data_local_WLAST,
        m_axi_data_local_WID => grp_load_unsigned_char_s_fu_739_m_axi_data_local_WID,
        m_axi_data_local_WUSER => grp_load_unsigned_char_s_fu_739_m_axi_data_local_WUSER,
        m_axi_data_local_ARVALID => grp_load_unsigned_char_s_fu_739_m_axi_data_local_ARVALID,
        m_axi_data_local_ARREADY => ap_const_logic_0,
        m_axi_data_local_ARADDR => grp_load_unsigned_char_s_fu_739_m_axi_data_local_ARADDR,
        m_axi_data_local_ARID => grp_load_unsigned_char_s_fu_739_m_axi_data_local_ARID,
        m_axi_data_local_ARLEN => grp_load_unsigned_char_s_fu_739_m_axi_data_local_ARLEN,
        m_axi_data_local_ARSIZE => grp_load_unsigned_char_s_fu_739_m_axi_data_local_ARSIZE,
        m_axi_data_local_ARBURST => grp_load_unsigned_char_s_fu_739_m_axi_data_local_ARBURST,
        m_axi_data_local_ARLOCK => grp_load_unsigned_char_s_fu_739_m_axi_data_local_ARLOCK,
        m_axi_data_local_ARCACHE => grp_load_unsigned_char_s_fu_739_m_axi_data_local_ARCACHE,
        m_axi_data_local_ARPROT => grp_load_unsigned_char_s_fu_739_m_axi_data_local_ARPROT,
        m_axi_data_local_ARQOS => grp_load_unsigned_char_s_fu_739_m_axi_data_local_ARQOS,
        m_axi_data_local_ARREGION => grp_load_unsigned_char_s_fu_739_m_axi_data_local_ARREGION,
        m_axi_data_local_ARUSER => grp_load_unsigned_char_s_fu_739_m_axi_data_local_ARUSER,
        m_axi_data_local_RVALID => ap_const_logic_0,
        m_axi_data_local_RREADY => grp_load_unsigned_char_s_fu_739_m_axi_data_local_RREADY,
        m_axi_data_local_RDATA => ap_const_lv8_0,
        m_axi_data_local_RLAST => ap_const_logic_0,
        m_axi_data_local_RID => ap_const_lv1_0,
        m_axi_data_local_RUSER => ap_const_lv1_0,
        m_axi_data_local_RRESP => ap_const_lv2_0,
        m_axi_data_local_BVALID => gmem2_BVALID,
        m_axi_data_local_BREADY => grp_load_unsigned_char_s_fu_739_m_axi_data_local_BREADY,
        m_axi_data_local_BRESP => gmem2_BRESP,
        m_axi_data_local_BID => gmem2_BID,
        m_axi_data_local_BUSER => gmem2_BUSER,
        data_local_offset => knn_mat_read_reg_1905,
        data_local_offset1 => p_01_rec_reg_623);

    digitrec_kernel_mux_42_8_1_1_U146 : component digitrec_kernel_digitrec_kernel_mux_42_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => ap_const_lv8_32,
        din1 => local_knn_mat_6_0_1_fu_216,
        din2 => local_knn_mat_6_0_1_fu_216,
        din3 => local_knn_mat_6_0_1_fu_216,
        din4 => local_knn_mat_6_0_4_fu_982_p5,
        dout => local_knn_mat_6_0_4_fu_982_p6);

    digitrec_kernel_mux_42_8_1_1_U147 : component digitrec_kernel_digitrec_kernel_mux_42_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => local_knn_mat_6_1_1_fu_220,
        din1 => ap_const_lv8_32,
        din2 => local_knn_mat_6_1_1_fu_220,
        din3 => local_knn_mat_6_1_1_fu_220,
        din4 => local_knn_mat_6_1_4_fu_996_p5,
        dout => local_knn_mat_6_1_4_fu_996_p6);

    digitrec_kernel_mux_42_8_1_1_U148 : component digitrec_kernel_digitrec_kernel_mux_42_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => local_knn_mat_6_2_1_fu_224,
        din1 => local_knn_mat_6_2_1_fu_224,
        din2 => ap_const_lv8_32,
        din3 => ap_const_lv8_32,
        din4 => local_knn_mat_6_2_4_fu_1010_p5,
        dout => local_knn_mat_6_2_4_fu_1010_p6);

    digitrec_kernel_mux_42_8_1_1_U149 : component digitrec_kernel_digitrec_kernel_mux_42_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => ap_const_lv8_32,
        din1 => local_knn_mat_5_0_1_fu_200,
        din2 => local_knn_mat_5_0_1_fu_200,
        din3 => local_knn_mat_5_0_1_fu_200,
        din4 => local_knn_mat_5_0_4_fu_1039_p5,
        dout => local_knn_mat_5_0_4_fu_1039_p6);

    digitrec_kernel_mux_42_8_1_1_U150 : component digitrec_kernel_digitrec_kernel_mux_42_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => local_knn_mat_5_1_1_fu_204,
        din1 => ap_const_lv8_32,
        din2 => local_knn_mat_5_1_1_fu_204,
        din3 => local_knn_mat_5_1_1_fu_204,
        din4 => local_knn_mat_5_1_4_fu_1053_p5,
        dout => local_knn_mat_5_1_4_fu_1053_p6);

    digitrec_kernel_mux_42_8_1_1_U151 : component digitrec_kernel_digitrec_kernel_mux_42_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => local_knn_mat_5_2_1_fu_208,
        din1 => local_knn_mat_5_2_1_fu_208,
        din2 => ap_const_lv8_32,
        din3 => local_knn_mat_5_2_1_fu_208,
        din4 => local_knn_mat_5_2_4_fu_1067_p5,
        dout => local_knn_mat_5_2_4_fu_1067_p6);

    digitrec_kernel_mux_42_8_1_1_U152 : component digitrec_kernel_digitrec_kernel_mux_42_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => local_knn_mat_5_3_1_fu_212,
        din1 => local_knn_mat_5_3_1_fu_212,
        din2 => local_knn_mat_5_3_1_fu_212,
        din3 => ap_const_lv8_32,
        din4 => local_knn_mat_5_3_4_fu_1081_p5,
        dout => local_knn_mat_5_3_4_fu_1081_p6);

    digitrec_kernel_mux_42_8_1_1_U153 : component digitrec_kernel_digitrec_kernel_mux_42_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => ap_const_lv8_32,
        din1 => local_knn_mat_4_0_1_fu_184,
        din2 => local_knn_mat_4_0_1_fu_184,
        din3 => local_knn_mat_4_0_1_fu_184,
        din4 => local_knn_mat_4_0_4_fu_1115_p5,
        dout => local_knn_mat_4_0_4_fu_1115_p6);

    digitrec_kernel_mux_42_8_1_1_U154 : component digitrec_kernel_digitrec_kernel_mux_42_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => local_knn_mat_4_1_1_fu_188,
        din1 => ap_const_lv8_32,
        din2 => local_knn_mat_4_1_1_fu_188,
        din3 => local_knn_mat_4_1_1_fu_188,
        din4 => local_knn_mat_4_1_4_fu_1129_p5,
        dout => local_knn_mat_4_1_4_fu_1129_p6);

    digitrec_kernel_mux_42_8_1_1_U155 : component digitrec_kernel_digitrec_kernel_mux_42_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => local_knn_mat_4_2_1_fu_192,
        din1 => local_knn_mat_4_2_1_fu_192,
        din2 => ap_const_lv8_32,
        din3 => local_knn_mat_4_2_1_fu_192,
        din4 => local_knn_mat_4_2_4_fu_1143_p5,
        dout => local_knn_mat_4_2_4_fu_1143_p6);

    digitrec_kernel_mux_42_8_1_1_U156 : component digitrec_kernel_digitrec_kernel_mux_42_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => local_knn_mat_4_3_1_fu_196,
        din1 => local_knn_mat_4_3_1_fu_196,
        din2 => local_knn_mat_4_3_1_fu_196,
        din3 => ap_const_lv8_32,
        din4 => local_knn_mat_4_3_4_fu_1157_p5,
        dout => local_knn_mat_4_3_4_fu_1157_p6);

    digitrec_kernel_mux_42_8_1_1_U157 : component digitrec_kernel_digitrec_kernel_mux_42_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => ap_const_lv8_32,
        din1 => local_knn_mat_3_0_1_fu_168,
        din2 => local_knn_mat_3_0_1_fu_168,
        din3 => local_knn_mat_3_0_1_fu_168,
        din4 => local_knn_mat_3_0_4_fu_1191_p5,
        dout => local_knn_mat_3_0_4_fu_1191_p6);

    digitrec_kernel_mux_42_8_1_1_U158 : component digitrec_kernel_digitrec_kernel_mux_42_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => local_knn_mat_3_1_1_fu_172,
        din1 => ap_const_lv8_32,
        din2 => local_knn_mat_3_1_1_fu_172,
        din3 => local_knn_mat_3_1_1_fu_172,
        din4 => local_knn_mat_3_1_4_fu_1205_p5,
        dout => local_knn_mat_3_1_4_fu_1205_p6);

    digitrec_kernel_mux_42_8_1_1_U159 : component digitrec_kernel_digitrec_kernel_mux_42_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => local_knn_mat_3_2_1_fu_176,
        din1 => local_knn_mat_3_2_1_fu_176,
        din2 => ap_const_lv8_32,
        din3 => local_knn_mat_3_2_1_fu_176,
        din4 => local_knn_mat_3_2_4_fu_1219_p5,
        dout => local_knn_mat_3_2_4_fu_1219_p6);

    digitrec_kernel_mux_42_8_1_1_U160 : component digitrec_kernel_digitrec_kernel_mux_42_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => local_knn_mat_3_3_1_fu_180,
        din1 => local_knn_mat_3_3_1_fu_180,
        din2 => local_knn_mat_3_3_1_fu_180,
        din3 => ap_const_lv8_32,
        din4 => local_knn_mat_3_3_4_fu_1233_p5,
        dout => local_knn_mat_3_3_4_fu_1233_p6);

    digitrec_kernel_mux_42_8_1_1_U161 : component digitrec_kernel_digitrec_kernel_mux_42_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => ap_const_lv8_32,
        din1 => local_knn_mat_2_0_1_fu_152,
        din2 => local_knn_mat_2_0_1_fu_152,
        din3 => local_knn_mat_2_0_1_fu_152,
        din4 => local_knn_mat_2_0_4_fu_1267_p5,
        dout => local_knn_mat_2_0_4_fu_1267_p6);

    digitrec_kernel_mux_42_8_1_1_U162 : component digitrec_kernel_digitrec_kernel_mux_42_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => local_knn_mat_2_1_1_fu_156,
        din1 => ap_const_lv8_32,
        din2 => local_knn_mat_2_1_1_fu_156,
        din3 => local_knn_mat_2_1_1_fu_156,
        din4 => local_knn_mat_2_1_4_fu_1281_p5,
        dout => local_knn_mat_2_1_4_fu_1281_p6);

    digitrec_kernel_mux_42_8_1_1_U163 : component digitrec_kernel_digitrec_kernel_mux_42_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => local_knn_mat_2_2_1_fu_160,
        din1 => local_knn_mat_2_2_1_fu_160,
        din2 => ap_const_lv8_32,
        din3 => local_knn_mat_2_2_1_fu_160,
        din4 => local_knn_mat_2_2_4_fu_1295_p5,
        dout => local_knn_mat_2_2_4_fu_1295_p6);

    digitrec_kernel_mux_42_8_1_1_U164 : component digitrec_kernel_digitrec_kernel_mux_42_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => local_knn_mat_2_3_1_fu_164,
        din1 => local_knn_mat_2_3_1_fu_164,
        din2 => local_knn_mat_2_3_1_fu_164,
        din3 => ap_const_lv8_32,
        din4 => local_knn_mat_2_3_4_fu_1309_p5,
        dout => local_knn_mat_2_3_4_fu_1309_p6);

    digitrec_kernel_mux_42_8_1_1_U165 : component digitrec_kernel_digitrec_kernel_mux_42_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => ap_const_lv8_32,
        din1 => local_knn_mat_1_0_1_fu_136,
        din2 => local_knn_mat_1_0_1_fu_136,
        din3 => local_knn_mat_1_0_1_fu_136,
        din4 => local_knn_mat_1_0_4_fu_1343_p5,
        dout => local_knn_mat_1_0_4_fu_1343_p6);

    digitrec_kernel_mux_42_8_1_1_U166 : component digitrec_kernel_digitrec_kernel_mux_42_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => local_knn_mat_1_1_1_fu_140,
        din1 => ap_const_lv8_32,
        din2 => local_knn_mat_1_1_1_fu_140,
        din3 => local_knn_mat_1_1_1_fu_140,
        din4 => local_knn_mat_1_1_4_fu_1357_p5,
        dout => local_knn_mat_1_1_4_fu_1357_p6);

    digitrec_kernel_mux_42_8_1_1_U167 : component digitrec_kernel_digitrec_kernel_mux_42_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => local_knn_mat_1_2_1_fu_144,
        din1 => local_knn_mat_1_2_1_fu_144,
        din2 => ap_const_lv8_32,
        din3 => local_knn_mat_1_2_1_fu_144,
        din4 => local_knn_mat_1_2_4_fu_1371_p5,
        dout => local_knn_mat_1_2_4_fu_1371_p6);

    digitrec_kernel_mux_42_8_1_1_U168 : component digitrec_kernel_digitrec_kernel_mux_42_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => local_knn_mat_1_3_1_fu_148,
        din1 => local_knn_mat_1_3_1_fu_148,
        din2 => local_knn_mat_1_3_1_fu_148,
        din3 => ap_const_lv8_32,
        din4 => local_knn_mat_1_3_4_fu_1385_p5,
        dout => local_knn_mat_1_3_4_fu_1385_p6);

    digitrec_kernel_mux_42_8_1_1_U169 : component digitrec_kernel_digitrec_kernel_mux_42_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => ap_const_lv8_32,
        din1 => local_knn_mat_0_0_1_fu_120,
        din2 => local_knn_mat_0_0_1_fu_120,
        din3 => local_knn_mat_0_0_1_fu_120,
        din4 => local_knn_mat_0_0_4_fu_1419_p5,
        dout => local_knn_mat_0_0_4_fu_1419_p6);

    digitrec_kernel_mux_42_8_1_1_U170 : component digitrec_kernel_digitrec_kernel_mux_42_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => local_knn_mat_0_1_1_fu_124,
        din1 => ap_const_lv8_32,
        din2 => local_knn_mat_0_1_1_fu_124,
        din3 => local_knn_mat_0_1_1_fu_124,
        din4 => local_knn_mat_0_1_4_fu_1433_p5,
        dout => local_knn_mat_0_1_4_fu_1433_p6);

    digitrec_kernel_mux_42_8_1_1_U171 : component digitrec_kernel_digitrec_kernel_mux_42_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => local_knn_mat_0_2_1_fu_128,
        din1 => local_knn_mat_0_2_1_fu_128,
        din2 => ap_const_lv8_32,
        din3 => local_knn_mat_0_2_1_fu_128,
        din4 => local_knn_mat_0_2_4_fu_1447_p5,
        dout => local_knn_mat_0_2_4_fu_1447_p6);

    digitrec_kernel_mux_42_8_1_1_U172 : component digitrec_kernel_digitrec_kernel_mux_42_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => local_knn_mat_0_3_1_fu_132,
        din1 => local_knn_mat_0_3_1_fu_132,
        din2 => local_knn_mat_0_3_1_fu_132,
        din3 => ap_const_lv8_32,
        din4 => local_knn_mat_0_3_4_fu_1461_p5,
        dout => local_knn_mat_0_3_4_fu_1461_p6);

    digitrec_kernel_mux_42_8_1_1_U173 : component digitrec_kernel_digitrec_kernel_mux_42_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => ap_const_lv8_32,
        din1 => local_knn_mat_7_0_1_fu_228,
        din2 => local_knn_mat_7_0_1_fu_228,
        din3 => local_knn_mat_7_0_1_fu_228,
        din4 => local_knn_mat_7_0_4_fu_1495_p5,
        dout => local_knn_mat_7_0_4_fu_1495_p6);

    digitrec_kernel_mux_42_8_1_1_U174 : component digitrec_kernel_digitrec_kernel_mux_42_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => local_knn_mat_7_1_1_fu_232,
        din1 => ap_const_lv8_32,
        din2 => local_knn_mat_7_1_1_fu_232,
        din3 => local_knn_mat_7_1_1_fu_232,
        din4 => local_knn_mat_7_1_4_fu_1509_p5,
        dout => local_knn_mat_7_1_4_fu_1509_p6);

    digitrec_kernel_mux_42_8_1_1_U175 : component digitrec_kernel_digitrec_kernel_mux_42_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => local_knn_mat_7_2_1_fu_236,
        din1 => local_knn_mat_7_2_1_fu_236,
        din2 => ap_const_lv8_32,
        din3 => ap_const_lv8_32,
        din4 => local_knn_mat_7_2_4_fu_1523_p5,
        dout => local_knn_mat_7_2_4_fu_1523_p6);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2))) then 
                    ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state2);
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_compute_fu_647_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_compute_fu_647_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                    grp_compute_fu_647_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_compute_fu_647_ap_ready = ap_const_logic_1)) then 
                    grp_compute_fu_647_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_load_unsigned_char_s_fu_739_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_load_unsigned_char_s_fu_739_ap_start_reg <= ap_const_logic_0;
            else
                if (((grp_compute_fu_647_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
                    grp_load_unsigned_char_s_fu_739_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_load_unsigned_char_s_fu_739_ap_ready = ap_const_logic_1)) then 
                    grp_load_unsigned_char_s_fu_739_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_load_unsigned_long_s_fu_721_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_load_unsigned_long_s_fu_721_ap_start_reg <= ap_const_logic_0;
            else
                if (((tmp_s_fu_1558_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                    grp_load_unsigned_long_s_fu_721_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_load_unsigned_long_s_fu_721_ap_ready = ap_const_logic_1)) then 
                    grp_load_unsigned_long_s_fu_721_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_rst_n_inv_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            ap_rst_n_inv <= ap_rst_reg_1;
        end if;
    end process;

    ap_rst_reg_1_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            ap_rst_reg_1 <= ap_rst_reg_2;
        end if;
    end process;

    ap_rst_reg_2_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
                        ap_rst_reg_2 <= not(ap_rst_n);
        end if;
    end process;

    indvar_flatten_reg_290_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_fu_874_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                indvar_flatten_reg_290 <= indvar_flatten_next_fu_880_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                indvar_flatten_reg_290 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    local_knn_mat_0_0_3_reg_613_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                local_knn_mat_0_0_3_reg_613 <= local_knn_mat_0_0_1_load_reg_1920;
            elsif (((grp_load_unsigned_char_s_fu_739_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
                local_knn_mat_0_0_3_reg_613 <= local_knn_mat_0_0_reg_2107;
            end if; 
        end if;
    end process;

    local_knn_mat_0_1_3_reg_603_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                local_knn_mat_0_1_3_reg_603 <= local_knn_mat_0_1_1_load_reg_1925;
            elsif (((grp_load_unsigned_char_s_fu_739_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
                local_knn_mat_0_1_3_reg_603 <= local_knn_mat_0_1_reg_2113;
            end if; 
        end if;
    end process;

    local_knn_mat_0_2_3_reg_593_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                local_knn_mat_0_2_3_reg_593 <= local_knn_mat_0_2_1_load_reg_1930;
            elsif (((grp_load_unsigned_char_s_fu_739_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
                local_knn_mat_0_2_3_reg_593 <= local_knn_mat_0_2_reg_2118;
            end if; 
        end if;
    end process;

    local_knn_mat_0_3_3_reg_583_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                local_knn_mat_0_3_3_reg_583 <= local_knn_mat_0_3_1_load_reg_1935;
            elsif (((grp_load_unsigned_char_s_fu_739_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
                local_knn_mat_0_3_3_reg_583 <= local_knn_mat_0_3_reg_2123;
            end if; 
        end if;
    end process;

    local_knn_mat_1_0_3_reg_573_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                local_knn_mat_1_0_3_reg_573 <= local_knn_mat_1_0_1_load_reg_1940;
            elsif (((grp_load_unsigned_char_s_fu_739_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
                local_knn_mat_1_0_3_reg_573 <= local_knn_mat_1_0_reg_2128;
            end if; 
        end if;
    end process;

    local_knn_mat_1_1_3_reg_563_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                local_knn_mat_1_1_3_reg_563 <= local_knn_mat_1_1_1_load_reg_1945;
            elsif (((grp_load_unsigned_char_s_fu_739_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
                local_knn_mat_1_1_3_reg_563 <= local_knn_mat_1_1_reg_2134;
            end if; 
        end if;
    end process;

    local_knn_mat_1_2_3_reg_553_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                local_knn_mat_1_2_3_reg_553 <= local_knn_mat_1_2_1_load_reg_1950;
            elsif (((grp_load_unsigned_char_s_fu_739_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
                local_knn_mat_1_2_3_reg_553 <= local_knn_mat_1_2_reg_2139;
            end if; 
        end if;
    end process;

    local_knn_mat_1_3_3_reg_543_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                local_knn_mat_1_3_3_reg_543 <= local_knn_mat_1_3_1_load_reg_1955;
            elsif (((grp_load_unsigned_char_s_fu_739_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
                local_knn_mat_1_3_3_reg_543 <= local_knn_mat_1_3_reg_2144;
            end if; 
        end if;
    end process;

    local_knn_mat_2_0_3_reg_533_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                local_knn_mat_2_0_3_reg_533 <= local_knn_mat_2_0_1_load_reg_1960;
            elsif (((grp_load_unsigned_char_s_fu_739_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
                local_knn_mat_2_0_3_reg_533 <= local_knn_mat_2_0_reg_2149;
            end if; 
        end if;
    end process;

    local_knn_mat_2_1_3_reg_523_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                local_knn_mat_2_1_3_reg_523 <= local_knn_mat_2_1_1_load_reg_1965;
            elsif (((grp_load_unsigned_char_s_fu_739_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
                local_knn_mat_2_1_3_reg_523 <= local_knn_mat_2_1_reg_2155;
            end if; 
        end if;
    end process;

    local_knn_mat_2_2_3_reg_513_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                local_knn_mat_2_2_3_reg_513 <= local_knn_mat_2_2_1_load_reg_1970;
            elsif (((grp_load_unsigned_char_s_fu_739_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
                local_knn_mat_2_2_3_reg_513 <= local_knn_mat_2_2_reg_2160;
            end if; 
        end if;
    end process;

    local_knn_mat_2_3_3_reg_503_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                local_knn_mat_2_3_3_reg_503 <= local_knn_mat_2_3_1_load_reg_1975;
            elsif (((grp_load_unsigned_char_s_fu_739_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
                local_knn_mat_2_3_3_reg_503 <= local_knn_mat_2_3_reg_2165;
            end if; 
        end if;
    end process;

    local_knn_mat_3_0_3_reg_493_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                local_knn_mat_3_0_3_reg_493 <= local_knn_mat_3_0_1_load_reg_1980;
            elsif (((grp_load_unsigned_char_s_fu_739_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
                local_knn_mat_3_0_3_reg_493 <= local_knn_mat_3_0_reg_2170;
            end if; 
        end if;
    end process;

    local_knn_mat_3_1_3_reg_483_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                local_knn_mat_3_1_3_reg_483 <= local_knn_mat_3_1_1_load_reg_1985;
            elsif (((grp_load_unsigned_char_s_fu_739_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
                local_knn_mat_3_1_3_reg_483 <= local_knn_mat_3_1_reg_2175;
            end if; 
        end if;
    end process;

    local_knn_mat_3_2_3_reg_473_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                local_knn_mat_3_2_3_reg_473 <= local_knn_mat_3_2_1_load_reg_1990;
            elsif (((grp_load_unsigned_char_s_fu_739_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
                local_knn_mat_3_2_3_reg_473 <= local_knn_mat_3_2_reg_2180;
            end if; 
        end if;
    end process;

    local_knn_mat_3_3_3_reg_463_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                local_knn_mat_3_3_3_reg_463 <= local_knn_mat_3_3_1_load_reg_1995;
            elsif (((grp_load_unsigned_char_s_fu_739_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
                local_knn_mat_3_3_3_reg_463 <= local_knn_mat_3_3_reg_2185;
            end if; 
        end if;
    end process;

    local_knn_mat_4_0_3_reg_453_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                local_knn_mat_4_0_3_reg_453 <= local_knn_mat_4_0_1_load_reg_2000;
            elsif (((grp_load_unsigned_char_s_fu_739_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
                local_knn_mat_4_0_3_reg_453 <= local_knn_mat_4_0_reg_2190;
            end if; 
        end if;
    end process;

    local_knn_mat_4_1_3_reg_443_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                local_knn_mat_4_1_3_reg_443 <= local_knn_mat_4_1_1_load_reg_2005;
            elsif (((grp_load_unsigned_char_s_fu_739_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
                local_knn_mat_4_1_3_reg_443 <= local_knn_mat_4_1_reg_2195;
            end if; 
        end if;
    end process;

    local_knn_mat_4_2_3_reg_433_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                local_knn_mat_4_2_3_reg_433 <= local_knn_mat_4_2_1_load_reg_2010;
            elsif (((grp_load_unsigned_char_s_fu_739_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
                local_knn_mat_4_2_3_reg_433 <= local_knn_mat_4_2_reg_2200;
            end if; 
        end if;
    end process;

    local_knn_mat_4_3_3_reg_423_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                local_knn_mat_4_3_3_reg_423 <= local_knn_mat_4_3_1_load_reg_2015;
            elsif (((grp_load_unsigned_char_s_fu_739_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
                local_knn_mat_4_3_3_reg_423 <= local_knn_mat_4_3_reg_2205;
            end if; 
        end if;
    end process;

    local_knn_mat_5_0_3_reg_413_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                local_knn_mat_5_0_3_reg_413 <= local_knn_mat_5_0_1_load_reg_2020;
            elsif (((grp_load_unsigned_char_s_fu_739_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
                local_knn_mat_5_0_3_reg_413 <= local_knn_mat_5_0_reg_2210;
            end if; 
        end if;
    end process;

    local_knn_mat_5_1_3_reg_403_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                local_knn_mat_5_1_3_reg_403 <= local_knn_mat_5_1_1_load_reg_2025;
            elsif (((grp_load_unsigned_char_s_fu_739_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
                local_knn_mat_5_1_3_reg_403 <= local_knn_mat_5_1_reg_2215;
            end if; 
        end if;
    end process;

    local_knn_mat_5_2_3_reg_393_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                local_knn_mat_5_2_3_reg_393 <= local_knn_mat_5_2_1_load_reg_2030;
            elsif (((grp_load_unsigned_char_s_fu_739_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
                local_knn_mat_5_2_3_reg_393 <= local_knn_mat_5_2_reg_2220;
            end if; 
        end if;
    end process;

    local_knn_mat_5_3_3_reg_383_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                local_knn_mat_5_3_3_reg_383 <= local_knn_mat_5_3_1_load_reg_2035;
            elsif (((grp_load_unsigned_char_s_fu_739_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
                local_knn_mat_5_3_3_reg_383 <= local_knn_mat_5_3_reg_2225;
            end if; 
        end if;
    end process;

    local_knn_mat_6_0_3_reg_373_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                local_knn_mat_6_0_3_reg_373 <= local_knn_mat_6_0_1_load_reg_2040;
            elsif (((grp_load_unsigned_char_s_fu_739_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
                local_knn_mat_6_0_3_reg_373 <= local_knn_mat_6_0_reg_2230;
            end if; 
        end if;
    end process;

    local_knn_mat_6_1_3_reg_363_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                local_knn_mat_6_1_3_reg_363 <= local_knn_mat_6_1_1_load_reg_2045;
            elsif (((grp_load_unsigned_char_s_fu_739_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
                local_knn_mat_6_1_3_reg_363 <= local_knn_mat_6_1_reg_2235;
            end if; 
        end if;
    end process;

    local_knn_mat_6_2_3_reg_353_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                local_knn_mat_6_2_3_reg_353 <= local_knn_mat_6_2_1_load_reg_2050;
            elsif (((grp_load_unsigned_char_s_fu_739_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
                local_knn_mat_6_2_3_reg_353 <= local_knn_mat_6_2_reg_2240;
            end if; 
        end if;
    end process;

    local_knn_mat_7_0_3_reg_343_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                local_knn_mat_7_0_3_reg_343 <= local_knn_mat_7_0_1_load_reg_2055;
            elsif (((grp_load_unsigned_char_s_fu_739_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
                local_knn_mat_7_0_3_reg_343 <= local_knn_mat_7_0_reg_2245;
            end if; 
        end if;
    end process;

    local_knn_mat_7_1_3_reg_333_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                local_knn_mat_7_1_3_reg_333 <= local_knn_mat_7_1_1_load_reg_2060;
            elsif (((grp_load_unsigned_char_s_fu_739_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
                local_knn_mat_7_1_3_reg_333 <= local_knn_mat_7_1_reg_2251;
            end if; 
        end if;
    end process;

    local_knn_mat_7_2_3_reg_323_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                local_knn_mat_7_2_3_reg_323 <= local_knn_mat_7_2_1_load_reg_2065;
            elsif (((grp_load_unsigned_char_s_fu_739_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
                local_knn_mat_7_2_3_reg_323 <= local_knn_mat_7_2_reg_2256;
            end if; 
        end if;
    end process;

    p_01_rec_reg_623_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                p_01_rec_reg_623 <= ap_const_lv5_0;
            elsif (((grp_load_unsigned_char_s_fu_739_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
                p_01_rec_reg_623 <= p_rec_reg_2261;
            end if; 
        end if;
    end process;

    p_0_rec_reg_635_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                p_0_rec_reg_635 <= ap_const_lv15_0;
            elsif (((grp_load_unsigned_char_s_fu_739_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
                p_0_rec_reg_635 <= i_reg_2102;
            end if; 
        end if;
    end process;

    x_reg_301_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_fu_874_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                x_reg_301 <= x_mid2_fu_944_p3;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                x_reg_301 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;

    y_reg_312_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_fu_874_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                y_reg_312 <= y_1_fu_1552_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                y_reg_312 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_s_fu_1558_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                i_reg_2102 <= i_fu_1589_p2;
                local_num_elements_reg_2096 <= local_num_elements_fu_1580_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                knn_mat_read_reg_1905 <= knn_mat;
                test_image_read_reg_1910 <= test_image;
                train_images1_reg_1915 <= train_images(63 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((arrayNo_trunc_fu_966_p2 = ap_const_lv3_0) and (exitcond_flatten_fu_874_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                local_knn_mat_0_0_1_fu_120 <= local_knn_mat_0_0_4_fu_1419_p6;
                local_knn_mat_0_1_1_fu_124 <= local_knn_mat_0_1_4_fu_1433_p6;
                local_knn_mat_0_2_1_fu_128 <= local_knn_mat_0_2_4_fu_1447_p6;
                local_knn_mat_0_3_1_fu_132 <= local_knn_mat_0_3_4_fu_1461_p6;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                local_knn_mat_0_0_1_load_reg_1920 <= local_knn_mat_0_0_1_fu_120;
                local_knn_mat_0_1_1_load_reg_1925 <= local_knn_mat_0_1_1_fu_124;
                local_knn_mat_0_2_1_load_reg_1930 <= local_knn_mat_0_2_1_fu_128;
                local_knn_mat_0_3_1_load_reg_1935 <= local_knn_mat_0_3_1_fu_132;
                local_knn_mat_1_0_1_load_reg_1940 <= local_knn_mat_1_0_1_fu_136;
                local_knn_mat_1_1_1_load_reg_1945 <= local_knn_mat_1_1_1_fu_140;
                local_knn_mat_1_2_1_load_reg_1950 <= local_knn_mat_1_2_1_fu_144;
                local_knn_mat_1_3_1_load_reg_1955 <= local_knn_mat_1_3_1_fu_148;
                local_knn_mat_2_0_1_load_reg_1960 <= local_knn_mat_2_0_1_fu_152;
                local_knn_mat_2_1_1_load_reg_1965 <= local_knn_mat_2_1_1_fu_156;
                local_knn_mat_2_2_1_load_reg_1970 <= local_knn_mat_2_2_1_fu_160;
                local_knn_mat_2_3_1_load_reg_1975 <= local_knn_mat_2_3_1_fu_164;
                local_knn_mat_3_0_1_load_reg_1980 <= local_knn_mat_3_0_1_fu_168;
                local_knn_mat_3_1_1_load_reg_1985 <= local_knn_mat_3_1_1_fu_172;
                local_knn_mat_3_2_1_load_reg_1990 <= local_knn_mat_3_2_1_fu_176;
                local_knn_mat_3_3_1_load_reg_1995 <= local_knn_mat_3_3_1_fu_180;
                local_knn_mat_4_0_1_load_reg_2000 <= local_knn_mat_4_0_1_fu_184;
                local_knn_mat_4_1_1_load_reg_2005 <= local_knn_mat_4_1_1_fu_188;
                local_knn_mat_4_2_1_load_reg_2010 <= local_knn_mat_4_2_1_fu_192;
                local_knn_mat_4_3_1_load_reg_2015 <= local_knn_mat_4_3_1_fu_196;
                local_knn_mat_5_0_1_load_reg_2020 <= local_knn_mat_5_0_1_fu_200;
                local_knn_mat_5_1_1_load_reg_2025 <= local_knn_mat_5_1_1_fu_204;
                local_knn_mat_5_2_1_load_reg_2030 <= local_knn_mat_5_2_1_fu_208;
                local_knn_mat_5_3_1_load_reg_2035 <= local_knn_mat_5_3_1_fu_212;
                local_knn_mat_6_0_1_load_reg_2040 <= local_knn_mat_6_0_1_fu_216;
                local_knn_mat_6_1_1_load_reg_2045 <= local_knn_mat_6_1_1_fu_220;
                local_knn_mat_6_2_1_load_reg_2050 <= local_knn_mat_6_2_1_fu_224;
                local_knn_mat_7_0_1_load_reg_2055 <= local_knn_mat_7_0_1_fu_228;
                local_knn_mat_7_1_1_load_reg_2060 <= local_knn_mat_7_1_1_fu_232;
                local_knn_mat_7_2_1_load_reg_2065 <= local_knn_mat_7_2_1_fu_236;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_compute_fu_647_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then
                local_knn_mat_0_0_reg_2107 <= grp_compute_fu_647_ap_return_0;
                local_knn_mat_0_1_reg_2113 <= grp_compute_fu_647_ap_return_1;
                local_knn_mat_0_2_reg_2118 <= grp_compute_fu_647_ap_return_2;
                local_knn_mat_0_3_reg_2123 <= grp_compute_fu_647_ap_return_3;
                local_knn_mat_1_0_reg_2128 <= grp_compute_fu_647_ap_return_4;
                local_knn_mat_1_1_reg_2134 <= grp_compute_fu_647_ap_return_5;
                local_knn_mat_1_2_reg_2139 <= grp_compute_fu_647_ap_return_6;
                local_knn_mat_1_3_reg_2144 <= grp_compute_fu_647_ap_return_7;
                local_knn_mat_2_0_reg_2149 <= grp_compute_fu_647_ap_return_8;
                local_knn_mat_2_1_reg_2155 <= grp_compute_fu_647_ap_return_9;
                local_knn_mat_2_2_reg_2160 <= grp_compute_fu_647_ap_return_10;
                local_knn_mat_2_3_reg_2165 <= grp_compute_fu_647_ap_return_11;
                local_knn_mat_3_0_reg_2170 <= grp_compute_fu_647_ap_return_12;
                local_knn_mat_3_1_reg_2175 <= grp_compute_fu_647_ap_return_13;
                local_knn_mat_3_2_reg_2180 <= grp_compute_fu_647_ap_return_14;
                local_knn_mat_3_3_reg_2185 <= grp_compute_fu_647_ap_return_15;
                local_knn_mat_4_0_reg_2190 <= grp_compute_fu_647_ap_return_16;
                local_knn_mat_4_1_reg_2195 <= grp_compute_fu_647_ap_return_17;
                local_knn_mat_4_2_reg_2200 <= grp_compute_fu_647_ap_return_18;
                local_knn_mat_4_3_reg_2205 <= grp_compute_fu_647_ap_return_19;
                local_knn_mat_5_0_reg_2210 <= grp_compute_fu_647_ap_return_20;
                local_knn_mat_5_1_reg_2215 <= grp_compute_fu_647_ap_return_21;
                local_knn_mat_5_2_reg_2220 <= grp_compute_fu_647_ap_return_22;
                local_knn_mat_5_3_reg_2225 <= grp_compute_fu_647_ap_return_23;
                local_knn_mat_6_0_reg_2230 <= grp_compute_fu_647_ap_return_24;
                local_knn_mat_6_1_reg_2235 <= grp_compute_fu_647_ap_return_25;
                local_knn_mat_6_2_reg_2240 <= grp_compute_fu_647_ap_return_26;
                local_knn_mat_7_0_reg_2245 <= grp_compute_fu_647_ap_return_27;
                local_knn_mat_7_1_reg_2251 <= grp_compute_fu_647_ap_return_28;
                local_knn_mat_7_2_reg_2256 <= grp_compute_fu_647_ap_return_29;
                p_rec_reg_2261 <= p_rec_fu_1719_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((arrayNo_trunc_fu_966_p2 = ap_const_lv3_1) and (exitcond_flatten_fu_874_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                local_knn_mat_1_0_1_fu_136 <= local_knn_mat_1_0_4_fu_1343_p6;
                local_knn_mat_1_1_1_fu_140 <= local_knn_mat_1_1_4_fu_1357_p6;
                local_knn_mat_1_2_1_fu_144 <= local_knn_mat_1_2_4_fu_1371_p6;
                local_knn_mat_1_3_1_fu_148 <= local_knn_mat_1_3_4_fu_1385_p6;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((arrayNo_trunc_fu_966_p2 = ap_const_lv3_2) and (exitcond_flatten_fu_874_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                local_knn_mat_2_0_1_fu_152 <= local_knn_mat_2_0_4_fu_1267_p6;
                local_knn_mat_2_1_1_fu_156 <= local_knn_mat_2_1_4_fu_1281_p6;
                local_knn_mat_2_2_1_fu_160 <= local_knn_mat_2_2_4_fu_1295_p6;
                local_knn_mat_2_3_1_fu_164 <= local_knn_mat_2_3_4_fu_1309_p6;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((arrayNo_trunc_fu_966_p2 = ap_const_lv3_3) and (exitcond_flatten_fu_874_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                local_knn_mat_3_0_1_fu_168 <= local_knn_mat_3_0_4_fu_1191_p6;
                local_knn_mat_3_1_1_fu_172 <= local_knn_mat_3_1_4_fu_1205_p6;
                local_knn_mat_3_2_1_fu_176 <= local_knn_mat_3_2_4_fu_1219_p6;
                local_knn_mat_3_3_1_fu_180 <= local_knn_mat_3_3_4_fu_1233_p6;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((arrayNo_trunc_fu_966_p2 = ap_const_lv3_4) and (exitcond_flatten_fu_874_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                local_knn_mat_4_0_1_fu_184 <= local_knn_mat_4_0_4_fu_1115_p6;
                local_knn_mat_4_1_1_fu_188 <= local_knn_mat_4_1_4_fu_1129_p6;
                local_knn_mat_4_2_1_fu_192 <= local_knn_mat_4_2_4_fu_1143_p6;
                local_knn_mat_4_3_1_fu_196 <= local_knn_mat_4_3_4_fu_1157_p6;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((arrayNo_trunc_fu_966_p2 = ap_const_lv3_5) and (exitcond_flatten_fu_874_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                local_knn_mat_5_0_1_fu_200 <= local_knn_mat_5_0_4_fu_1039_p6;
                local_knn_mat_5_1_1_fu_204 <= local_knn_mat_5_1_4_fu_1053_p6;
                local_knn_mat_5_2_1_fu_208 <= local_knn_mat_5_2_4_fu_1067_p6;
                local_knn_mat_5_3_1_fu_212 <= local_knn_mat_5_3_4_fu_1081_p6;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((arrayNo_trunc_fu_966_p2 = ap_const_lv3_6) and (exitcond_flatten_fu_874_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                local_knn_mat_6_0_1_fu_216 <= local_knn_mat_6_0_4_fu_982_p6;
                local_knn_mat_6_1_1_fu_220 <= local_knn_mat_6_1_4_fu_996_p6;
                local_knn_mat_6_2_1_fu_224 <= local_knn_mat_6_2_4_fu_1010_p6;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((arrayNo_trunc_fu_966_p2 = ap_const_lv3_7) and (exitcond_flatten_fu_874_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                local_knn_mat_7_0_1_fu_228 <= local_knn_mat_7_0_4_fu_1495_p6;
                local_knn_mat_7_1_1_fu_232 <= local_knn_mat_7_1_4_fu_1509_p6;
                local_knn_mat_7_2_1_fu_236 <= local_knn_mat_7_2_4_fu_1523_p6;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_enable_reg_pp0_iter0, exitcond_flatten_fu_874_p2, ap_CS_fsm_state5, tmp_s_fu_1558_p2, ap_CS_fsm_state8, grp_compute_fu_647_ap_done, ap_block_pp0_stage0_subdone, grp_load_unsigned_long_s_fu_721_ap_done, grp_load_unsigned_char_s_fu_739_ap_done, ap_CS_fsm_state9, ap_CS_fsm_state6)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if (not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (exitcond_flatten_fu_874_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (exitcond_flatten_fu_874_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                if (((tmp_s_fu_1558_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state6 => 
                if (((grp_load_unsigned_long_s_fu_721_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                if (((grp_compute_fu_647_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state9 => 
                if (((grp_load_unsigned_char_s_fu_739_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXX";
        end case;
    end process;
    a_read_assign_fu_1564_p2 <= std_logic_vector(signed(ap_const_lv15_4650) - signed(p_0_rec_reg_635));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state4 <= ap_CS_fsm(2);
    ap_CS_fsm_state5 <= ap_CS_fsm(3);
    ap_CS_fsm_state6 <= ap_CS_fsm(4);
    ap_CS_fsm_state7 <= ap_CS_fsm(5);
    ap_CS_fsm_state8 <= ap_CS_fsm(6);
    ap_CS_fsm_state9 <= ap_CS_fsm(7);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp0_exit_iter0_state2_assign_proc : process(exitcond_flatten_fu_874_p2)
    begin
        if ((exitcond_flatten_fu_874_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_CS_fsm_state5, tmp_s_fu_1558_p2)
    begin
        if (((tmp_s_fu_1558_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state5, tmp_s_fu_1558_p2)
    begin
        if (((tmp_s_fu_1558_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    arrayNo_trunc_fu_966_p2 <= std_logic_vector(unsigned(tmp_27_fu_940_p1) + unsigned(tmp_25_fu_956_p1));
    exitcond_flatten_fu_874_p2 <= "1" when (indvar_flatten_reg_290 = ap_const_lv5_1E) else "0";
    exitcond_fu_886_p2 <= "1" when (y_reg_312 = ap_const_lv2_3) else "0";

    gmem2_AWVALID_assign_proc : process(ap_CS_fsm_state8, grp_load_unsigned_char_s_fu_739_m_axi_data_local_AWVALID, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            gmem2_AWVALID <= grp_load_unsigned_char_s_fu_739_m_axi_data_local_AWVALID;
        else 
            gmem2_AWVALID <= ap_const_logic_0;
        end if; 
    end process;


    gmem2_BREADY_assign_proc : process(ap_CS_fsm_state8, grp_load_unsigned_char_s_fu_739_m_axi_data_local_BREADY, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            gmem2_BREADY <= grp_load_unsigned_char_s_fu_739_m_axi_data_local_BREADY;
        else 
            gmem2_BREADY <= ap_const_logic_0;
        end if; 
    end process;


    gmem2_WVALID_assign_proc : process(ap_CS_fsm_state8, grp_load_unsigned_char_s_fu_739_m_axi_data_local_WVALID, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            gmem2_WVALID <= grp_load_unsigned_char_s_fu_739_m_axi_data_local_WVALID;
        else 
            gmem2_WVALID <= ap_const_logic_0;
        end if; 
    end process;


    gmem_ARVALID_assign_proc : process(ap_CS_fsm_state5, tmp_s_fu_1558_p2, grp_load_unsigned_long_s_fu_721_m_axi_data_dram_ARVALID, ap_CS_fsm_state6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or ((tmp_s_fu_1558_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5)))) then 
            gmem_ARVALID <= grp_load_unsigned_long_s_fu_721_m_axi_data_dram_ARVALID;
        else 
            gmem_ARVALID <= ap_const_logic_0;
        end if; 
    end process;


    gmem_RREADY_assign_proc : process(ap_CS_fsm_state5, tmp_s_fu_1558_p2, grp_load_unsigned_long_s_fu_721_m_axi_data_dram_RREADY, ap_CS_fsm_state6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or ((tmp_s_fu_1558_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5)))) then 
            gmem_RREADY <= grp_load_unsigned_long_s_fu_721_m_axi_data_dram_RREADY;
        else 
            gmem_RREADY <= ap_const_logic_0;
        end if; 
    end process;

    grp_compute_fu_647_ap_start <= grp_compute_fu_647_ap_start_reg;
    grp_load_unsigned_char_s_fu_739_ap_start <= grp_load_unsigned_char_s_fu_739_ap_start_reg;
    grp_load_unsigned_long_s_fu_721_ap_start <= grp_load_unsigned_long_s_fu_721_ap_start_reg;
    i_fu_1589_p2 <= std_logic_vector(unsigned(ap_const_lv15_708) + unsigned(p_0_rec_reg_635));
    indvar_flatten_next_fu_880_p2 <= std_logic_vector(unsigned(indvar_flatten_reg_290) + unsigned(ap_const_lv5_1));
    local_knn_mat_0_0_4_fu_1419_p5 <= tmp_1_fu_960_p2(4 downto 3);
    local_knn_mat_0_1_4_fu_1433_p5 <= tmp_1_fu_960_p2(4 downto 3);
    local_knn_mat_0_2_4_fu_1447_p5 <= tmp_1_fu_960_p2(4 downto 3);
    local_knn_mat_0_3_4_fu_1461_p5 <= tmp_1_fu_960_p2(4 downto 3);
    local_knn_mat_1_0_4_fu_1343_p5 <= tmp_1_fu_960_p2(4 downto 3);
    local_knn_mat_1_1_4_fu_1357_p5 <= tmp_1_fu_960_p2(4 downto 3);
    local_knn_mat_1_2_4_fu_1371_p5 <= tmp_1_fu_960_p2(4 downto 3);
    local_knn_mat_1_3_4_fu_1385_p5 <= tmp_1_fu_960_p2(4 downto 3);
    local_knn_mat_2_0_4_fu_1267_p5 <= tmp_1_fu_960_p2(4 downto 3);
    local_knn_mat_2_1_4_fu_1281_p5 <= tmp_1_fu_960_p2(4 downto 3);
    local_knn_mat_2_2_4_fu_1295_p5 <= tmp_1_fu_960_p2(4 downto 3);
    local_knn_mat_2_3_4_fu_1309_p5 <= tmp_1_fu_960_p2(4 downto 3);
    local_knn_mat_3_0_4_fu_1191_p5 <= tmp_1_fu_960_p2(4 downto 3);
    local_knn_mat_3_1_4_fu_1205_p5 <= tmp_1_fu_960_p2(4 downto 3);
    local_knn_mat_3_2_4_fu_1219_p5 <= tmp_1_fu_960_p2(4 downto 3);
    local_knn_mat_3_3_4_fu_1233_p5 <= tmp_1_fu_960_p2(4 downto 3);
    local_knn_mat_4_0_4_fu_1115_p5 <= tmp_1_fu_960_p2(4 downto 3);
    local_knn_mat_4_1_4_fu_1129_p5 <= tmp_1_fu_960_p2(4 downto 3);
    local_knn_mat_4_2_4_fu_1143_p5 <= tmp_1_fu_960_p2(4 downto 3);
    local_knn_mat_4_3_4_fu_1157_p5 <= tmp_1_fu_960_p2(4 downto 3);
    local_knn_mat_5_0_4_fu_1039_p5 <= tmp_1_fu_960_p2(4 downto 3);
    local_knn_mat_5_1_4_fu_1053_p5 <= tmp_1_fu_960_p2(4 downto 3);
    local_knn_mat_5_2_4_fu_1067_p5 <= tmp_1_fu_960_p2(4 downto 3);
    local_knn_mat_5_3_4_fu_1081_p5 <= tmp_1_fu_960_p2(4 downto 3);
    local_knn_mat_6_0_4_fu_982_p5 <= tmp_1_fu_960_p2(4 downto 3);
    local_knn_mat_6_1_4_fu_996_p5 <= tmp_1_fu_960_p2(4 downto 3);
    local_knn_mat_6_2_4_fu_1010_p5 <= tmp_1_fu_960_p2(4 downto 3);
    local_knn_mat_7_0_4_fu_1495_p5 <= tmp_1_fu_960_p2(4 downto 3);
    local_knn_mat_7_1_4_fu_1509_p5 <= tmp_1_fu_960_p2(4 downto 3);
    local_knn_mat_7_2_4_fu_1523_p5 <= tmp_1_fu_960_p2(4 downto 3);
    local_num_elements_fu_1580_p3 <= 
        tmp_28_fu_1570_p1 when (tmp_i_fu_1574_p2(0) = '1') else 
        ap_const_lv11_708;

    p_01_address0_assign_proc : process(ap_CS_fsm_state8, grp_compute_fu_647_train_images_0_address0, grp_load_unsigned_long_s_fu_721_data_local_0_address0, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            p_01_address0 <= grp_load_unsigned_long_s_fu_721_data_local_0_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            p_01_address0 <= grp_compute_fu_647_train_images_0_address0;
        else 
            p_01_address0 <= "XXXXXXXX";
        end if; 
    end process;


    p_01_ce0_assign_proc : process(ap_CS_fsm_state8, grp_compute_fu_647_train_images_0_ce0, grp_load_unsigned_long_s_fu_721_data_local_0_ce0, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            p_01_ce0 <= grp_load_unsigned_long_s_fu_721_data_local_0_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            p_01_ce0 <= grp_compute_fu_647_train_images_0_ce0;
        else 
            p_01_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    p_01_we0_assign_proc : process(grp_load_unsigned_long_s_fu_721_data_local_0_we0, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            p_01_we0 <= grp_load_unsigned_long_s_fu_721_data_local_0_we0;
        else 
            p_01_we0 <= ap_const_logic_0;
        end if; 
    end process;


    p_1_address0_assign_proc : process(ap_CS_fsm_state8, grp_compute_fu_647_train_images_1_address0, grp_load_unsigned_long_s_fu_721_data_local_1_address0, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            p_1_address0 <= grp_load_unsigned_long_s_fu_721_data_local_1_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            p_1_address0 <= grp_compute_fu_647_train_images_1_address0;
        else 
            p_1_address0 <= "XXXXXXXX";
        end if; 
    end process;


    p_1_ce0_assign_proc : process(ap_CS_fsm_state8, grp_compute_fu_647_train_images_1_ce0, grp_load_unsigned_long_s_fu_721_data_local_1_ce0, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            p_1_ce0 <= grp_load_unsigned_long_s_fu_721_data_local_1_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            p_1_ce0 <= grp_compute_fu_647_train_images_1_ce0;
        else 
            p_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    p_1_we0_assign_proc : process(grp_load_unsigned_long_s_fu_721_data_local_1_we0, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            p_1_we0 <= grp_load_unsigned_long_s_fu_721_data_local_1_we0;
        else 
            p_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    p_2_address0_assign_proc : process(ap_CS_fsm_state8, grp_compute_fu_647_train_images_2_address0, grp_load_unsigned_long_s_fu_721_data_local_2_address0, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            p_2_address0 <= grp_load_unsigned_long_s_fu_721_data_local_2_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            p_2_address0 <= grp_compute_fu_647_train_images_2_address0;
        else 
            p_2_address0 <= "XXXXXXXX";
        end if; 
    end process;


    p_2_ce0_assign_proc : process(ap_CS_fsm_state8, grp_compute_fu_647_train_images_2_ce0, grp_load_unsigned_long_s_fu_721_data_local_2_ce0, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            p_2_ce0 <= grp_load_unsigned_long_s_fu_721_data_local_2_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            p_2_ce0 <= grp_compute_fu_647_train_images_2_ce0;
        else 
            p_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    p_2_we0_assign_proc : process(grp_load_unsigned_long_s_fu_721_data_local_2_we0, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            p_2_we0 <= grp_load_unsigned_long_s_fu_721_data_local_2_we0;
        else 
            p_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    p_3_address0_assign_proc : process(ap_CS_fsm_state8, grp_compute_fu_647_train_images_3_address0, grp_load_unsigned_long_s_fu_721_data_local_3_address0, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            p_3_address0 <= grp_load_unsigned_long_s_fu_721_data_local_3_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            p_3_address0 <= grp_compute_fu_647_train_images_3_address0;
        else 
            p_3_address0 <= "XXXXXXXX";
        end if; 
    end process;


    p_3_ce0_assign_proc : process(ap_CS_fsm_state8, grp_compute_fu_647_train_images_3_ce0, grp_load_unsigned_long_s_fu_721_data_local_3_ce0, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            p_3_ce0 <= grp_load_unsigned_long_s_fu_721_data_local_3_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            p_3_ce0 <= grp_compute_fu_647_train_images_3_ce0;
        else 
            p_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    p_3_we0_assign_proc : process(grp_load_unsigned_long_s_fu_721_data_local_3_we0, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            p_3_we0 <= grp_load_unsigned_long_s_fu_721_data_local_3_we0;
        else 
            p_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    p_4_address0_assign_proc : process(ap_CS_fsm_state8, grp_compute_fu_647_train_images_4_address0, grp_load_unsigned_long_s_fu_721_data_local_4_address0, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            p_4_address0 <= grp_load_unsigned_long_s_fu_721_data_local_4_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            p_4_address0 <= grp_compute_fu_647_train_images_4_address0;
        else 
            p_4_address0 <= "XXXXXXXX";
        end if; 
    end process;


    p_4_ce0_assign_proc : process(ap_CS_fsm_state8, grp_compute_fu_647_train_images_4_ce0, grp_load_unsigned_long_s_fu_721_data_local_4_ce0, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            p_4_ce0 <= grp_load_unsigned_long_s_fu_721_data_local_4_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            p_4_ce0 <= grp_compute_fu_647_train_images_4_ce0;
        else 
            p_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    p_4_we0_assign_proc : process(grp_load_unsigned_long_s_fu_721_data_local_4_we0, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            p_4_we0 <= grp_load_unsigned_long_s_fu_721_data_local_4_we0;
        else 
            p_4_we0 <= ap_const_logic_0;
        end if; 
    end process;


    p_5_address0_assign_proc : process(ap_CS_fsm_state8, grp_compute_fu_647_train_images_5_address0, grp_load_unsigned_long_s_fu_721_data_local_5_address0, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            p_5_address0 <= grp_load_unsigned_long_s_fu_721_data_local_5_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            p_5_address0 <= grp_compute_fu_647_train_images_5_address0;
        else 
            p_5_address0 <= "XXXXXXXX";
        end if; 
    end process;


    p_5_ce0_assign_proc : process(ap_CS_fsm_state8, grp_compute_fu_647_train_images_5_ce0, grp_load_unsigned_long_s_fu_721_data_local_5_ce0, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            p_5_ce0 <= grp_load_unsigned_long_s_fu_721_data_local_5_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            p_5_ce0 <= grp_compute_fu_647_train_images_5_ce0;
        else 
            p_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    p_5_we0_assign_proc : process(grp_load_unsigned_long_s_fu_721_data_local_5_we0, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            p_5_we0 <= grp_load_unsigned_long_s_fu_721_data_local_5_we0;
        else 
            p_5_we0 <= ap_const_logic_0;
        end if; 
    end process;


    p_6_address0_assign_proc : process(ap_CS_fsm_state8, grp_compute_fu_647_train_images_6_address0, grp_load_unsigned_long_s_fu_721_data_local_6_address0, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            p_6_address0 <= grp_load_unsigned_long_s_fu_721_data_local_6_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            p_6_address0 <= grp_compute_fu_647_train_images_6_address0;
        else 
            p_6_address0 <= "XXXXXXXX";
        end if; 
    end process;


    p_6_ce0_assign_proc : process(ap_CS_fsm_state8, grp_compute_fu_647_train_images_6_ce0, grp_load_unsigned_long_s_fu_721_data_local_6_ce0, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            p_6_ce0 <= grp_load_unsigned_long_s_fu_721_data_local_6_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            p_6_ce0 <= grp_compute_fu_647_train_images_6_ce0;
        else 
            p_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    p_6_we0_assign_proc : process(grp_load_unsigned_long_s_fu_721_data_local_6_we0, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            p_6_we0 <= grp_load_unsigned_long_s_fu_721_data_local_6_we0;
        else 
            p_6_we0 <= ap_const_logic_0;
        end if; 
    end process;


    p_7_address0_assign_proc : process(ap_CS_fsm_state8, grp_compute_fu_647_train_images_7_address0, grp_load_unsigned_long_s_fu_721_data_local_7_address0, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            p_7_address0 <= grp_load_unsigned_long_s_fu_721_data_local_7_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            p_7_address0 <= grp_compute_fu_647_train_images_7_address0;
        else 
            p_7_address0 <= "XXXXXXXX";
        end if; 
    end process;


    p_7_ce0_assign_proc : process(ap_CS_fsm_state8, grp_compute_fu_647_train_images_7_ce0, grp_load_unsigned_long_s_fu_721_data_local_7_ce0, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            p_7_ce0 <= grp_load_unsigned_long_s_fu_721_data_local_7_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            p_7_ce0 <= grp_compute_fu_647_train_images_7_ce0;
        else 
            p_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    p_7_we0_assign_proc : process(grp_load_unsigned_long_s_fu_721_data_local_7_we0, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            p_7_we0 <= grp_load_unsigned_long_s_fu_721_data_local_7_we0;
        else 
            p_7_we0 <= ap_const_logic_0;
        end if; 
    end process;

    p_rec_fu_1719_p2 <= std_logic_vector(unsigned(ap_const_lv5_3) + unsigned(p_01_rec_reg_623));
    p_shl_cast_fu_864_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl_fu_856_p3),7));
    p_shl_cast_mid1_fu_918_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl_mid1_fu_910_p3),7));
    p_shl_fu_856_p3 <= (x_reg_301 & ap_const_lv2_0);
    p_shl_mid1_fu_910_p3 <= (x_s_fu_900_p2 & ap_const_lv2_0);
    tmp_1_fu_960_p2 <= std_logic_vector(unsigned(y_cast_fu_952_p1) + unsigned(tmp_26_fu_936_p1));
    tmp_25_fu_956_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_mid2_fu_892_p3),3));
    tmp_26_fu_936_p1 <= tmp_cast_mid2_v_fu_928_p3(5 - 1 downto 0);
    tmp_27_fu_940_p1 <= tmp_cast_mid2_v_fu_928_p3(3 - 1 downto 0);
    tmp_28_fu_1570_p1 <= a_read_assign_fu_1564_p2(11 - 1 downto 0);
    tmp_cast_mid2_v_fu_928_p3 <= 
        tmp_mid1_fu_922_p2 when (exitcond_fu_886_p2(0) = '1') else 
        tmp_fu_868_p2;
    tmp_fu_868_p2 <= std_logic_vector(unsigned(p_shl_cast_fu_864_p1) - unsigned(x_cast_fu_852_p1));
    tmp_i_fu_1574_p2 <= "1" when (unsigned(a_read_assign_fu_1564_p2) < unsigned(ap_const_lv15_708)) else "0";
    tmp_mid1_fu_922_p2 <= std_logic_vector(unsigned(p_shl_cast_mid1_fu_918_p1) - unsigned(x_cast_mid1_fu_906_p1));
    tmp_s_fu_1558_p2 <= "1" when (unsigned(p_0_rec_reg_635) < unsigned(ap_const_lv15_4650)) else "0";
    x_cast_fu_852_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(x_reg_301),7));
    x_cast_mid1_fu_906_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(x_s_fu_900_p2),7));
    x_mid2_fu_944_p3 <= 
        x_s_fu_900_p2 when (exitcond_fu_886_p2(0) = '1') else 
        x_reg_301;
    x_s_fu_900_p2 <= std_logic_vector(unsigned(ap_const_lv4_1) + unsigned(x_reg_301));
    y_1_fu_1552_p2 <= std_logic_vector(unsigned(y_mid2_fu_892_p3) + unsigned(ap_const_lv2_1));
    y_cast_fu_952_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_mid2_fu_892_p3),5));
    y_mid2_fu_892_p3 <= 
        ap_const_lv2_0 when (exitcond_fu_886_p2(0) = '1') else 
        y_reg_312;
end behav;
